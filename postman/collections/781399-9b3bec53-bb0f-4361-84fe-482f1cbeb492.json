{
	"info": {
		"_postman_id": "781399-9b3bec53-bb0f-4361-84fe-482f1cbeb492",
		"name": "Clerk Backend API",
		"description": "The Clerk REST Backend API, meant to be accessed by backend servers.\n\n### Versions\n\nWhen the API changes in a way that isn't compatible with older versions, a new version is released.\nEach version is identified by its release date, e.g. `2025-04-10`. For more information, please see [Clerk API Versions](https://clerk.com/docs/versioning/available-versions).\n\nPlease see https://clerk.com/docs for more information.\n\nContact Support:\n Name: Clerk Platform Team\n Email: support@clerk.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "interstitial",
					"item": [
						{
							"name": "Returns the markup for the interstitial page",
							"id": "781399-9c6dcac0-0eee-4d39-b21b-3ba4d16b41d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/public/interstitial?frontendApi=string&frontend_api=string&publishable_key=string&proxy_url=string&domain=string&sign_in_url=string&use_domain_for_script=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"public",
										"interstitial"
									],
									"query": [
										{
											"key": "frontendApi",
											"value": "string",
											"description": "Please use `frontend_api` instead"
										},
										{
											"key": "frontend_api",
											"value": "string",
											"description": "The Frontend API key of your instance"
										},
										{
											"key": "publishable_key",
											"value": "string",
											"description": "The publishable key of your instance"
										},
										{
											"key": "proxy_url",
											"value": "string",
											"description": "The proxy URL of your instance"
										},
										{
											"key": "domain",
											"value": "string",
											"description": "The domain of your instance"
										},
										{
											"key": "sign_in_url",
											"value": "string",
											"description": "The sign in URL of your instance"
										},
										{
											"key": "use_domain_for_script",
											"value": "true",
											"description": "Whether to use the domain for the script URL"
										}
									]
								},
								"description": "The Clerk interstitial endpoint serves an html page that loads clerk.js in order to check the user's authentication state.\nIt is used by Clerk SDKs when the user's authentication state cannot be immediately determined."
							},
							"response": [
								{
									"id": "781399-ec60b498-15fe-4481-bf3b-3253874b8b59",
									"name": "The interstitial page markup",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/public/interstitial?frontendApi=string&frontend_api=string&publishable_key=string&proxy_url=string&domain=string&sign_in_url=string&use_domain_for_script=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"interstitial"
											],
											"query": [
												{
													"description": "Please use `frontend_api` instead",
													"key": "frontendApi",
													"value": "string"
												},
												{
													"description": "The Frontend API key of your instance",
													"key": "frontend_api",
													"value": "string"
												},
												{
													"description": "The publishable key of your instance",
													"key": "publishable_key",
													"value": "string"
												},
												{
													"description": "The proxy URL of your instance",
													"key": "proxy_url",
													"value": "string"
												},
												{
													"description": "The domain of your instance",
													"key": "domain",
													"value": "string"
												},
												{
													"description": "The sign in URL of your instance",
													"key": "sign_in_url",
													"value": "string"
												},
												{
													"description": "Whether to use the domain for the script URL",
													"key": "use_domain_for_script",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "781399-7bdcc0a9-d886-4eeb-9d0c-e1bce72ec75a",
									"name": "A required query parameter is missing",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/public/interstitial?frontendApi=string&frontend_api=string&publishable_key=string&proxy_url=string&domain=string&sign_in_url=string&use_domain_for_script=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"interstitial"
											],
											"query": [
												{
													"description": "Please use `frontend_api` instead",
													"key": "frontendApi",
													"value": "string"
												},
												{
													"description": "The Frontend API key of your instance",
													"key": "frontend_api",
													"value": "string"
												},
												{
													"description": "The publishable key of your instance",
													"key": "publishable_key",
													"value": "string"
												},
												{
													"description": "The proxy URL of your instance",
													"key": "proxy_url",
													"value": "string"
												},
												{
													"description": "The domain of your instance",
													"key": "domain",
													"value": "string"
												},
												{
													"description": "The sign in URL of your instance",
													"key": "sign_in_url",
													"value": "string"
												},
												{
													"description": "Whether to use the domain for the script URL",
													"key": "use_domain_for_script",
													"value": "true"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "781399-fea56291-37c7-4ad0-9e62-2d06333aa1fe",
									"name": "An infinite redirect loop was detected",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/public/interstitial?frontendApi=string&frontend_api=string&publishable_key=string&proxy_url=string&domain=string&sign_in_url=string&use_domain_for_script=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"public",
												"interstitial"
											],
											"query": [
												{
													"description": "Please use `frontend_api` instead",
													"key": "frontendApi",
													"value": "string"
												},
												{
													"description": "The Frontend API key of your instance",
													"key": "frontend_api",
													"value": "string"
												},
												{
													"description": "The publishable key of your instance",
													"key": "publishable_key",
													"value": "string"
												},
												{
													"description": "The proxy URL of your instance",
													"key": "proxy_url",
													"value": "string"
												},
												{
													"description": "The domain of your instance",
													"key": "domain",
													"value": "string"
												},
												{
													"description": "The sign in URL of your instance",
													"key": "sign_in_url",
													"value": "string"
												},
												{
													"description": "Whether to use the domain for the script URL",
													"key": "use_domain_for_script",
													"value": "true"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "781399-bf50d355-b420-4a33-9849-1cedf2c9173f"
				}
			],
			"id": "781399-465b3fc7-95d4-488b-82c2-50fcb7b1a8c6"
		},
		{
			"name": "jwks",
			"item": [
				{
					"name": "Retrieve the JSON Web Key Set of the instance",
					"id": "781399-712c442b-81a7-4ed6-adf0-d9f4851924f4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/jwks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"jwks"
							]
						},
						"description": "Retrieve the JSON Web Key Set of the instance"
					},
					"response": [
						{
							"id": "781399-131130c2-da43-401a-8950-b1a29056f6f7",
							"name": "Get the JSON Web Key Set",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/jwks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"jwks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"keys\": [\n    {\n      \"kid\": \"string\",\n      \"alg\": \"string\",\n      \"use\": \"string\",\n      \"kty\": \"OKP\",\n      \"crv\": \"Ed25519\",\n      \"x\": \"string\",\n      \"d\": \"string\",\n      \"x5c\": [\n        \"string\",\n        \"string\"\n      ],\n      \"x5t\": \"string\",\n      \"x5t#S256\": \"string\",\n      \"x5u\": \"string\"\n    },\n    {\n      \"kid\": \"string\",\n      \"alg\": \"string\",\n      \"use\": \"string\",\n      \"kty\": \"RSA\",\n      \"n\": \"string\",\n      \"e\": \"string\",\n      \"x5c\": [\n        \"string\",\n        \"string\"\n      ],\n      \"x5t\": \"string\",\n      \"x5t#S256\": \"string\",\n      \"x5u\": \"string\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "781399-3f054c5d-9019-475f-b137-2f9f43e793bf"
		},
		{
			"name": "aws_credentials",
			"item": [],
			"id": "781399-0f4b7cf5-dc76-4959-bc5b-aa734891fb40"
		},
		{
			"name": "clients",
			"item": [
				{
					"name": "verify",
					"item": [
						{
							"name": "Verify a client",
							"id": "781399-1d27a702-0471-404d-af49-2fd4ab8d64a8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/clients/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										"verify"
									]
								},
								"description": "Verifies the client in the provided token"
							},
							"response": [
								{
									"id": "781399-cde4d477-6e17-4a97-8b70-401aa102ca16",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												"verify"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"client\",\n  \"id\": \"string\",\n  \"session_ids\": [\n    \"string\",\n    \"string\"\n  ],\n  \"sessions\": [\n    {\n      \"object\": \"session\",\n      \"id\": \"string\",\n      \"user_id\": \"string\",\n      \"client_id\": \"string\",\n      \"status\": \"ended\",\n      \"last_active_at\": 7525,\n      \"expire_at\": 8123,\n      \"abandon_at\": 8341,\n      \"updated_at\": 7717,\n      \"created_at\": 6252,\n      \"actor\": {},\n      \"last_active_organization_id\": \"string\",\n      \"latest_activity\": {\n        \"id\": \"string\",\n        \"object\": \"string\",\n        \"is_mobile\": true,\n        \"device_type\": \"string\",\n        \"browser_name\": \"string\",\n        \"browser_version\": \"string\",\n        \"ip_address\": \"string\",\n        \"city\": \"string\",\n        \"country\": \"string\"\n      },\n      \"tasks\": [\n        {\n          \"key\": \"string\"\n        },\n        {\n          \"key\": \"string\"\n        }\n      ]\n    },\n    {\n      \"object\": \"session\",\n      \"id\": \"string\",\n      \"user_id\": \"string\",\n      \"client_id\": \"string\",\n      \"status\": \"pending\",\n      \"last_active_at\": 66,\n      \"expire_at\": 1377,\n      \"abandon_at\": 3964,\n      \"updated_at\": 5956,\n      \"created_at\": 7416,\n      \"actor\": {},\n      \"last_active_organization_id\": \"string\",\n      \"latest_activity\": {\n        \"id\": \"string\",\n        \"object\": \"string\",\n        \"is_mobile\": true,\n        \"device_type\": \"string\",\n        \"browser_name\": \"string\",\n        \"browser_version\": \"string\",\n        \"ip_address\": \"string\",\n        \"city\": \"string\",\n        \"country\": \"string\"\n      },\n      \"tasks\": [\n        {\n          \"key\": \"string\"\n        },\n        {\n          \"key\": \"string\"\n        }\n      ]\n    }\n  ],\n  \"sign_in_id\": \"string\",\n  \"sign_up_id\": \"string\",\n  \"last_active_session_id\": \"string\",\n  \"last_authentication_strategy\": \"string\",\n  \"updated_at\": 4445,\n  \"created_at\": 5084\n}"
								},
								{
									"id": "781399-e96a7751-bda1-4e31-acb1-4a847feef92b",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												"verify"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-5ddc9b00-81e7-4ba9-8a00-ef3ee85d3c52",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												"verify"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-142ae83a-8f46-40b2-9075-4f283f4cd3c8",
									"name": "Resource not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/clients/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												"verify"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-2080ee0f-4f66-47ed-904a-c6d4464b59d7"
				},
				{
					"name": "{client_id}",
					"item": [
						{
							"name": "Get a client",
							"id": "781399-199c07fa-15b1-4a74-87f3-8a04012a19ff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients",
										":client_id"
									],
									"variable": [
										{
											"id": "1b54c594-5996-4078-932f-18d969d31471",
											"key": "client_id",
											"value": "string",
											"description": "Client ID."
										}
									]
								},
								"description": "Returns the details of a client."
							},
							"response": [
								{
									"id": "781399-f779cae1-57c9-432b-9713-70b5f21f34f2",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:client_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":client_id"
											],
											"variable": [
												{
													"key": "client_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"client\",\n  \"id\": \"string\",\n  \"session_ids\": [\n    \"string\",\n    \"string\"\n  ],\n  \"sessions\": [\n    {\n      \"object\": \"session\",\n      \"id\": \"string\",\n      \"user_id\": \"string\",\n      \"client_id\": \"string\",\n      \"status\": \"ended\",\n      \"last_active_at\": 7525,\n      \"expire_at\": 8123,\n      \"abandon_at\": 8341,\n      \"updated_at\": 7717,\n      \"created_at\": 6252,\n      \"actor\": {},\n      \"last_active_organization_id\": \"string\",\n      \"latest_activity\": {\n        \"id\": \"string\",\n        \"object\": \"string\",\n        \"is_mobile\": true,\n        \"device_type\": \"string\",\n        \"browser_name\": \"string\",\n        \"browser_version\": \"string\",\n        \"ip_address\": \"string\",\n        \"city\": \"string\",\n        \"country\": \"string\"\n      },\n      \"tasks\": [\n        {\n          \"key\": \"string\"\n        },\n        {\n          \"key\": \"string\"\n        }\n      ]\n    },\n    {\n      \"object\": \"session\",\n      \"id\": \"string\",\n      \"user_id\": \"string\",\n      \"client_id\": \"string\",\n      \"status\": \"pending\",\n      \"last_active_at\": 66,\n      \"expire_at\": 1377,\n      \"abandon_at\": 3964,\n      \"updated_at\": 5956,\n      \"created_at\": 7416,\n      \"actor\": {},\n      \"last_active_organization_id\": \"string\",\n      \"latest_activity\": {\n        \"id\": \"string\",\n        \"object\": \"string\",\n        \"is_mobile\": true,\n        \"device_type\": \"string\",\n        \"browser_name\": \"string\",\n        \"browser_version\": \"string\",\n        \"ip_address\": \"string\",\n        \"city\": \"string\",\n        \"country\": \"string\"\n      },\n      \"tasks\": [\n        {\n          \"key\": \"string\"\n        },\n        {\n          \"key\": \"string\"\n        }\n      ]\n    }\n  ],\n  \"sign_in_id\": \"string\",\n  \"sign_up_id\": \"string\",\n  \"last_active_session_id\": \"string\",\n  \"last_authentication_strategy\": \"string\",\n  \"updated_at\": 4445,\n  \"created_at\": 5084\n}"
								},
								{
									"id": "781399-50160fd6-3bd5-419b-b5f6-37f9ba45acd7",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:client_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":client_id"
											],
											"variable": [
												{
													"key": "client_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-fb1b16e9-a814-423d-a481-685a6915b1d5",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:client_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":client_id"
											],
											"variable": [
												{
													"key": "client_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-4220e6e5-ab89-4908-b4a1-91162f6050d0",
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/clients/:client_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"clients",
												":client_id"
											],
											"variable": [
												{
													"key": "client_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-33db3799-7581-4a64-809a-4542621ee3d2"
				},
				{
					"name": "List all clients",
					"id": "781399-c90cd857-04da-463d-9049-0221cacfb604",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/clients?paginated=true&limit=10&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clients"
							],
							"query": [
								{
									"key": "paginated",
									"value": "true",
									"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								}
							]
						},
						"description": "Returns a list of all clients. The clients are returned sorted by creation date,\nwith the newest clients appearing first.\nWarning: the endpoint is being deprecated and will be removed in future versions."
					},
					"response": [
						{
							"id": "781399-ac308615-d5f1-4bc4-9f3d-8c6a798980e9",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients?paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									],
									"query": [
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n  {\n    \"object\": \"client\",\n    \"id\": \"string\",\n    \"session_ids\": [\n      \"string\",\n      \"string\"\n    ],\n    \"sessions\": [\n      {\n        \"object\": \"session\",\n        \"id\": \"string\",\n        \"user_id\": \"string\",\n        \"client_id\": \"string\",\n        \"status\": \"ended\",\n        \"last_active_at\": 2892,\n        \"expire_at\": 5203,\n        \"abandon_at\": 9697,\n        \"updated_at\": 9031,\n        \"created_at\": 3686,\n        \"actor\": {},\n        \"last_active_organization_id\": \"string\",\n        \"latest_activity\": {\n          \"id\": \"string\",\n          \"object\": \"string\",\n          \"is_mobile\": false,\n          \"device_type\": \"string\",\n          \"browser_name\": \"string\",\n          \"browser_version\": \"string\",\n          \"ip_address\": \"string\",\n          \"city\": \"string\",\n          \"country\": \"string\"\n        },\n        \"tasks\": [\n          {\n            \"key\": \"string\"\n          },\n          {\n            \"key\": \"string\"\n          }\n        ]\n      },\n      {\n        \"object\": \"session\",\n        \"id\": \"string\",\n        \"user_id\": \"string\",\n        \"client_id\": \"string\",\n        \"status\": \"revoked\",\n        \"last_active_at\": 2702,\n        \"expire_at\": 1651,\n        \"abandon_at\": 7435,\n        \"updated_at\": 3558,\n        \"created_at\": 5271,\n        \"actor\": {},\n        \"last_active_organization_id\": \"string\",\n        \"latest_activity\": {\n          \"id\": \"string\",\n          \"object\": \"string\",\n          \"is_mobile\": false,\n          \"device_type\": \"string\",\n          \"browser_name\": \"string\",\n          \"browser_version\": \"string\",\n          \"ip_address\": \"string\",\n          \"city\": \"string\",\n          \"country\": \"string\"\n        },\n        \"tasks\": [\n          {\n            \"key\": \"string\"\n          },\n          {\n            \"key\": \"string\"\n          }\n        ]\n      }\n    ],\n    \"sign_in_id\": \"string\",\n    \"sign_up_id\": \"string\",\n    \"last_active_session_id\": \"string\",\n    \"last_authentication_strategy\": \"string\",\n    \"updated_at\": 8800,\n    \"created_at\": 5308\n  },\n  {\n    \"object\": \"client\",\n    \"id\": \"string\",\n    \"session_ids\": [\n      \"string\",\n      \"string\"\n    ],\n    \"sessions\": [\n      {\n        \"object\": \"session\",\n        \"id\": \"string\",\n        \"user_id\": \"string\",\n        \"client_id\": \"string\",\n        \"status\": \"replaced\",\n        \"last_active_at\": 4951,\n        \"expire_at\": 453,\n        \"abandon_at\": 3102,\n        \"updated_at\": 5164,\n        \"created_at\": 6326,\n        \"actor\": {},\n        \"last_active_organization_id\": \"string\",\n        \"latest_activity\": {\n          \"id\": \"string\",\n          \"object\": \"string\",\n          \"is_mobile\": true,\n          \"device_type\": \"string\",\n          \"browser_name\": \"string\",\n          \"browser_version\": \"string\",\n          \"ip_address\": \"string\",\n          \"city\": \"string\",\n          \"country\": \"string\"\n        },\n        \"tasks\": [\n          {\n            \"key\": \"string\"\n          },\n          {\n            \"key\": \"string\"\n          }\n        ]\n      },\n      {\n        \"object\": \"session\",\n        \"id\": \"string\",\n        \"user_id\": \"string\",\n        \"client_id\": \"string\",\n        \"status\": \"abandoned\",\n        \"last_active_at\": 9649,\n        \"expire_at\": 312,\n        \"abandon_at\": 8038,\n        \"updated_at\": 1553,\n        \"created_at\": 6009,\n        \"actor\": {},\n        \"last_active_organization_id\": \"string\",\n        \"latest_activity\": {\n          \"id\": \"string\",\n          \"object\": \"string\",\n          \"is_mobile\": true,\n          \"device_type\": \"string\",\n          \"browser_name\": \"string\",\n          \"browser_version\": \"string\",\n          \"ip_address\": \"string\",\n          \"city\": \"string\",\n          \"country\": \"string\"\n        },\n        \"tasks\": [\n          {\n            \"key\": \"string\"\n          },\n          {\n            \"key\": \"string\"\n          }\n        ]\n      }\n    ],\n    \"sign_in_id\": \"string\",\n    \"sign_up_id\": \"string\",\n    \"last_active_session_id\": \"string\",\n    \"last_authentication_strategy\": \"string\",\n    \"updated_at\": 9821,\n    \"created_at\": 350\n  }\n]"
						},
						{
							"id": "781399-eda34741-d39b-4cdd-8f05-d628a4dd088d",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients?paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									],
									"query": [
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-8a52c4f9-5a7f-455c-a2ca-8c6861396d04",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients?paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									],
									"query": [
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-b08f48ee-2fe8-4a32-a11d-79aa0622c554",
							"name": "The endpoint is considered deprecated and is pending removal.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients?paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									],
									"query": [
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-d03d4d16-daa1-4441-956a-b7f0c6b72892",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients?paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									],
									"query": [
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-fbc188b3-fceb-4791-a72b-19f2ece039cd"
		},
		{
			"name": "email_addresses",
			"item": [
				{
					"name": "{email_address_id}",
					"item": [
						{
							"name": "Retrieve an email address",
							"id": "781399-77b43300-61db-4268-ba33-7e17d3930bb2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/email_addresses/:email_address_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"email_addresses",
										":email_address_id"
									],
									"variable": [
										{
											"id": "355f3508-5280-4357-980b-9e84784ff803",
											"key": "email_address_id",
											"value": "string",
											"description": "The ID of the email address to retrieve"
										}
									]
								},
								"description": "Returns the details of an email address."
							},
							"response": [
								{
									"id": "781399-e7d189f9-eab3-4044-bb88-1893ea6de070",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"email_address\",\n  \"email_address\": \"string\",\n  \"verification\": {\n    \"status\": \"verified\",\n    \"strategy\": \"ticket\",\n    \"attempts\": 3746,\n    \"expire_at\": 7929,\n    \"object\": \"verification_ticket\",\n    \"verified_at_client\": \"string\"\n  },\n  \"linked_to\": [\n    {\n      \"type\": \"oauth_eejrrdj\",\n      \"id\": \"string\"\n    },\n    {\n      \"type\": \"oauth_nerc\",\n      \"id\": \"string\"\n    }\n  ],\n  \"reserved\": true,\n  \"created_at\": 8273,\n  \"updated_at\": 1096,\n  \"id\": \"string\",\n  \"matches_sso_connection\": true\n}"
								},
								{
									"id": "781399-505f943c-e975-4e01-8420-ad0fc86d2506",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-6d6b0b7f-a56a-4c76-9268-8940ff1f2ad8",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-0d48a843-31cb-4486-a9ce-8899c9b4ba3e",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-e942b920-07f0-4930-9113-6c1b2855f64a",
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete an email address",
							"id": "781399-43af4921-7352-4a9f-aedc-0aa75dfae822",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/email_addresses/:email_address_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"email_addresses",
										":email_address_id"
									],
									"variable": [
										{
											"id": "4a9c06e7-bc62-42ce-ad06-155eb3723ac2",
											"key": "email_address_id",
											"value": "string",
											"description": "The ID of the email address to delete"
										}
									]
								},
								"description": "Delete the email address with the given ID"
							},
							"response": [
								{
									"id": "781399-4d630f57-71ed-4497-a391-a3c395058ede",
									"name": "Deleted Object",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
								},
								{
									"id": "781399-53d12721-9dd6-4919-8e71-ee86b0a0bd55",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-388776a7-9243-459d-9463-664c9466bc0a",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-4f56a14a-84c4-46d0-9546-f9bd3d3ea0f9",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-d81444fd-3d64-4c34-aa62-0c76014635f1",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update an email address",
							"id": "781399-6e5d32de-738d-4390-8d4b-542069f41384",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"verified\": false,\n  \"primary\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/email_addresses/:email_address_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"email_addresses",
										":email_address_id"
									],
									"variable": [
										{
											"id": "f6c2e7e1-a60b-41e5-a5c6-cb6a2729534a",
											"key": "email_address_id",
											"value": "string",
											"description": "The ID of the email address to update"
										}
									]
								},
								"description": "Updates an email address."
							},
							"response": [
								{
									"id": "781399-eccf4356-d97c-411e-a8d0-6abd264d27c6",
									"name": "Success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"verified\": false,\n  \"primary\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"email_address\",\n  \"email_address\": \"string\",\n  \"verification\": {\n    \"status\": \"verified\",\n    \"strategy\": \"ticket\",\n    \"attempts\": 3746,\n    \"expire_at\": 7929,\n    \"object\": \"verification_ticket\",\n    \"verified_at_client\": \"string\"\n  },\n  \"linked_to\": [\n    {\n      \"type\": \"oauth_eejrrdj\",\n      \"id\": \"string\"\n    },\n    {\n      \"type\": \"oauth_nerc\",\n      \"id\": \"string\"\n    }\n  ],\n  \"reserved\": true,\n  \"created_at\": 8273,\n  \"updated_at\": 1096,\n  \"id\": \"string\",\n  \"matches_sso_connection\": true\n}"
								},
								{
									"id": "781399-a4660876-3280-4b85-b78a-cbdf403789c1",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"verified\": false,\n  \"primary\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-d572c12a-f608-4709-92d7-90ea90c00dd6",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"verified\": false,\n  \"primary\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-a1193b57-4a1e-4248-8103-2e03a0201bfd",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"verified\": false,\n  \"primary\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-5ed4593e-2f40-4b0a-b308-93a34da744e3",
									"name": "Resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"verified\": false,\n  \"primary\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/email_addresses/:email_address_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"email_addresses",
												":email_address_id"
											],
											"variable": [
												{
													"key": "email_address_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-b8be5fa0-f658-486d-9863-c6d18083f0c4"
				},
				{
					"name": "Create an email address",
					"id": "781399-d8db37fc-3bd5-4893-83f8-d7549b87a58c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"string\",\n  \"email_address\": \"string\",\n  \"verified\": true,\n  \"primary\": true\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/email_addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"email_addresses"
							]
						},
						"description": "Create a new email address"
					},
					"response": [
						{
							"id": "781399-13619001-dad9-4445-815d-65476044bd17",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"email_address\": \"string\",\n  \"verified\": true,\n  \"primary\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/email_addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"email_addresses"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"email_address\",\n  \"email_address\": \"string\",\n  \"verification\": {\n    \"status\": \"verified\",\n    \"strategy\": \"ticket\",\n    \"attempts\": 3746,\n    \"expire_at\": 7929,\n    \"object\": \"verification_ticket\",\n    \"verified_at_client\": \"string\"\n  },\n  \"linked_to\": [\n    {\n      \"type\": \"oauth_eejrrdj\",\n      \"id\": \"string\"\n    },\n    {\n      \"type\": \"oauth_nerc\",\n      \"id\": \"string\"\n    }\n  ],\n  \"reserved\": true,\n  \"created_at\": 8273,\n  \"updated_at\": 1096,\n  \"id\": \"string\",\n  \"matches_sso_connection\": true\n}"
						},
						{
							"id": "781399-6ffe651f-db6f-4b17-ac6b-4e2b3218dc6f",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"email_address\": \"string\",\n  \"verified\": true,\n  \"primary\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/email_addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"email_addresses"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-7147845c-6933-41d2-8bd4-00e50cfbced4",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"email_address\": \"string\",\n  \"verified\": true,\n  \"primary\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/email_addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"email_addresses"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-6265ba8a-e85e-4df2-9bf8-ff722864da97",
							"name": "Authorization invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"email_address\": \"string\",\n  \"verified\": true,\n  \"primary\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/email_addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"email_addresses"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-ed7421ae-c7f7-4202-a6a4-b02efeda10b7",
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"email_address\": \"string\",\n  \"verified\": true,\n  \"primary\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/email_addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"email_addresses"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-42d77ba1-e959-41b8-9da7-94f750b78a95",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"email_address\": \"string\",\n  \"verified\": true,\n  \"primary\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/email_addresses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"email_addresses"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-178a7e5b-3bd9-4d86-95fd-d37254727588"
		},
		{
			"name": "phone_numbers",
			"item": [
				{
					"name": "{phone_number_id}",
					"item": [
						{
							"name": "Retrieve a phone number",
							"id": "781399-8ace0c2f-8f79-4e55-9a21-db017e3eaf25",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"phone_numbers",
										":phone_number_id"
									],
									"variable": [
										{
											"id": "414326c0-47ce-4b19-9d5a-9d53be511385",
											"key": "phone_number_id",
											"value": "string",
											"description": "The ID of the phone number to retrieve"
										}
									]
								},
								"description": "Returns the details of a phone number"
							},
							"response": [
								{
									"id": "781399-9189b068-164b-4b20-8161-bda0a4c01d28",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"phone_number\",\n  \"phone_number\": \"string\",\n  \"verification\": {\n    \"status\": \"unverified\",\n    \"strategy\": \"reset_password_email_code\",\n    \"attempts\": 8408,\n    \"expire_at\": 7347,\n    \"object\": \"verification_otp\",\n    \"verified_at_client\": \"string\"\n  },\n  \"linked_to\": [\n    {\n      \"type\": \"oauth_sf\",\n      \"id\": \"string\"\n    },\n    {\n      \"type\": \"oauth_qxqudwz\",\n      \"id\": \"string\"\n    }\n  ],\n  \"reserved\": true,\n  \"created_at\": 2176,\n  \"updated_at\": 4065,\n  \"id\": \"string\",\n  \"reserved_for_second_factor\": false,\n  \"default_second_factor\": true,\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ]\n}"
								},
								{
									"id": "781399-4dff1fd8-3e43-4a74-86e6-39019f3f47b4",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-0932744f-6e8d-4f87-b964-dd5e422e5b06",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-cd18bee5-62f2-4065-afab-e6f8c8bf2585",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-0177cb4d-3059-4392-ba5a-ed1233624132",
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete a phone number",
							"id": "781399-73cea65f-98ec-46ae-9802-28b16d40b83c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"phone_numbers",
										":phone_number_id"
									],
									"variable": [
										{
											"id": "6e12e782-b602-4c43-a489-9a2372cc7c60",
											"key": "phone_number_id",
											"value": "string",
											"description": "The ID of the phone number to delete"
										}
									]
								},
								"description": "Delete the phone number with the given ID"
							},
							"response": [
								{
									"id": "781399-5c9190aa-e0a3-45ae-95ba-029e4cb602c7",
									"name": "Deleted Object",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
								},
								{
									"id": "781399-412e5d0c-61fe-44d6-b1cf-c65bd1c4accf",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-9a99d896-fcae-41d3-bcfb-311995e58053",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-8bb4d724-7c4a-4dbc-8a10-33ef90bc1b3a",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-0b141154-a595-4f51-8078-621f33a430c8",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update a phone number",
							"id": "781399-45f09ae7-f8ba-49e0-8f3f-13bac582b651",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"verified\": false,\n  \"primary\": true,\n  \"reserved_for_second_factor\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"phone_numbers",
										":phone_number_id"
									],
									"variable": [
										{
											"id": "a3824427-358a-4846-8914-081e645dd1e1",
											"key": "phone_number_id",
											"value": "string",
											"description": "The ID of the phone number to update"
										}
									]
								},
								"description": "Updates a phone number"
							},
							"response": [
								{
									"id": "781399-a220f6e7-5277-44ad-a996-0b0863687417",
									"name": "Success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"verified\": false,\n  \"primary\": true,\n  \"reserved_for_second_factor\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"phone_number\",\n  \"phone_number\": \"string\",\n  \"verification\": {\n    \"status\": \"unverified\",\n    \"strategy\": \"reset_password_email_code\",\n    \"attempts\": 8408,\n    \"expire_at\": 7347,\n    \"object\": \"verification_otp\",\n    \"verified_at_client\": \"string\"\n  },\n  \"linked_to\": [\n    {\n      \"type\": \"oauth_sf\",\n      \"id\": \"string\"\n    },\n    {\n      \"type\": \"oauth_qxqudwz\",\n      \"id\": \"string\"\n    }\n  ],\n  \"reserved\": true,\n  \"created_at\": 2176,\n  \"updated_at\": 4065,\n  \"id\": \"string\",\n  \"reserved_for_second_factor\": false,\n  \"default_second_factor\": true,\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ]\n}"
								},
								{
									"id": "781399-e8a2129d-f214-4c78-ad13-41954386e09c",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"verified\": false,\n  \"primary\": true,\n  \"reserved_for_second_factor\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-eb24ddd3-9198-4ad6-8c11-fe16f6b640a6",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"verified\": false,\n  \"primary\": true,\n  \"reserved_for_second_factor\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-008e4bc9-6037-44c6-a221-29f18f565f66",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"verified\": false,\n  \"primary\": true,\n  \"reserved_for_second_factor\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-a09a21f4-4186-495c-ae50-8b9cb9a1a49f",
									"name": "Resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"verified\": false,\n  \"primary\": true,\n  \"reserved_for_second_factor\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/phone_numbers/:phone_number_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"phone_numbers",
												":phone_number_id"
											],
											"variable": [
												{
													"key": "phone_number_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-fd7728fb-5b09-4203-aeaf-52755f6b3476"
				},
				{
					"name": "Create a phone number",
					"id": "781399-921a7265-45a7-4ca3-b2a2-20d1bbca9b01",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"string\",\n  \"phone_number\": \"string\",\n  \"verified\": true,\n  \"primary\": true,\n  \"reserved_for_second_factor\": false\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/phone_numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"phone_numbers"
							]
						},
						"description": "Create a new phone number"
					},
					"response": [
						{
							"id": "781399-be5963f2-31d2-427b-ae57-8615efa892c4",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"phone_number\": \"string\",\n  \"verified\": true,\n  \"primary\": true,\n  \"reserved_for_second_factor\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/phone_numbers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"phone_numbers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"phone_number\",\n  \"phone_number\": \"string\",\n  \"verification\": {\n    \"status\": \"unverified\",\n    \"strategy\": \"reset_password_email_code\",\n    \"attempts\": 8408,\n    \"expire_at\": 7347,\n    \"object\": \"verification_otp\",\n    \"verified_at_client\": \"string\"\n  },\n  \"linked_to\": [\n    {\n      \"type\": \"oauth_sf\",\n      \"id\": \"string\"\n    },\n    {\n      \"type\": \"oauth_qxqudwz\",\n      \"id\": \"string\"\n    }\n  ],\n  \"reserved\": true,\n  \"created_at\": 2176,\n  \"updated_at\": 4065,\n  \"id\": \"string\",\n  \"reserved_for_second_factor\": false,\n  \"default_second_factor\": true,\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ]\n}"
						},
						{
							"id": "781399-26b23a82-7273-4ea6-9f5f-33bda4c1a2bc",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"phone_number\": \"string\",\n  \"verified\": true,\n  \"primary\": true,\n  \"reserved_for_second_factor\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/phone_numbers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"phone_numbers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-cb31f37f-5612-4c3d-8813-a5a80e70e751",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"phone_number\": \"string\",\n  \"verified\": true,\n  \"primary\": true,\n  \"reserved_for_second_factor\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/phone_numbers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"phone_numbers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-4342e3d2-f33d-4ec8-81e1-4070ed1dcd4a",
							"name": "Authorization invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"phone_number\": \"string\",\n  \"verified\": true,\n  \"primary\": true,\n  \"reserved_for_second_factor\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/phone_numbers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"phone_numbers"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-b2de9017-7e77-44fb-89f0-1974a744b0ab",
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"phone_number\": \"string\",\n  \"verified\": true,\n  \"primary\": true,\n  \"reserved_for_second_factor\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/phone_numbers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"phone_numbers"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-17d2a4d8-21de-4aa4-8d92-1796a064e078",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"phone_number\": \"string\",\n  \"verified\": true,\n  \"primary\": true,\n  \"reserved_for_second_factor\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/phone_numbers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"phone_numbers"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-2524bdae-702f-4159-b434-22a5519edff5"
		},
		{
			"name": "sessions",
			"item": [
				{
					"name": "{session_id}",
					"item": [
						{
							"name": "refresh",
							"item": [
								{
									"name": "Refresh a session",
									"id": "781399-7892f6b4-2c54-4524-acb0-a670123e4720",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"expired_token\": \"string\",\n  \"refresh_token\": \"string\",\n  \"request_origin\": \"string\",\n  \"request_headers\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": \"string\"\n  },\n  \"format\": \"token\",\n  \"request_originating_ip\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id",
												"refresh"
											],
											"variable": [
												{
													"id": "5725096f-a683-4e9c-8cc9-88dfa157bedb",
													"key": "session_id",
													"value": "string",
													"description": "The ID of the session"
												}
											]
										},
										"description": "Refreshes a session by creating a new session token. A 401 is returned when there\nare validation errors, which signals the SDKs to fall back to the handshake flow."
									},
									"response": [
										{
											"id": "781399-1d1ad2a1-d95c-4128-98bb-539b12e14c0a",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"expired_token\": \"string\",\n  \"refresh_token\": \"string\",\n  \"request_origin\": \"string\",\n  \"request_headers\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": \"string\"\n  },\n  \"format\": \"token\",\n  \"request_originating_ip\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"refresh"
													],
													"variable": [
														{
															"key": "session_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"token\",\n  \"jwt\": \"string\"\n}"
										},
										{
											"id": "781399-7cc5c6fe-d511-43f9-90e6-4e01cc110537",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"expired_token\": \"string\",\n  \"refresh_token\": \"string\",\n  \"request_origin\": \"string\",\n  \"request_headers\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": \"string\"\n  },\n  \"format\": \"token\",\n  \"request_originating_ip\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"refresh"
													],
													"variable": [
														{
															"key": "session_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-cbc2a625-cc19-4f6e-928d-509b2ffebc24",
											"name": "Authentication invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"expired_token\": \"string\",\n  \"refresh_token\": \"string\",\n  \"request_origin\": \"string\",\n  \"request_headers\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": \"string\"\n  },\n  \"format\": \"token\",\n  \"request_originating_ip\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/refresh",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"refresh"
													],
													"variable": [
														{
															"key": "session_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-a32e6f10-b630-4023-9d6c-62daf6b80345"
						},
						{
							"name": "revoke",
							"item": [
								{
									"name": "Revoke a session",
									"id": "781399-c267437e-998c-4163-be24-e8f18c806556",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id",
												"revoke"
											],
											"variable": [
												{
													"id": "bf4c57f7-e284-457a-af31-d3b0f18ecbf4",
													"key": "session_id",
													"value": "string",
													"description": "The ID of the session"
												}
											]
										},
										"description": "Sets the status of a session as \"revoked\", which is an unauthenticated state.\nIn multi-session mode, a revoked session will still be returned along with its client object, however the user will need to sign in again."
									},
									"response": [
										{
											"id": "781399-0f346c3b-867d-4874-94fd-e667b253ac59",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"revoke"
													],
													"variable": [
														{
															"key": "session_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"session\",\n  \"id\": \"string\",\n  \"user_id\": \"string\",\n  \"client_id\": \"string\",\n  \"status\": \"pending\",\n  \"last_active_at\": 8814,\n  \"expire_at\": 9587,\n  \"abandon_at\": 9905,\n  \"updated_at\": 5231,\n  \"created_at\": 8114,\n  \"actor\": {},\n  \"last_active_organization_id\": \"string\",\n  \"latest_activity\": {\n    \"id\": \"string\",\n    \"object\": \"string\",\n    \"is_mobile\": true,\n    \"device_type\": \"string\",\n    \"browser_name\": \"string\",\n    \"browser_version\": \"string\",\n    \"ip_address\": \"string\",\n    \"city\": \"string\",\n    \"country\": \"string\"\n  },\n  \"tasks\": [\n    {\n      \"key\": \"string\"\n    },\n    {\n      \"key\": \"string\"\n    }\n  ]\n}"
										},
										{
											"id": "781399-300723c9-216d-4e6c-8b7f-cee0f38caa81",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"revoke"
													],
													"variable": [
														{
															"key": "session_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-318c3cf5-8b90-435d-bfad-8777743cd52c",
											"name": "Authentication invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"revoke"
													],
													"variable": [
														{
															"key": "session_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-c80d741f-1985-45ae-87f8-8a02df340237",
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"revoke"
													],
													"variable": [
														{
															"key": "session_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-55566809-cd44-4e34-87ae-d877125909e8"
						},
						{
							"name": "tokens",
							"item": [
								{
									"name": "{template_name}",
									"item": [
										{
											"name": "Create a session token from a JWT template",
											"id": "781399-55384514-47aa-4c30-af94-4ea8c3ed61cb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"expires_in_seconds\": 62342174\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/tokens/:template_name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"tokens",
														":template_name"
													],
													"variable": [
														{
															"id": "9f4ac8f3-351f-4ed8-8fc6-4da92bf9a385",
															"key": "session_id",
															"value": "string",
															"description": "The ID of the session"
														},
														{
															"id": "0d6dd83a-c769-4454-8b24-dff67c0b3f28",
															"key": "template_name",
															"value": "string",
															"description": "The name of the JWT template defined in your instance (e.g. `custom_hasura`)."
														}
													]
												},
												"description": "Creates a JSON Web Token (JWT) based on a session and a JWT Template name defined for your instance"
											},
											"response": [
												{
													"id": "781399-5beddaad-dfde-4ae6-8c38-df33bd90b3d5",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"expires_in_seconds\": 62342174\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/tokens/:template_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"tokens",
																":template_name"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "template_name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"token\",\n  \"jwt\": \"string\"\n}"
												},
												{
													"id": "781399-829e696e-9004-4d1d-b642-3e165db269b6",
													"name": "Authentication invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"expires_in_seconds\": 62342174\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/tokens/:template_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"tokens",
																":template_name"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "template_name"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-41d2f1c7-32c1-49c8-9f99-d46ad9d0c565",
													"name": "Resource not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"expires_in_seconds\": 62342174\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/sessions/:session_id/tokens/:template_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"sessions",
																":session_id",
																"tokens",
																":template_name"
															],
															"variable": [
																{
																	"key": "session_id"
																},
																{
																	"key": "template_name"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-8ed8ab51-925b-450b-a8b5-571de0c5dce9"
								},
								{
									"name": "Create a session token",
									"id": "781399-60d7893b-4f4b-44ce-9b46-8af155e3a8d4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"expires_in_seconds\": 86834820\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id/tokens",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id",
												"tokens"
											],
											"variable": [
												{
													"id": "e32f3867-2743-4ce5-a195-482b75b47893",
													"key": "session_id",
													"value": "string",
													"description": "The ID of the session"
												}
											]
										},
										"description": "Creates a session JSON Web Token (JWT) based on a session."
									},
									"response": [
										{
											"id": "781399-1cd2b574-6866-4ff7-b658-714f8321f8ee",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"expires_in_seconds\": 86834820\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/tokens",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"tokens"
													],
													"variable": [
														{
															"key": "session_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"token\",\n  \"jwt\": \"string\"\n}"
										},
										{
											"id": "781399-cbac1017-113b-44ac-86fe-ff2d7c746e07",
											"name": "Authentication invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"expires_in_seconds\": 86834820\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/tokens",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"tokens"
													],
													"variable": [
														{
															"key": "session_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-ac85270e-c466-472d-ab2e-70aebd5689cd",
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"expires_in_seconds\": 86834820\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/sessions/:session_id/tokens",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sessions",
														":session_id",
														"tokens"
													],
													"variable": [
														{
															"key": "session_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-3daaccc0-9b8c-4568-8631-b63afa4f3847"
						},
						{
							"name": "Retrieve a session",
							"id": "781399-aa774b36-d62d-4bab-82ea-fe0711184596",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sessions/:session_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions",
										":session_id"
									],
									"variable": [
										{
											"id": "15ac6727-5ca8-434a-9414-8f580ff9ad8b",
											"key": "session_id",
											"value": "string",
											"description": "The ID of the session"
										}
									]
								},
								"description": "Retrieve the details of a session"
							},
							"response": [
								{
									"id": "781399-c4cea14f-0c9f-4adf-9a07-4a79d57b30f5",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"session\",\n  \"id\": \"string\",\n  \"user_id\": \"string\",\n  \"client_id\": \"string\",\n  \"status\": \"pending\",\n  \"last_active_at\": 8814,\n  \"expire_at\": 9587,\n  \"abandon_at\": 9905,\n  \"updated_at\": 5231,\n  \"created_at\": 8114,\n  \"actor\": {},\n  \"last_active_organization_id\": \"string\",\n  \"latest_activity\": {\n    \"id\": \"string\",\n    \"object\": \"string\",\n    \"is_mobile\": true,\n    \"device_type\": \"string\",\n    \"browser_name\": \"string\",\n    \"browser_version\": \"string\",\n    \"ip_address\": \"string\",\n    \"city\": \"string\",\n    \"country\": \"string\"\n  },\n  \"tasks\": [\n    {\n      \"key\": \"string\"\n    },\n    {\n      \"key\": \"string\"\n    }\n  ]\n}"
								},
								{
									"id": "781399-e1b5e77c-0562-48ad-82e5-59da344a8c5c",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-e992f364-b764-4089-b1d0-cabf8cfe47b7",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-74f23f94-dd26-4af3-8071-0c208113a3bb",
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sessions/:session_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sessions",
												":session_id"
											],
											"variable": [
												{
													"key": "session_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-8c4ef5af-4d05-4260-b5af-cc3ab1fa1349"
				},
				{
					"name": "List all sessions",
					"id": "781399-e38913ed-f736-4fd3-bed2-bfddf5cd9d97",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/sessions?client_id=string&user_id=string&status=abandoned&paginated=true&limit=10&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sessions"
							],
							"query": [
								{
									"key": "client_id",
									"value": "string",
									"description": "List sessions for the given client"
								},
								{
									"key": "user_id",
									"value": "string",
									"description": "List sessions for the given user"
								},
								{
									"key": "status",
									"value": "abandoned",
									"description": "Filter sessions by the provided status"
								},
								{
									"key": "paginated",
									"value": "true",
									"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								}
							]
						},
						"description": "Returns a list of all sessions.\nThe sessions are returned sorted by creation date, with the newest sessions appearing first.\n**Deprecation Notice (2024-01-01):** All parameters were initially considered optional, however\nmoving forward at least one of `client_id` or `user_id` parameters should be provided."
					},
					"response": [
						{
							"id": "781399-ad758432-9fcc-4e96-8c22-b18c31ddcea6",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sessions?client_id=string&user_id=string&status=abandoned&paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions"
									],
									"query": [
										{
											"description": "List sessions for the given client",
											"key": "client_id",
											"value": "string"
										},
										{
											"description": "List sessions for the given user",
											"key": "user_id",
											"value": "string"
										},
										{
											"description": "Filter sessions by the provided status",
											"key": "status",
											"value": "abandoned"
										},
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n  {\n    \"object\": \"session\",\n    \"id\": \"string\",\n    \"user_id\": \"string\",\n    \"client_id\": \"string\",\n    \"status\": \"replaced\",\n    \"last_active_at\": 760,\n    \"expire_at\": 6682,\n    \"abandon_at\": 1621,\n    \"updated_at\": 7281,\n    \"created_at\": 255,\n    \"actor\": {},\n    \"last_active_organization_id\": \"string\",\n    \"latest_activity\": {\n      \"id\": \"string\",\n      \"object\": \"string\",\n      \"is_mobile\": true,\n      \"device_type\": \"string\",\n      \"browser_name\": \"string\",\n      \"browser_version\": \"string\",\n      \"ip_address\": \"string\",\n      \"city\": \"string\",\n      \"country\": \"string\"\n    },\n    \"tasks\": [\n      {\n        \"key\": \"string\"\n      },\n      {\n        \"key\": \"string\"\n      }\n    ]\n  },\n  {\n    \"object\": \"session\",\n    \"id\": \"string\",\n    \"user_id\": \"string\",\n    \"client_id\": \"string\",\n    \"status\": \"expired\",\n    \"last_active_at\": 7208,\n    \"expire_at\": 4511,\n    \"abandon_at\": 6927,\n    \"updated_at\": 6925,\n    \"created_at\": 5609,\n    \"actor\": {},\n    \"last_active_organization_id\": \"string\",\n    \"latest_activity\": {\n      \"id\": \"string\",\n      \"object\": \"string\",\n      \"is_mobile\": false,\n      \"device_type\": \"string\",\n      \"browser_name\": \"string\",\n      \"browser_version\": \"string\",\n      \"ip_address\": \"string\",\n      \"city\": \"string\",\n      \"country\": \"string\"\n    },\n    \"tasks\": [\n      {\n        \"key\": \"string\"\n      },\n      {\n        \"key\": \"string\"\n      }\n    ]\n  }\n]"
						},
						{
							"id": "781399-30a7749f-7087-4ee7-a896-a2e87c7df15a",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sessions?client_id=string&user_id=string&status=abandoned&paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions"
									],
									"query": [
										{
											"description": "List sessions for the given client",
											"key": "client_id",
											"value": "string"
										},
										{
											"description": "List sessions for the given user",
											"key": "user_id",
											"value": "string"
										},
										{
											"description": "Filter sessions by the provided status",
											"key": "status",
											"value": "abandoned"
										},
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-42eb55d0-e46a-434b-a40c-8138f7652b49",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sessions?client_id=string&user_id=string&status=abandoned&paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions"
									],
									"query": [
										{
											"description": "List sessions for the given client",
											"key": "client_id",
											"value": "string"
										},
										{
											"description": "List sessions for the given user",
											"key": "user_id",
											"value": "string"
										},
										{
											"description": "Filter sessions by the provided status",
											"key": "status",
											"value": "abandoned"
										},
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-a4ab79da-fcbb-4444-bcff-bf92b4125550",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sessions?client_id=string&user_id=string&status=abandoned&paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions"
									],
									"query": [
										{
											"description": "List sessions for the given client",
											"key": "client_id",
											"value": "string"
										},
										{
											"description": "List sessions for the given user",
											"key": "user_id",
											"value": "string"
										},
										{
											"description": "Filter sessions by the provided status",
											"key": "status",
											"value": "abandoned"
										},
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				},
				{
					"name": "Create a new active session",
					"id": "781399-c4d3789b-57e6-4c65-9a09-8be40d63d1da",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"string\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sessions"
							]
						},
						"description": "Create a new active session for the provided user ID.\n\n**This operation is intended only for use in testing, and is not available for production instances.** If you are looking to generate a user session from the backend,\nwe recommend using the [Sign-in Tokens](https://clerk.com/docs/reference/backend-api/tag/Sign-in-Tokens#operation/CreateSignInToken) resource instead."
					},
					"response": [
						{
							"id": "781399-dc6ac745-a836-4beb-9f91-0b3c7e46db0b",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"session\",\n  \"id\": \"string\",\n  \"user_id\": \"string\",\n  \"client_id\": \"string\",\n  \"status\": \"pending\",\n  \"last_active_at\": 8814,\n  \"expire_at\": 9587,\n  \"abandon_at\": 9905,\n  \"updated_at\": 5231,\n  \"created_at\": 8114,\n  \"actor\": {},\n  \"last_active_organization_id\": \"string\",\n  \"latest_activity\": {\n    \"id\": \"string\",\n    \"object\": \"string\",\n    \"is_mobile\": true,\n    \"device_type\": \"string\",\n    \"browser_name\": \"string\",\n    \"browser_version\": \"string\",\n    \"ip_address\": \"string\",\n    \"city\": \"string\",\n    \"country\": \"string\"\n  },\n  \"tasks\": [\n    {\n      \"key\": \"string\"\n    },\n    {\n      \"key\": \"string\"\n    }\n  ]\n}"
						},
						{
							"id": "781399-b8aba040-e313-49f6-896c-44b3240d9cee",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-7221a4da-4fbc-4800-afc3-5554748b8b7c",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-f11ae302-d937-4485-82f3-3a69e147e625",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-85595703-b3e8-4e6a-ab6a-aa16a2c5596a",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sessions"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-5496f1e8-5eda-4386-886f-19089bea99d1"
		},
		{
			"name": "templates",
			"item": [
				{
					"name": "{template_type}",
					"item": [
						{
							"name": "{slug}",
							"item": [
								{
									"name": "revert",
									"item": [
										{
											"name": "Revert a template",
											"id": "781399-4272b92a-79e9-4425-8bc7-cff3a3ed5b92",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug/revert",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug",
														"revert"
													],
													"variable": [
														{
															"id": "4190e172-173d-4b71-96bd-f7a1ba4610d4",
															"key": "template_type",
															"value": "email",
															"description": "The type of template to revert"
														},
														{
															"id": "bbadf117-b1ea-4fa9-aabb-698d8bf5527a",
															"key": "slug",
															"value": "string",
															"description": "The slug of the template to revert"
														}
													]
												},
												"description": "Reverts an updated template to its default state"
											},
											"response": [
												{
													"id": "781399-c3c50656-8f69-4cfc-b5f2-2954f89b7fa3",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/revert",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"revert"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": \"string\",\n  \"object\": \"template\",\n  \"instance_id\": \"string\",\n  \"resource_type\": \"string\",\n  \"template_type\": \"string\",\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"position\": 2172,\n  \"can_revert\": true,\n  \"can_delete\": true,\n  \"can_edit_body\": true,\n  \"can_toggle\": false,\n  \"subject\": \"string\",\n  \"markup\": \"string\",\n  \"body\": \"string\",\n  \"available_variables\": [\n    \"string\",\n    \"string\"\n  ],\n  \"required_variables\": [\n    \"string\",\n    \"string\"\n  ],\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\",\n  \"delivered_by_clerk\": false,\n  \"enabled\": false,\n  \"flagged_as_suspicious\": false,\n  \"updated_at\": 3491,\n  \"created_at\": 1244\n}"
												},
												{
													"id": "781399-8f82c9d4-53e8-420f-a70b-173590cb6aa0",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/revert",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"revert"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-c171f783-5863-4450-8ef7-627e78fd1d85",
													"name": "Authentication invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/revert",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"revert"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-65687e17-edf6-40dd-99e3-94eb5e9f4e1a",
													"name": "Payment required",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/revert",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"revert"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "Payment Required",
													"code": 402,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-d73560e4-a2df-42a1-8ade-4841d026cbf9",
													"name": "Resource not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/revert",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"revert"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-cd246700-b562-4e5c-9fed-1c56f9f68978"
								},
								{
									"name": "preview",
									"item": [
										{
											"name": "Preview changes to a template",
											"id": "781399-cb6bb1c2-d190-4de6-ba3b-056ca716ce5f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subject\": \"string\",\n  \"body\": \"string\",\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug/preview",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug",
														"preview"
													],
													"variable": [
														{
															"id": "a9c5568b-1ea4-4de4-80ce-4c3d084071b8",
															"key": "template_type",
															"value": "string",
															"description": "The type of template to preview"
														},
														{
															"id": "40cbb475-4cc5-4e50-99df-e59fc6982d21",
															"key": "slug",
															"value": "string",
															"description": "The slug of the template to preview"
														}
													]
												},
												"description": "Returns a preview of a template for a given template_type, slug and body"
											},
											"response": [
												{
													"id": "781399-3c018890-72e4-42b8-9c32-177c381eaa84",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subject\": \"string\",\n  \"body\": \"string\",\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/preview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"preview"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{}"
												},
												{
													"id": "781399-2f45f7af-5bf8-46ac-acbc-bdd79a317a17",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subject\": \"string\",\n  \"body\": \"string\",\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/preview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"preview"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-7ee8d864-1d40-4b2e-b703-f50c9fe37244",
													"name": "Authentication invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subject\": \"string\",\n  \"body\": \"string\",\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/preview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"preview"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-116755fa-d5f5-48a9-9403-09a577601544",
													"name": "Resource not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subject\": \"string\",\n  \"body\": \"string\",\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/preview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"preview"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-20b6a2ea-1c33-45ce-a5f3-83730c8ab51f",
													"name": "Invalid request parameters",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subject\": \"string\",\n  \"body\": \"string\",\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/preview",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"preview"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-d8077445-7146-4bcc-a26e-2a28e7b3bfcc"
								},
								{
									"name": "toggle_delivery",
									"item": [
										{
											"name": "Toggle the delivery by Clerk for a template of a given type and slug",
											"id": "781399-acec3e29-10ca-40ae-9181-1dd871411935",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"delivered_by_clerk\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug/toggle_delivery",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug",
														"toggle_delivery"
													],
													"variable": [
														{
															"id": "4db354b4-2c2a-4570-8441-c9ee84d59d03",
															"key": "template_type",
															"value": "email",
															"description": "The type of template to toggle delivery for"
														},
														{
															"id": "e2ebe981-0d66-482c-9b0e-5cd6f1b2fae8",
															"key": "slug",
															"value": "string",
															"description": "The slug of the template for which to toggle delivery"
														}
													]
												},
												"description": "Toggles the delivery by Clerk for a template of a given type and slug.\nIf disabled, Clerk will not deliver the resulting email or SMS.\nThe app developer will need to listen to the `email.created` or `sms.created` webhooks in order to handle delivery themselves."
											},
											"response": [
												{
													"id": "781399-73a6836c-4673-41ce-855d-0f37370dcdc9",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"delivered_by_clerk\": false\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/toggle_delivery",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"toggle_delivery"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": \"string\",\n  \"object\": \"template\",\n  \"instance_id\": \"string\",\n  \"resource_type\": \"string\",\n  \"template_type\": \"string\",\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"position\": 2172,\n  \"can_revert\": true,\n  \"can_delete\": true,\n  \"can_edit_body\": true,\n  \"can_toggle\": false,\n  \"subject\": \"string\",\n  \"markup\": \"string\",\n  \"body\": \"string\",\n  \"available_variables\": [\n    \"string\",\n    \"string\"\n  ],\n  \"required_variables\": [\n    \"string\",\n    \"string\"\n  ],\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\",\n  \"delivered_by_clerk\": false,\n  \"enabled\": false,\n  \"flagged_as_suspicious\": false,\n  \"updated_at\": 3491,\n  \"created_at\": 1244\n}"
												},
												{
													"id": "781399-0b97da93-2072-4834-8721-f114e1bb6a84",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"delivered_by_clerk\": false\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/toggle_delivery",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"toggle_delivery"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-45686c8e-3d78-405e-8d5f-7cc85a15fdff",
													"name": "Authentication invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"delivered_by_clerk\": false\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/toggle_delivery",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"toggle_delivery"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-1f5e8c65-e0a8-4409-840b-53ff38b3dfd0",
													"name": "Resource not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"delivered_by_clerk\": false\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/templates/:template_type/:slug/toggle_delivery",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"templates",
																":template_type",
																":slug",
																"toggle_delivery"
															],
															"variable": [
																{
																	"key": "template_type"
																},
																{
																	"key": "slug"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-b59cb102-d227-4f0e-98e2-9deff77d6db5"
								},
								{
									"name": "Retrieve a template",
									"id": "781399-58ec242d-f116-4ffc-b617-fccd471a1bc5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/templates/:template_type/:slug",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"templates",
												":template_type",
												":slug"
											],
											"variable": [
												{
													"id": "6b27503b-0656-4a9d-aa27-acfd49b17555",
													"key": "template_type",
													"value": "email",
													"description": "The type of templates to retrieve (email or SMS)"
												},
												{
													"id": "decd9690-5c14-429a-b405-b1236253ae9f",
													"key": "slug",
													"value": "string",
													"description": "The slug (i.e. machine-friendly name) of the template to retrieve"
												}
											]
										},
										"description": "Returns the details of a template"
									},
									"response": [
										{
											"id": "781399-8e7b9773-17d8-4b0f-8938-41fd4fbd502f",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug"
													],
													"variable": [
														{
															"key": "template_type"
														},
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"string\",\n  \"object\": \"template\",\n  \"instance_id\": \"string\",\n  \"resource_type\": \"string\",\n  \"template_type\": \"string\",\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"position\": 2172,\n  \"can_revert\": true,\n  \"can_delete\": true,\n  \"can_edit_body\": true,\n  \"can_toggle\": false,\n  \"subject\": \"string\",\n  \"markup\": \"string\",\n  \"body\": \"string\",\n  \"available_variables\": [\n    \"string\",\n    \"string\"\n  ],\n  \"required_variables\": [\n    \"string\",\n    \"string\"\n  ],\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\",\n  \"delivered_by_clerk\": false,\n  \"enabled\": false,\n  \"flagged_as_suspicious\": false,\n  \"updated_at\": 3491,\n  \"created_at\": 1244\n}"
										},
										{
											"id": "781399-7bc7d43a-0156-489b-8119-8bca1a7dace2",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug"
													],
													"variable": [
														{
															"key": "template_type"
														},
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-b549c76d-31f0-48b1-bf59-3d89114b2d55",
											"name": "Authentication invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug"
													],
													"variable": [
														{
															"key": "template_type"
														},
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-baecb74c-69aa-445f-acb0-98e5ef93499b",
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug"
													],
													"variable": [
														{
															"key": "template_type"
														},
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								},
								{
									"name": "Update a template for a given type and slug",
									"id": "781399-97ef7b1c-f29c-4437-9e21-7336567bf44c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"subject\": \"string\",\n  \"markup\": \"string\",\n  \"body\": \"string\",\n  \"delivered_by_clerk\": true,\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/templates/:template_type/:slug",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"templates",
												":template_type",
												":slug"
											],
											"variable": [
												{
													"id": "b40fa2fd-84ef-4207-9807-8be6435b6aeb",
													"key": "template_type",
													"value": "email",
													"description": "The type of template to update"
												},
												{
													"id": "85fd758f-738a-42d8-80a6-3ef39786c388",
													"key": "slug",
													"value": "string",
													"description": "The slug of the template to update"
												}
											]
										},
										"description": "Updates the existing template of the given type and slug"
									},
									"response": [
										{
											"id": "781399-d5f4defa-8db4-4922-beb6-b60dd2e8d40a",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"subject\": \"string\",\n  \"markup\": \"string\",\n  \"body\": \"string\",\n  \"delivered_by_clerk\": true,\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug"
													],
													"variable": [
														{
															"key": "template_type"
														},
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"string\",\n  \"object\": \"template\",\n  \"instance_id\": \"string\",\n  \"resource_type\": \"string\",\n  \"template_type\": \"string\",\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"position\": 2172,\n  \"can_revert\": true,\n  \"can_delete\": true,\n  \"can_edit_body\": true,\n  \"can_toggle\": false,\n  \"subject\": \"string\",\n  \"markup\": \"string\",\n  \"body\": \"string\",\n  \"available_variables\": [\n    \"string\",\n    \"string\"\n  ],\n  \"required_variables\": [\n    \"string\",\n    \"string\"\n  ],\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\",\n  \"delivered_by_clerk\": false,\n  \"enabled\": false,\n  \"flagged_as_suspicious\": false,\n  \"updated_at\": 3491,\n  \"created_at\": 1244\n}"
										},
										{
											"id": "781399-d542647a-d8b5-4113-85ce-77c43e647d44",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"subject\": \"string\",\n  \"markup\": \"string\",\n  \"body\": \"string\",\n  \"delivered_by_clerk\": true,\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug"
													],
													"variable": [
														{
															"key": "template_type"
														},
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-50fba989-1d87-4fb4-a594-15a31e9e8fd7",
											"name": "Authentication invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"subject\": \"string\",\n  \"markup\": \"string\",\n  \"body\": \"string\",\n  \"delivered_by_clerk\": true,\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug"
													],
													"variable": [
														{
															"key": "template_type"
														},
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-400af4d4-60cb-4897-9c1b-e2e32cae2192",
											"name": "Payment required",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"subject\": \"string\",\n  \"markup\": \"string\",\n  \"body\": \"string\",\n  \"delivered_by_clerk\": true,\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug"
													],
													"variable": [
														{
															"key": "template_type"
														},
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-dce8fe59-01d5-4ba1-a845-376e2ee3bf81",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"subject\": \"string\",\n  \"markup\": \"string\",\n  \"body\": \"string\",\n  \"delivered_by_clerk\": true,\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug"
													],
													"variable": [
														{
															"key": "template_type"
														},
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-a20b2250-bfc7-4490-bc05-d3b8d6760d8f",
											"name": "Resource not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"subject\": \"string\",\n  \"markup\": \"string\",\n  \"body\": \"string\",\n  \"delivered_by_clerk\": true,\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug"
													],
													"variable": [
														{
															"key": "template_type"
														},
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-8c7e48d9-f522-415d-9a20-cc0606e65051",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"subject\": \"string\",\n  \"markup\": \"string\",\n  \"body\": \"string\",\n  \"delivered_by_clerk\": true,\n  \"from_email_name\": \"string\",\n  \"reply_to_email_name\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/templates/:template_type/:slug",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"templates",
														":template_type",
														":slug"
													],
													"variable": [
														{
															"key": "template_type"
														},
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-0dd89638-90b5-45e8-a4b7-40e717d0d3cd"
						},
						{
							"name": "List all templates",
							"id": "781399-50f08f35-3f10-44ee-8d77-93c39df5131a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/templates/:template_type?paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										":template_type"
									],
									"query": [
										{
											"key": "paginated",
											"value": "true",
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated."
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
										}
									],
									"variable": [
										{
											"id": "d586561c-b360-43c7-88a1-9ad7d9a7c420",
											"key": "template_type",
											"value": "email",
											"description": "The type of templates to list (email or SMS)"
										}
									]
								},
								"description": "Returns a list of all templates.\nThe templates are returned sorted by position."
							},
							"response": [
								{
									"id": "781399-1c4d95ce-9bea-499d-9e1e-2ac31e1ef31f",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/templates/:template_type?paginated=true&limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"templates",
												":template_type"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "template_type"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"id\": \"string\",\n    \"object\": \"template\",\n    \"instance_id\": \"string\",\n    \"resource_type\": \"string\",\n    \"template_type\": \"string\",\n    \"name\": \"string\",\n    \"slug\": \"string\",\n    \"position\": 555,\n    \"can_revert\": true,\n    \"can_delete\": true,\n    \"can_edit_body\": true,\n    \"can_toggle\": true,\n    \"subject\": \"string\",\n    \"markup\": \"string\",\n    \"body\": \"string\",\n    \"available_variables\": [\n      \"string\",\n      \"string\"\n    ],\n    \"required_variables\": [\n      \"string\",\n      \"string\"\n    ],\n    \"from_email_name\": \"string\",\n    \"reply_to_email_name\": \"string\",\n    \"delivered_by_clerk\": false,\n    \"enabled\": true,\n    \"flagged_as_suspicious\": true,\n    \"updated_at\": 1705,\n    \"created_at\": 2821\n  },\n  {\n    \"id\": \"string\",\n    \"object\": \"template\",\n    \"instance_id\": \"string\",\n    \"resource_type\": \"string\",\n    \"template_type\": \"string\",\n    \"name\": \"string\",\n    \"slug\": \"string\",\n    \"position\": 3994,\n    \"can_revert\": true,\n    \"can_delete\": true,\n    \"can_edit_body\": true,\n    \"can_toggle\": false,\n    \"subject\": \"string\",\n    \"markup\": \"string\",\n    \"body\": \"string\",\n    \"available_variables\": [\n      \"string\",\n      \"string\"\n    ],\n    \"required_variables\": [\n      \"string\",\n      \"string\"\n    ],\n    \"from_email_name\": \"string\",\n    \"reply_to_email_name\": \"string\",\n    \"delivered_by_clerk\": true,\n    \"enabled\": false,\n    \"flagged_as_suspicious\": true,\n    \"updated_at\": 802,\n    \"created_at\": 971\n  }\n]"
								},
								{
									"id": "781399-96f6066b-b5d7-4b74-bada-5541452bc526",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/templates/:template_type?paginated=true&limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"templates",
												":template_type"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "template_type"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-bb846d66-ee78-439a-a009-5ecf4f26ff39",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/templates/:template_type?paginated=true&limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"templates",
												":template_type"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "template_type"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-9f5ecd88-282d-4dec-a017-a37d41247796",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/templates/:template_type?paginated=true&limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"templates",
												":template_type"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "template_type"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-d48a975f-d94f-4fd3-8b21-1b8303c2b5c0"
				}
			],
			"id": "781399-1b92e50d-4318-4fbe-8549-91e896f3f217"
		},
		{
			"name": "users",
			"item": [
				{
					"name": "count",
					"item": [
						{
							"name": "Count users",
							"id": "781399-5fab8933-488f-44fa-9b11-d99eb4e0b653",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/count?email_address=string&email_address=string&phone_number=string&phone_number=string&external_id=string&external_id=string&username=string&username=string&web3_wallet=string&web3_wallet=string&user_id=string&user_id=string&organization_id=string&organization_id=string&query=string&email_address_query=string&phone_number_query=string&username_query=string&name_query=string&banned=true&last_active_at_before=1700690400000&last_active_at_after=1700690400000&last_active_at_since=1700690400000&created_at_before=1730160000000&created_at_after=1730160000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"count"
									],
									"query": [
										{
											"key": "email_address",
											"value": "string",
											"description": "Counts users with the specified email addresses.\nAccepts up to 100 email addresses.\nAny email addresses not found are ignored."
										},
										{
											"key": "email_address",
											"value": "string",
											"description": "Counts users with the specified email addresses.\nAccepts up to 100 email addresses.\nAny email addresses not found are ignored."
										},
										{
											"key": "phone_number",
											"value": "string",
											"description": "Counts users with the specified phone numbers.\nAccepts up to 100 phone numbers.\nAny phone numbers not found are ignored."
										},
										{
											"key": "phone_number",
											"value": "string",
											"description": "Counts users with the specified phone numbers.\nAccepts up to 100 phone numbers.\nAny phone numbers not found are ignored."
										},
										{
											"key": "external_id",
											"value": "string",
											"description": "Counts users with the specified external IDs.\nAccepts up to 100 external IDs.\nAny external IDs not found are ignored."
										},
										{
											"key": "external_id",
											"value": "string",
											"description": "Counts users with the specified external IDs.\nAccepts up to 100 external IDs.\nAny external IDs not found are ignored."
										},
										{
											"key": "username",
											"value": "string",
											"description": "Counts users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored."
										},
										{
											"key": "username",
											"value": "string",
											"description": "Counts users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored."
										},
										{
											"key": "web3_wallet",
											"value": "string",
											"description": "Counts users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored."
										},
										{
											"key": "web3_wallet",
											"value": "string",
											"description": "Counts users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored."
										},
										{
											"key": "user_id",
											"value": "string",
											"description": "Counts users with the user IDs specified.\nAccepts up to 100 user IDs.\nAny user IDs not found are ignored."
										},
										{
											"key": "user_id",
											"value": "string",
											"description": "Counts users with the user IDs specified.\nAccepts up to 100 user IDs.\nAny user IDs not found are ignored."
										},
										{
											"key": "organization_id",
											"value": "string",
											"description": "Returns users that have memberships to the given organizations. For each organization ID, the `+` and `-`\ncan be prepended to the ID, which denote whether the respective organization should be included or\nexcluded from the result set. Accepts up to 100 organization IDs."
										},
										{
											"key": "organization_id",
											"value": "string",
											"description": "Returns users that have memberships to the given organizations. For each organization ID, the `+` and `-`\ncan be prepended to the ID, which denote whether the respective organization should be included or\nexcluded from the result set. Accepts up to 100 organization IDs."
										},
										{
											"key": "query",
											"value": "string",
											"description": "Counts users that match the given query.\nFor possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user IDs, first and last names.\nThe query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well."
										},
										{
											"key": "email_address_query",
											"value": "string",
											"description": "Counts users with emails that match the given query, via case-insensitive partial match.\nFor example, `email_address_query=ello` will match a user with the email `HELLO@example.com`,\nand will be included in the resulting count."
										},
										{
											"key": "phone_number_query",
											"value": "string",
											"description": "Counts users with phone numbers that match the given query, via case-insensitive partial match.\nFor example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`,\nand will be included in the resulting count."
										},
										{
											"key": "username_query",
											"value": "string",
											"description": "Counts users with usernames that match the given query, via case-insensitive partial match.\nFor example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`,\nand will be included in the resulting count."
										},
										{
											"key": "name_query",
											"value": "string",
											"description": "Returns users with names that match the given query, via case-insensitive partial match."
										},
										{
											"key": "banned",
											"value": "true",
											"description": "Counts users which are either banned (`banned=true`) or not banned (`banned=false`)."
										},
										{
											"key": "last_active_at_before",
											"value": "1700690400000",
											"description": "Returns users whose last session activity was before the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23."
										},
										{
											"key": "last_active_at_after",
											"value": "1700690400000",
											"description": "Returns users whose last session activity was after the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23."
										},
										{
											"key": "last_active_at_since",
											"value": "1700690400000",
											"description": "Returns users that had session activity since the given date.\nExample: use 1700690400000 to retrieve users that had session activity from 2023-11-23 until the current day.\nDeprecated in favor of `last_active_at_after`."
										},
										{
											"key": "created_at_before",
											"value": "1730160000000",
											"description": "Returns users who have been created before the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created before 2024-10-29."
										},
										{
											"key": "created_at_after",
											"value": "1730160000000",
											"description": "Returns users who have been created after the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created after 2024-10-29."
										}
									]
								},
								"description": "Returns a total count of all users that match the given filtering criteria."
							},
							"response": [
								{
									"id": "781399-b2c2fa77-e8d2-4d07-8e7d-61d900f47938",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/count?email_address=string&phone_number=string&external_id=string&username=string&web3_wallet=string&user_id=string&organization_id=string&query=string&email_address_query=string&phone_number_query=string&username_query=string&name_query=string&banned=true&last_active_at_before=1700690400000&last_active_at_after=1700690400000&last_active_at_since=1700690400000&created_at_before=1730160000000&created_at_after=1730160000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"count"
											],
											"query": [
												{
													"description": "Counts users with the specified email addresses.\nAccepts up to 100 email addresses.\nAny email addresses not found are ignored.",
													"key": "email_address",
													"value": "string"
												},
												{
													"description": "Counts users with the specified phone numbers.\nAccepts up to 100 phone numbers.\nAny phone numbers not found are ignored.",
													"key": "phone_number",
													"value": "string"
												},
												{
													"description": "Counts users with the specified external IDs.\nAccepts up to 100 external IDs.\nAny external IDs not found are ignored.",
													"key": "external_id",
													"value": "string"
												},
												{
													"description": "Counts users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored.",
													"key": "username",
													"value": "string"
												},
												{
													"description": "Counts users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored.",
													"key": "web3_wallet",
													"value": "string"
												},
												{
													"description": "Counts users with the user IDs specified.\nAccepts up to 100 user IDs.\nAny user IDs not found are ignored.",
													"key": "user_id",
													"value": "string"
												},
												{
													"description": "Returns users that have memberships to the given organizations. For each organization ID, the `+` and `-`\ncan be prepended to the ID, which denote whether the respective organization should be included or\nexcluded from the result set. Accepts up to 100 organization IDs.",
													"key": "organization_id",
													"value": "string"
												},
												{
													"description": "Counts users that match the given query.\nFor possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user IDs, first and last names.\nThe query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.",
													"key": "query",
													"value": "string"
												},
												{
													"description": "Counts users with emails that match the given query, via case-insensitive partial match.\nFor example, `email_address_query=ello` will match a user with the email `HELLO@example.com`,\nand will be included in the resulting count.",
													"key": "email_address_query",
													"value": "string"
												},
												{
													"description": "Counts users with phone numbers that match the given query, via case-insensitive partial match.\nFor example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`,\nand will be included in the resulting count.",
													"key": "phone_number_query",
													"value": "string"
												},
												{
													"description": "Counts users with usernames that match the given query, via case-insensitive partial match.\nFor example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`,\nand will be included in the resulting count.",
													"key": "username_query",
													"value": "string"
												},
												{
													"description": "Returns users with names that match the given query, via case-insensitive partial match.",
													"key": "name_query",
													"value": "string"
												},
												{
													"description": "Counts users which are either banned (`banned=true`) or not banned (`banned=false`).",
													"key": "banned",
													"value": "true"
												},
												{
													"description": "Returns users whose last session activity was before the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23.",
													"key": "last_active_at_before",
													"value": "1700690400000"
												},
												{
													"description": "Returns users whose last session activity was after the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23.",
													"key": "last_active_at_after",
													"value": "1700690400000"
												},
												{
													"description": "Returns users that had session activity since the given date.\nExample: use 1700690400000 to retrieve users that had session activity from 2023-11-23 until the current day.\nDeprecated in favor of `last_active_at_after`.",
													"key": "last_active_at_since",
													"value": "1700690400000"
												},
												{
													"description": "Returns users who have been created before the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created before 2024-10-29.",
													"key": "created_at_before",
													"value": "1730160000000"
												},
												{
													"description": "Returns users who have been created after the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created after 2024-10-29.",
													"key": "created_at_after",
													"value": "1730160000000"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"total_count\",\n  \"total_count\": 6926\n}"
								},
								{
									"id": "781399-00bfa96a-1b58-49f3-9530-80cb9c54cd49",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/count?email_address=string&phone_number=string&external_id=string&username=string&web3_wallet=string&user_id=string&organization_id=string&query=string&email_address_query=string&phone_number_query=string&username_query=string&name_query=string&banned=true&last_active_at_before=1700690400000&last_active_at_after=1700690400000&last_active_at_since=1700690400000&created_at_before=1730160000000&created_at_after=1730160000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"count"
											],
											"query": [
												{
													"description": "Counts users with the specified email addresses.\nAccepts up to 100 email addresses.\nAny email addresses not found are ignored.",
													"key": "email_address",
													"value": "string"
												},
												{
													"description": "Counts users with the specified phone numbers.\nAccepts up to 100 phone numbers.\nAny phone numbers not found are ignored.",
													"key": "phone_number",
													"value": "string"
												},
												{
													"description": "Counts users with the specified external IDs.\nAccepts up to 100 external IDs.\nAny external IDs not found are ignored.",
													"key": "external_id",
													"value": "string"
												},
												{
													"description": "Counts users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored.",
													"key": "username",
													"value": "string"
												},
												{
													"description": "Counts users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored.",
													"key": "web3_wallet",
													"value": "string"
												},
												{
													"description": "Counts users with the user IDs specified.\nAccepts up to 100 user IDs.\nAny user IDs not found are ignored.",
													"key": "user_id",
													"value": "string"
												},
												{
													"description": "Returns users that have memberships to the given organizations. For each organization ID, the `+` and `-`\ncan be prepended to the ID, which denote whether the respective organization should be included or\nexcluded from the result set. Accepts up to 100 organization IDs.",
													"key": "organization_id",
													"value": "string"
												},
												{
													"description": "Counts users that match the given query.\nFor possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user IDs, first and last names.\nThe query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.",
													"key": "query",
													"value": "string"
												},
												{
													"description": "Counts users with emails that match the given query, via case-insensitive partial match.\nFor example, `email_address_query=ello` will match a user with the email `HELLO@example.com`,\nand will be included in the resulting count.",
													"key": "email_address_query",
													"value": "string"
												},
												{
													"description": "Counts users with phone numbers that match the given query, via case-insensitive partial match.\nFor example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`,\nand will be included in the resulting count.",
													"key": "phone_number_query",
													"value": "string"
												},
												{
													"description": "Counts users with usernames that match the given query, via case-insensitive partial match.\nFor example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`,\nand will be included in the resulting count.",
													"key": "username_query",
													"value": "string"
												},
												{
													"description": "Returns users with names that match the given query, via case-insensitive partial match.",
													"key": "name_query",
													"value": "string"
												},
												{
													"description": "Counts users which are either banned (`banned=true`) or not banned (`banned=false`).",
													"key": "banned",
													"value": "true"
												},
												{
													"description": "Returns users whose last session activity was before the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23.",
													"key": "last_active_at_before",
													"value": "1700690400000"
												},
												{
													"description": "Returns users whose last session activity was after the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23.",
													"key": "last_active_at_after",
													"value": "1700690400000"
												},
												{
													"description": "Returns users that had session activity since the given date.\nExample: use 1700690400000 to retrieve users that had session activity from 2023-11-23 until the current day.\nDeprecated in favor of `last_active_at_after`.",
													"key": "last_active_at_since",
													"value": "1700690400000"
												},
												{
													"description": "Returns users who have been created before the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created before 2024-10-29.",
													"key": "created_at_before",
													"value": "1730160000000"
												},
												{
													"description": "Returns users who have been created after the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created after 2024-10-29.",
													"key": "created_at_after",
													"value": "1730160000000"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-b70fe17b-03c6-465d-a198-9af19d961d85"
				},
				{
					"name": "{user_id}",
					"item": [
						{
							"name": "ban",
							"item": [
								{
									"name": "Ban a user",
									"id": "781399-ea5b6725-ab84-436d-8503-822cce654890",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/ban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"ban"
											],
											"variable": [
												{
													"id": "ac8002c4-3433-415a-9c37-a9ed2fe65fb4",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user to ban"
												}
											]
										},
										"description": "Marks the given user as banned, which means that all their sessions are revoked and they are not allowed to sign in again."
									},
									"response": [
										{
											"id": "781399-85e02554-44fa-4919-9005-83b8a9e55135",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/ban",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"ban"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"string\",\n  \"object\": \"user\",\n  \"username\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"has_image\": true,\n  \"primary_email_address_id\": \"string\",\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"password_enabled\": false,\n  \"two_factor_enabled\": true,\n  \"totp_enabled\": true,\n  \"backup_code_enabled\": false,\n  \"email_addresses\": [\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 3740,\n        \"expire_at\": 795,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_vd\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_rpod\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 4299,\n      \"updated_at\": 6121,\n      \"id\": \"string\",\n      \"matches_sso_connection\": false\n    },\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 654,\n        \"expire_at\": 2299,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_ukptplx\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_ctiorwdcpud\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 8768,\n      \"updated_at\": 6848,\n      \"id\": \"string\",\n      \"matches_sso_connection\": true\n    }\n  ],\n  \"phone_numbers\": [\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"reset_password_email_code\",\n        \"attempts\": 5030,\n        \"expire_at\": 5295,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_xlhs\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_hmfcojuqn\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 6691,\n      \"updated_at\": 2867,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": false,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 1974,\n        \"expire_at\": 1351,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_mkkkho\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_jrkoqwafoj\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 3301,\n      \"updated_at\": 2212,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": true,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ],\n  \"web3_wallets\": [\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_okx_wallet_signature\",\n        \"attempts\": 2661,\n        \"expire_at\": 2991,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2765,\n      \"updated_at\": 2131,\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_base_signature\",\n        \"attempts\": 342,\n        \"expire_at\": 7017,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2851,\n      \"updated_at\": 7003,\n      \"id\": \"string\"\n    }\n  ],\n  \"passkeys\": [\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 4336,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 5670,\n        \"expire_at\": 6420,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 690,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 7963,\n        \"expire_at\": 6633,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    }\n  ],\n  \"external_accounts\": [\n    {\n      \"object\": \"external_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": true,\n        \"key_1\": \"string\"\n      },\n      \"created_at\": 2055,\n      \"updated_at\": 1013,\n      \"verification\": {\n        \"status\": \"transferable\",\n        \"strategy\": \"oauth_xqqgqljqof\",\n        \"attempts\": 1555,\n        \"expire_at\": 5721,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    },\n    {\n      \"object\": \"google_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 9021.765466129193,\n        \"key_1\": 1363,\n        \"key_2\": \"string\"\n      },\n      \"created_at\": 4274,\n      \"updated_at\": 9548,\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"oauth_custom_vk\",\n        \"attempts\": 6794,\n        \"expire_at\": 3143,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    }\n  ],\n  \"saml_accounts\": [\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"saml\",\n        \"attempts\": 7587,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 2544,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 4224,\n      \"public_metadata\": {\n        \"key_0\": 4760\n      },\n      \"saml_connection\": {\n        \"domain\": false\n      }\n    },\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"saml\",\n        \"attempts\": 6824,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 3585,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 1557,\n      \"public_metadata\": {\n        \"key_0\": \"string\",\n        \"key_1\": true\n      },\n      \"saml_connection\": {\n        \"domain\": 9940.292404161679\n      }\n    }\n  ],\n  \"public_metadata\": {\n    \"key_0\": true\n  },\n  \"external_id\": \"string\",\n  \"last_sign_in_at\": 7275,\n  \"banned\": false,\n  \"locked\": true,\n  \"lockout_expires_in_seconds\": 4668,\n  \"verification_attempts_remaining\": 8265,\n  \"created_at\": 4547,\n  \"updated_at\": 7057,\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": false,\n  \"last_active_at\": 1700690400000,\n  \"mfa_enabled_at\": 4422,\n  \"mfa_disabled_at\": 6932,\n  \"legal_accepted_at\": 1700690400000,\n  \"locale\": \"string\",\n  \"profile_image_url\": \"string\",\n  \"image_url\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 9144\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 6532,\n    \"key_1\": 5794.302348985707\n  },\n  \"create_organizations_limit\": 91\n}"
										},
										{
											"id": "781399-73d34bcd-096c-485c-9365-b10b6a63cb0c",
											"name": "Payment required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/ban",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"ban"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-e2c4e84a-6923-4664-98a1-ee0cc8b133b2"
						},
						{
							"name": "unban",
							"item": [
								{
									"name": "Unban a user",
									"id": "781399-93275b31-74b5-462c-8ee8-829524e76f2a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/unban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"unban"
											],
											"variable": [
												{
													"id": "c10e0320-f00e-422f-b600-0c7570063acf",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user to unban"
												}
											]
										},
										"description": "Removes the ban mark from the given user."
									},
									"response": [
										{
											"id": "781399-c3ad6923-25b1-4a96-becf-968b550e49f4",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/unban",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"unban"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"string\",\n  \"object\": \"user\",\n  \"username\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"has_image\": true,\n  \"primary_email_address_id\": \"string\",\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"password_enabled\": false,\n  \"two_factor_enabled\": true,\n  \"totp_enabled\": true,\n  \"backup_code_enabled\": false,\n  \"email_addresses\": [\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 3740,\n        \"expire_at\": 795,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_vd\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_rpod\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 4299,\n      \"updated_at\": 6121,\n      \"id\": \"string\",\n      \"matches_sso_connection\": false\n    },\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 654,\n        \"expire_at\": 2299,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_ukptplx\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_ctiorwdcpud\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 8768,\n      \"updated_at\": 6848,\n      \"id\": \"string\",\n      \"matches_sso_connection\": true\n    }\n  ],\n  \"phone_numbers\": [\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"reset_password_email_code\",\n        \"attempts\": 5030,\n        \"expire_at\": 5295,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_xlhs\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_hmfcojuqn\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 6691,\n      \"updated_at\": 2867,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": false,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 1974,\n        \"expire_at\": 1351,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_mkkkho\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_jrkoqwafoj\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 3301,\n      \"updated_at\": 2212,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": true,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ],\n  \"web3_wallets\": [\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_okx_wallet_signature\",\n        \"attempts\": 2661,\n        \"expire_at\": 2991,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2765,\n      \"updated_at\": 2131,\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_base_signature\",\n        \"attempts\": 342,\n        \"expire_at\": 7017,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2851,\n      \"updated_at\": 7003,\n      \"id\": \"string\"\n    }\n  ],\n  \"passkeys\": [\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 4336,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 5670,\n        \"expire_at\": 6420,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 690,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 7963,\n        \"expire_at\": 6633,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    }\n  ],\n  \"external_accounts\": [\n    {\n      \"object\": \"external_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": true,\n        \"key_1\": \"string\"\n      },\n      \"created_at\": 2055,\n      \"updated_at\": 1013,\n      \"verification\": {\n        \"status\": \"transferable\",\n        \"strategy\": \"oauth_xqqgqljqof\",\n        \"attempts\": 1555,\n        \"expire_at\": 5721,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    },\n    {\n      \"object\": \"google_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 9021.765466129193,\n        \"key_1\": 1363,\n        \"key_2\": \"string\"\n      },\n      \"created_at\": 4274,\n      \"updated_at\": 9548,\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"oauth_custom_vk\",\n        \"attempts\": 6794,\n        \"expire_at\": 3143,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    }\n  ],\n  \"saml_accounts\": [\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"saml\",\n        \"attempts\": 7587,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 2544,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 4224,\n      \"public_metadata\": {\n        \"key_0\": 4760\n      },\n      \"saml_connection\": {\n        \"domain\": false\n      }\n    },\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"saml\",\n        \"attempts\": 6824,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 3585,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 1557,\n      \"public_metadata\": {\n        \"key_0\": \"string\",\n        \"key_1\": true\n      },\n      \"saml_connection\": {\n        \"domain\": 9940.292404161679\n      }\n    }\n  ],\n  \"public_metadata\": {\n    \"key_0\": true\n  },\n  \"external_id\": \"string\",\n  \"last_sign_in_at\": 7275,\n  \"banned\": false,\n  \"locked\": true,\n  \"lockout_expires_in_seconds\": 4668,\n  \"verification_attempts_remaining\": 8265,\n  \"created_at\": 4547,\n  \"updated_at\": 7057,\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": false,\n  \"last_active_at\": 1700690400000,\n  \"mfa_enabled_at\": 4422,\n  \"mfa_disabled_at\": 6932,\n  \"legal_accepted_at\": 1700690400000,\n  \"locale\": \"string\",\n  \"profile_image_url\": \"string\",\n  \"image_url\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 9144\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 6532,\n    \"key_1\": 5794.302348985707\n  },\n  \"create_organizations_limit\": 91\n}"
										},
										{
											"id": "781399-916a337d-89e5-4485-80cf-a6ad34008029",
											"name": "Payment required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/unban",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"unban"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Payment Required",
											"code": 402,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-eb875b74-5422-42b5-900e-d76d1592a82f"
						},
						{
							"name": "lock",
							"item": [
								{
									"name": "Lock a user",
									"id": "781399-2f15e06a-18e8-4efa-a6d1-37455df147b1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/lock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"lock"
											],
											"variable": [
												{
													"id": "e5aacc95-7e93-4b77-a280-80412b2bed61",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user to lock"
												}
											]
										},
										"description": "Marks the given user as locked, which means they are not allowed to sign in again until the lock expires.\nLock duration can be configured in the instance's restrictions settings."
									},
									"response": [
										{
											"id": "781399-bf801426-de84-4639-84ce-c906c0d4318f",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/lock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"lock"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"string\",\n  \"object\": \"user\",\n  \"username\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"has_image\": true,\n  \"primary_email_address_id\": \"string\",\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"password_enabled\": false,\n  \"two_factor_enabled\": true,\n  \"totp_enabled\": true,\n  \"backup_code_enabled\": false,\n  \"email_addresses\": [\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 3740,\n        \"expire_at\": 795,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_vd\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_rpod\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 4299,\n      \"updated_at\": 6121,\n      \"id\": \"string\",\n      \"matches_sso_connection\": false\n    },\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 654,\n        \"expire_at\": 2299,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_ukptplx\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_ctiorwdcpud\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 8768,\n      \"updated_at\": 6848,\n      \"id\": \"string\",\n      \"matches_sso_connection\": true\n    }\n  ],\n  \"phone_numbers\": [\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"reset_password_email_code\",\n        \"attempts\": 5030,\n        \"expire_at\": 5295,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_xlhs\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_hmfcojuqn\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 6691,\n      \"updated_at\": 2867,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": false,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 1974,\n        \"expire_at\": 1351,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_mkkkho\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_jrkoqwafoj\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 3301,\n      \"updated_at\": 2212,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": true,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ],\n  \"web3_wallets\": [\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_okx_wallet_signature\",\n        \"attempts\": 2661,\n        \"expire_at\": 2991,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2765,\n      \"updated_at\": 2131,\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_base_signature\",\n        \"attempts\": 342,\n        \"expire_at\": 7017,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2851,\n      \"updated_at\": 7003,\n      \"id\": \"string\"\n    }\n  ],\n  \"passkeys\": [\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 4336,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 5670,\n        \"expire_at\": 6420,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 690,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 7963,\n        \"expire_at\": 6633,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    }\n  ],\n  \"external_accounts\": [\n    {\n      \"object\": \"external_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": true,\n        \"key_1\": \"string\"\n      },\n      \"created_at\": 2055,\n      \"updated_at\": 1013,\n      \"verification\": {\n        \"status\": \"transferable\",\n        \"strategy\": \"oauth_xqqgqljqof\",\n        \"attempts\": 1555,\n        \"expire_at\": 5721,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    },\n    {\n      \"object\": \"google_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 9021.765466129193,\n        \"key_1\": 1363,\n        \"key_2\": \"string\"\n      },\n      \"created_at\": 4274,\n      \"updated_at\": 9548,\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"oauth_custom_vk\",\n        \"attempts\": 6794,\n        \"expire_at\": 3143,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    }\n  ],\n  \"saml_accounts\": [\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"saml\",\n        \"attempts\": 7587,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 2544,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 4224,\n      \"public_metadata\": {\n        \"key_0\": 4760\n      },\n      \"saml_connection\": {\n        \"domain\": false\n      }\n    },\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"saml\",\n        \"attempts\": 6824,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 3585,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 1557,\n      \"public_metadata\": {\n        \"key_0\": \"string\",\n        \"key_1\": true\n      },\n      \"saml_connection\": {\n        \"domain\": 9940.292404161679\n      }\n    }\n  ],\n  \"public_metadata\": {\n    \"key_0\": true\n  },\n  \"external_id\": \"string\",\n  \"last_sign_in_at\": 7275,\n  \"banned\": false,\n  \"locked\": true,\n  \"lockout_expires_in_seconds\": 4668,\n  \"verification_attempts_remaining\": 8265,\n  \"created_at\": 4547,\n  \"updated_at\": 7057,\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": false,\n  \"last_active_at\": 1700690400000,\n  \"mfa_enabled_at\": 4422,\n  \"mfa_disabled_at\": 6932,\n  \"legal_accepted_at\": 1700690400000,\n  \"locale\": \"string\",\n  \"profile_image_url\": \"string\",\n  \"image_url\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 9144\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 6532,\n    \"key_1\": 5794.302348985707\n  },\n  \"create_organizations_limit\": 91\n}"
										},
										{
											"id": "781399-4ff5d288-a906-4798-a4f0-209d72836b30",
											"name": "Authorization invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/lock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"lock"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-04057449-14d8-47a3-9861-8f3d32aa5888"
						},
						{
							"name": "unlock",
							"item": [
								{
									"name": "Unlock a user",
									"id": "781399-06c55738-71c3-413c-8547-fddeea291fdc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/unlock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"unlock"
											],
											"variable": [
												{
													"id": "13504f0c-97c0-45df-8242-f42e593602e4",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user to unlock"
												}
											]
										},
										"description": "Removes the lock from the given user."
									},
									"response": [
										{
											"id": "781399-7dca4878-8bd3-4de1-aeb3-8af1d48561d4",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/unlock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"unlock"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"string\",\n  \"object\": \"user\",\n  \"username\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"has_image\": true,\n  \"primary_email_address_id\": \"string\",\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"password_enabled\": false,\n  \"two_factor_enabled\": true,\n  \"totp_enabled\": true,\n  \"backup_code_enabled\": false,\n  \"email_addresses\": [\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 3740,\n        \"expire_at\": 795,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_vd\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_rpod\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 4299,\n      \"updated_at\": 6121,\n      \"id\": \"string\",\n      \"matches_sso_connection\": false\n    },\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 654,\n        \"expire_at\": 2299,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_ukptplx\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_ctiorwdcpud\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 8768,\n      \"updated_at\": 6848,\n      \"id\": \"string\",\n      \"matches_sso_connection\": true\n    }\n  ],\n  \"phone_numbers\": [\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"reset_password_email_code\",\n        \"attempts\": 5030,\n        \"expire_at\": 5295,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_xlhs\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_hmfcojuqn\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 6691,\n      \"updated_at\": 2867,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": false,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 1974,\n        \"expire_at\": 1351,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_mkkkho\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_jrkoqwafoj\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 3301,\n      \"updated_at\": 2212,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": true,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ],\n  \"web3_wallets\": [\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_okx_wallet_signature\",\n        \"attempts\": 2661,\n        \"expire_at\": 2991,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2765,\n      \"updated_at\": 2131,\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_base_signature\",\n        \"attempts\": 342,\n        \"expire_at\": 7017,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2851,\n      \"updated_at\": 7003,\n      \"id\": \"string\"\n    }\n  ],\n  \"passkeys\": [\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 4336,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 5670,\n        \"expire_at\": 6420,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 690,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 7963,\n        \"expire_at\": 6633,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    }\n  ],\n  \"external_accounts\": [\n    {\n      \"object\": \"external_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": true,\n        \"key_1\": \"string\"\n      },\n      \"created_at\": 2055,\n      \"updated_at\": 1013,\n      \"verification\": {\n        \"status\": \"transferable\",\n        \"strategy\": \"oauth_xqqgqljqof\",\n        \"attempts\": 1555,\n        \"expire_at\": 5721,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    },\n    {\n      \"object\": \"google_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 9021.765466129193,\n        \"key_1\": 1363,\n        \"key_2\": \"string\"\n      },\n      \"created_at\": 4274,\n      \"updated_at\": 9548,\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"oauth_custom_vk\",\n        \"attempts\": 6794,\n        \"expire_at\": 3143,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    }\n  ],\n  \"saml_accounts\": [\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"saml\",\n        \"attempts\": 7587,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 2544,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 4224,\n      \"public_metadata\": {\n        \"key_0\": 4760\n      },\n      \"saml_connection\": {\n        \"domain\": false\n      }\n    },\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"saml\",\n        \"attempts\": 6824,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 3585,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 1557,\n      \"public_metadata\": {\n        \"key_0\": \"string\",\n        \"key_1\": true\n      },\n      \"saml_connection\": {\n        \"domain\": 9940.292404161679\n      }\n    }\n  ],\n  \"public_metadata\": {\n    \"key_0\": true\n  },\n  \"external_id\": \"string\",\n  \"last_sign_in_at\": 7275,\n  \"banned\": false,\n  \"locked\": true,\n  \"lockout_expires_in_seconds\": 4668,\n  \"verification_attempts_remaining\": 8265,\n  \"created_at\": 4547,\n  \"updated_at\": 7057,\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": false,\n  \"last_active_at\": 1700690400000,\n  \"mfa_enabled_at\": 4422,\n  \"mfa_disabled_at\": 6932,\n  \"legal_accepted_at\": 1700690400000,\n  \"locale\": \"string\",\n  \"profile_image_url\": \"string\",\n  \"image_url\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 9144\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 6532,\n    \"key_1\": 5794.302348985707\n  },\n  \"create_organizations_limit\": 91\n}"
										},
										{
											"id": "781399-da95dde6-2921-4d64-bccf-a5fd522c8e53",
											"name": "Authorization invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/unlock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"unlock"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-dc6db748-5031-4566-964c-e34c199c39e6"
						},
						{
							"name": "profile_image",
							"item": [
								{
									"name": "Set user profile image",
									"id": "781399-f5ee4fad-9c69-466e-ae3a-70265bbccaba",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"value": null
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/profile_image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"profile_image"
											],
											"variable": [
												{
													"id": "9e81f266-9ed6-4952-b8d5-b69bfb02a650",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user to update the profile image for"
												}
											]
										},
										"description": "Update a user's profile image"
									},
									"response": [
										{
											"id": "781399-0cd2124b-211b-4441-bd4c-73de5a231783",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/profile_image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"profile_image"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"string\",\n  \"object\": \"user\",\n  \"username\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"has_image\": true,\n  \"primary_email_address_id\": \"string\",\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"password_enabled\": false,\n  \"two_factor_enabled\": true,\n  \"totp_enabled\": true,\n  \"backup_code_enabled\": false,\n  \"email_addresses\": [\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 3740,\n        \"expire_at\": 795,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_vd\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_rpod\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 4299,\n      \"updated_at\": 6121,\n      \"id\": \"string\",\n      \"matches_sso_connection\": false\n    },\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 654,\n        \"expire_at\": 2299,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_ukptplx\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_ctiorwdcpud\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 8768,\n      \"updated_at\": 6848,\n      \"id\": \"string\",\n      \"matches_sso_connection\": true\n    }\n  ],\n  \"phone_numbers\": [\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"reset_password_email_code\",\n        \"attempts\": 5030,\n        \"expire_at\": 5295,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_xlhs\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_hmfcojuqn\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 6691,\n      \"updated_at\": 2867,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": false,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 1974,\n        \"expire_at\": 1351,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_mkkkho\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_jrkoqwafoj\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 3301,\n      \"updated_at\": 2212,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": true,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ],\n  \"web3_wallets\": [\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_okx_wallet_signature\",\n        \"attempts\": 2661,\n        \"expire_at\": 2991,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2765,\n      \"updated_at\": 2131,\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_base_signature\",\n        \"attempts\": 342,\n        \"expire_at\": 7017,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2851,\n      \"updated_at\": 7003,\n      \"id\": \"string\"\n    }\n  ],\n  \"passkeys\": [\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 4336,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 5670,\n        \"expire_at\": 6420,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 690,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 7963,\n        \"expire_at\": 6633,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    }\n  ],\n  \"external_accounts\": [\n    {\n      \"object\": \"external_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": true,\n        \"key_1\": \"string\"\n      },\n      \"created_at\": 2055,\n      \"updated_at\": 1013,\n      \"verification\": {\n        \"status\": \"transferable\",\n        \"strategy\": \"oauth_xqqgqljqof\",\n        \"attempts\": 1555,\n        \"expire_at\": 5721,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    },\n    {\n      \"object\": \"google_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 9021.765466129193,\n        \"key_1\": 1363,\n        \"key_2\": \"string\"\n      },\n      \"created_at\": 4274,\n      \"updated_at\": 9548,\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"oauth_custom_vk\",\n        \"attempts\": 6794,\n        \"expire_at\": 3143,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    }\n  ],\n  \"saml_accounts\": [\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"saml\",\n        \"attempts\": 7587,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 2544,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 4224,\n      \"public_metadata\": {\n        \"key_0\": 4760\n      },\n      \"saml_connection\": {\n        \"domain\": false\n      }\n    },\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"saml\",\n        \"attempts\": 6824,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 3585,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 1557,\n      \"public_metadata\": {\n        \"key_0\": \"string\",\n        \"key_1\": true\n      },\n      \"saml_connection\": {\n        \"domain\": 9940.292404161679\n      }\n    }\n  ],\n  \"public_metadata\": {\n    \"key_0\": true\n  },\n  \"external_id\": \"string\",\n  \"last_sign_in_at\": 7275,\n  \"banned\": false,\n  \"locked\": true,\n  \"lockout_expires_in_seconds\": 4668,\n  \"verification_attempts_remaining\": 8265,\n  \"created_at\": 4547,\n  \"updated_at\": 7057,\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": false,\n  \"last_active_at\": 1700690400000,\n  \"mfa_enabled_at\": 4422,\n  \"mfa_disabled_at\": 6932,\n  \"legal_accepted_at\": 1700690400000,\n  \"locale\": \"string\",\n  \"profile_image_url\": \"string\",\n  \"image_url\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 9144\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 6532,\n    \"key_1\": 5794.302348985707\n  },\n  \"create_organizations_limit\": 91\n}"
										},
										{
											"id": "781399-ade1f587-928d-4eec-be2b-a6c5aa965376",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/profile_image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"profile_image"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-302202ef-b2ef-4178-9985-bcb352ec6071",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/profile_image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"profile_image"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-b8306ec0-6a3a-40a8-92e2-6543d1fa14d9",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/profile_image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"profile_image"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								},
								{
									"name": "Delete user profile image",
									"id": "781399-d079ff49-6b88-4426-9c1e-ebbe28fcca42",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/profile_image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"profile_image"
											],
											"variable": [
												{
													"id": "48d3ea7a-b6db-4ab0-bedf-bc645a29c087",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user to delete the profile image for"
												}
											]
										},
										"description": "Delete a user's profile image"
									},
									"response": [
										{
											"id": "781399-39ab23cb-7306-4822-95c5-938f7fbd736c",
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/profile_image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"profile_image"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"string\",\n  \"object\": \"user\",\n  \"username\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"has_image\": true,\n  \"primary_email_address_id\": \"string\",\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"password_enabled\": false,\n  \"two_factor_enabled\": true,\n  \"totp_enabled\": true,\n  \"backup_code_enabled\": false,\n  \"email_addresses\": [\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 3740,\n        \"expire_at\": 795,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_vd\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_rpod\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 4299,\n      \"updated_at\": 6121,\n      \"id\": \"string\",\n      \"matches_sso_connection\": false\n    },\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 654,\n        \"expire_at\": 2299,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_ukptplx\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_ctiorwdcpud\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 8768,\n      \"updated_at\": 6848,\n      \"id\": \"string\",\n      \"matches_sso_connection\": true\n    }\n  ],\n  \"phone_numbers\": [\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"reset_password_email_code\",\n        \"attempts\": 5030,\n        \"expire_at\": 5295,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_xlhs\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_hmfcojuqn\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 6691,\n      \"updated_at\": 2867,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": false,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 1974,\n        \"expire_at\": 1351,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_mkkkho\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_jrkoqwafoj\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 3301,\n      \"updated_at\": 2212,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": true,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ],\n  \"web3_wallets\": [\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_okx_wallet_signature\",\n        \"attempts\": 2661,\n        \"expire_at\": 2991,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2765,\n      \"updated_at\": 2131,\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_base_signature\",\n        \"attempts\": 342,\n        \"expire_at\": 7017,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2851,\n      \"updated_at\": 7003,\n      \"id\": \"string\"\n    }\n  ],\n  \"passkeys\": [\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 4336,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 5670,\n        \"expire_at\": 6420,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 690,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 7963,\n        \"expire_at\": 6633,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    }\n  ],\n  \"external_accounts\": [\n    {\n      \"object\": \"external_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": true,\n        \"key_1\": \"string\"\n      },\n      \"created_at\": 2055,\n      \"updated_at\": 1013,\n      \"verification\": {\n        \"status\": \"transferable\",\n        \"strategy\": \"oauth_xqqgqljqof\",\n        \"attempts\": 1555,\n        \"expire_at\": 5721,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    },\n    {\n      \"object\": \"google_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 9021.765466129193,\n        \"key_1\": 1363,\n        \"key_2\": \"string\"\n      },\n      \"created_at\": 4274,\n      \"updated_at\": 9548,\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"oauth_custom_vk\",\n        \"attempts\": 6794,\n        \"expire_at\": 3143,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    }\n  ],\n  \"saml_accounts\": [\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"saml\",\n        \"attempts\": 7587,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 2544,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 4224,\n      \"public_metadata\": {\n        \"key_0\": 4760\n      },\n      \"saml_connection\": {\n        \"domain\": false\n      }\n    },\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"saml\",\n        \"attempts\": 6824,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 3585,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 1557,\n      \"public_metadata\": {\n        \"key_0\": \"string\",\n        \"key_1\": true\n      },\n      \"saml_connection\": {\n        \"domain\": 9940.292404161679\n      }\n    }\n  ],\n  \"public_metadata\": {\n    \"key_0\": true\n  },\n  \"external_id\": \"string\",\n  \"last_sign_in_at\": 7275,\n  \"banned\": false,\n  \"locked\": true,\n  \"lockout_expires_in_seconds\": 4668,\n  \"verification_attempts_remaining\": 8265,\n  \"created_at\": 4547,\n  \"updated_at\": 7057,\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": false,\n  \"last_active_at\": 1700690400000,\n  \"mfa_enabled_at\": 4422,\n  \"mfa_disabled_at\": 6932,\n  \"legal_accepted_at\": 1700690400000,\n  \"locale\": \"string\",\n  \"profile_image_url\": \"string\",\n  \"image_url\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 9144\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 6532,\n    \"key_1\": 5794.302348985707\n  },\n  \"create_organizations_limit\": 91\n}"
										},
										{
											"id": "781399-5b6624e0-0962-490f-8c36-aebc75f9a976",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/profile_image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"profile_image"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-2bff6b0f-60d3-472e-9d67-955a98b31833"
						},
						{
							"name": "metadata",
							"item": [
								{
									"name": "Merge and update a user's metadata",
									"id": "781399-9a67be97-efda-4008-94cc-9ea3b473f9be",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 8614.544062351742,\n    \"key_1\": true,\n    \"key_2\": false\n  },\n  \"private_metadata\": {\n    \"key_0\": 7172\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": true\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/metadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"metadata"
											],
											"variable": [
												{
													"id": "a3291f7a-046f-493a-bd33-f57d37cc998f",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user whose metadata will be updated and merged"
												}
											]
										},
										"description": "Update a user's metadata attributes by merging existing values with the provided parameters.\n\nThis endpoint behaves differently than the *Update a user* endpoint.\nMetadata values will not be replaced entirely.\nInstead, a deep merge will be performed.\nDeep means that any nested JSON objects will be merged as well.\n\nYou can remove metadata keys at any level by setting their value to `null`."
									},
									"response": [
										{
											"id": "781399-5aabd8c3-2be6-4c7b-b060-aeb27a31d9e5",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 8614.544062351742,\n    \"key_1\": true,\n    \"key_2\": false\n  },\n  \"private_metadata\": {\n    \"key_0\": 7172\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": true\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"metadata"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"string\",\n  \"object\": \"user\",\n  \"username\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"has_image\": true,\n  \"primary_email_address_id\": \"string\",\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"password_enabled\": false,\n  \"two_factor_enabled\": true,\n  \"totp_enabled\": true,\n  \"backup_code_enabled\": false,\n  \"email_addresses\": [\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 3740,\n        \"expire_at\": 795,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_vd\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_rpod\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 4299,\n      \"updated_at\": 6121,\n      \"id\": \"string\",\n      \"matches_sso_connection\": false\n    },\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 654,\n        \"expire_at\": 2299,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_ukptplx\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_ctiorwdcpud\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 8768,\n      \"updated_at\": 6848,\n      \"id\": \"string\",\n      \"matches_sso_connection\": true\n    }\n  ],\n  \"phone_numbers\": [\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"reset_password_email_code\",\n        \"attempts\": 5030,\n        \"expire_at\": 5295,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_xlhs\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_hmfcojuqn\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 6691,\n      \"updated_at\": 2867,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": false,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 1974,\n        \"expire_at\": 1351,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_mkkkho\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_jrkoqwafoj\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 3301,\n      \"updated_at\": 2212,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": true,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ],\n  \"web3_wallets\": [\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_okx_wallet_signature\",\n        \"attempts\": 2661,\n        \"expire_at\": 2991,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2765,\n      \"updated_at\": 2131,\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_base_signature\",\n        \"attempts\": 342,\n        \"expire_at\": 7017,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2851,\n      \"updated_at\": 7003,\n      \"id\": \"string\"\n    }\n  ],\n  \"passkeys\": [\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 4336,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 5670,\n        \"expire_at\": 6420,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 690,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 7963,\n        \"expire_at\": 6633,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    }\n  ],\n  \"external_accounts\": [\n    {\n      \"object\": \"external_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": true,\n        \"key_1\": \"string\"\n      },\n      \"created_at\": 2055,\n      \"updated_at\": 1013,\n      \"verification\": {\n        \"status\": \"transferable\",\n        \"strategy\": \"oauth_xqqgqljqof\",\n        \"attempts\": 1555,\n        \"expire_at\": 5721,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    },\n    {\n      \"object\": \"google_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 9021.765466129193,\n        \"key_1\": 1363,\n        \"key_2\": \"string\"\n      },\n      \"created_at\": 4274,\n      \"updated_at\": 9548,\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"oauth_custom_vk\",\n        \"attempts\": 6794,\n        \"expire_at\": 3143,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    }\n  ],\n  \"saml_accounts\": [\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"saml\",\n        \"attempts\": 7587,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 2544,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 4224,\n      \"public_metadata\": {\n        \"key_0\": 4760\n      },\n      \"saml_connection\": {\n        \"domain\": false\n      }\n    },\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"saml\",\n        \"attempts\": 6824,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 3585,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 1557,\n      \"public_metadata\": {\n        \"key_0\": \"string\",\n        \"key_1\": true\n      },\n      \"saml_connection\": {\n        \"domain\": 9940.292404161679\n      }\n    }\n  ],\n  \"public_metadata\": {\n    \"key_0\": true\n  },\n  \"external_id\": \"string\",\n  \"last_sign_in_at\": 7275,\n  \"banned\": false,\n  \"locked\": true,\n  \"lockout_expires_in_seconds\": 4668,\n  \"verification_attempts_remaining\": 8265,\n  \"created_at\": 4547,\n  \"updated_at\": 7057,\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": false,\n  \"last_active_at\": 1700690400000,\n  \"mfa_enabled_at\": 4422,\n  \"mfa_disabled_at\": 6932,\n  \"legal_accepted_at\": 1700690400000,\n  \"locale\": \"string\",\n  \"profile_image_url\": \"string\",\n  \"image_url\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 9144\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 6532,\n    \"key_1\": 5794.302348985707\n  },\n  \"create_organizations_limit\": 91\n}"
										},
										{
											"id": "781399-70b0fd3a-f050-4081-afdd-6579bb514ae7",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 8614.544062351742,\n    \"key_1\": true,\n    \"key_2\": false\n  },\n  \"private_metadata\": {\n    \"key_0\": 7172\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": true\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"metadata"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-148eaf17-0c31-4133-88ea-53f126a867ad",
											"name": "Authentication invalid",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 8614.544062351742,\n    \"key_1\": true,\n    \"key_2\": false\n  },\n  \"private_metadata\": {\n    \"key_0\": 7172\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": true\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"metadata"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-0d212ece-de0e-4c20-8702-0ce9b851414e",
											"name": "Resource not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 8614.544062351742,\n    \"key_1\": true,\n    \"key_2\": false\n  },\n  \"private_metadata\": {\n    \"key_0\": 7172\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": true\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"metadata"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-283bd6d6-0d26-4832-ac85-62e64e814de8",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 8614.544062351742,\n    \"key_1\": true,\n    \"key_2\": false\n  },\n  \"private_metadata\": {\n    \"key_0\": 7172\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": true\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"metadata"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-71b9a330-d3fe-4382-8ff2-c71d5695e12c"
						},
						{
							"name": "billing",
							"item": [
								{
									"name": "subscription",
									"item": [
										{
											"name": "Retrieve a user's billing subscription",
											"id": "781399-48f401e0-f06b-4612-8f9c-85ca58831c09",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/billing/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"billing",
														"subscription"
													],
													"variable": [
														{
															"id": "978d83fc-6a67-4d45-a3ec-04c9e8f23bbf",
															"key": "user_id",
															"value": "string",
															"description": "The ID of the user whose subscription to retrieve"
														}
													]
												},
												"description": "Retrieves the billing subscription for the specified user.\nThis includes subscription details, active plans, billing information, and payment status.\nThe subscription contains subscription items which represent the individual plans the user is subscribed to."
											},
											"response": [
												{
													"id": "781399-14735cb7-1a30-4ea1-80eb-303c2512ab7e",
													"name": "A commerce subscription.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"commerce_subscription\",\n  \"id\": \"string\",\n  \"instance_id\": \"string\",\n  \"status\": \"canceled\",\n  \"payer_id\": \"string\",\n  \"created_at\": 7053,\n  \"updated_at\": 679,\n  \"subscription_items\": [\n    {\n      \"object\": \"commerce_subscription_item\",\n      \"id\": \"string\",\n      \"instance_id\": \"string\",\n      \"status\": \"past_due\",\n      \"plan_id\": \"string\",\n      \"plan\": {\n        \"object\": \"commerce_plan\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"fee\": {\n          \"amount\": 3790,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"annual_monthly_fee\": {\n          \"amount\": 7481,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"annual_fee\": {\n          \"amount\": 3485,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"amount\": 2906,\n        \"amount_formatted\": \"string\",\n        \"annual_monthly_amount\": 532,\n        \"annual_monthly_amount_formatted\": \"string\",\n        \"annual_amount\": 300,\n        \"annual_amount_formatted\": \"string\",\n        \"currency_symbol\": \"string\",\n        \"currency\": \"string\",\n        \"description\": \"string\",\n        \"product_id\": \"string\",\n        \"is_default\": false,\n        \"is_recurring\": true,\n        \"publicly_visible\": false,\n        \"has_base_fee\": true,\n        \"payer_type\": [\n          \"string\",\n          \"string\"\n        ],\n        \"for_payer_type\": \"string\",\n        \"slug\": \"string\",\n        \"avatar_url\": \"string\",\n        \"features\": [\n          {\n            \"object\": \"feature\",\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"slug\": \"string\",\n            \"avatar_url\": \"string\"\n          },\n          {\n            \"object\": \"feature\",\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"slug\": \"string\",\n            \"avatar_url\": \"string\"\n          }\n        ],\n        \"period\": \"string\",\n        \"interval\": 7030,\n        \"free_trial_enabled\": false,\n        \"free_trial_days\": 7568\n      },\n      \"plan_period\": \"month\",\n      \"payment_source_id\": \"string\",\n      \"payer_id\": \"string\",\n      \"is_free_trial\": true,\n      \"proration_date\": \"string\",\n      \"created_at\": 9684,\n      \"updated_at\": 784,\n      \"credit\": {\n        \"amount\": {\n          \"amount\": 4867,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"cycle_remaining_percent\": 409.0254185810294\n      },\n      \"payment_source\": {\n        \"object\": \"commerce_source\",\n        \"id\": \"string\",\n        \"payer_id\": \"string\",\n        \"payment_method\": \"apple_pay\",\n        \"gateway\": \"string\",\n        \"gateway_external_id\": \"string\",\n        \"last4\": \"string\",\n        \"status\": \"active\",\n        \"wallet_type\": \"string\",\n        \"card_type\": \"string\",\n        \"created_at\": 2918,\n        \"updated_at\": 2318,\n        \"is_default\": false,\n        \"gateway_external_account_id\": \"string\",\n        \"expiry_year\": 5815,\n        \"expiry_month\": 4518,\n        \"is_removable\": true\n      },\n      \"lifetime_paid\": {\n        \"amount\": 4813,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"amount\": {\n        \"amount\": 5944,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"next_invoice\": {\n        \"amount\": {\n          \"amount\": 7312,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"date\": 4520\n      },\n      \"next_payment\": {\n        \"amount\": {\n          \"amount\": 3333,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"date\": 423\n      },\n      \"payer\": {\n        \"object\": \"commerce_payer\",\n        \"id\": \"string\",\n        \"instance_id\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"email\": \"string\",\n        \"image_url\": \"string\",\n        \"created_at\": 7219,\n        \"updated_at\": 6543,\n        \"user_id\": \"string\",\n        \"organization_id\": \"string\",\n        \"organization_name\": \"string\"\n      },\n      \"period_start\": 4225,\n      \"period_end\": 8324,\n      \"canceled_at\": 1662,\n      \"past_due_at\": 5379,\n      \"ended_at\": 5777\n    },\n    {\n      \"object\": \"commerce_subscription_item\",\n      \"id\": \"string\",\n      \"instance_id\": \"string\",\n      \"status\": \"active\",\n      \"plan_id\": \"string\",\n      \"plan\": {\n        \"object\": \"commerce_plan\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"fee\": {\n          \"amount\": 4397,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"annual_monthly_fee\": {\n          \"amount\": 261,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"annual_fee\": {\n          \"amount\": 9883,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"amount\": 249,\n        \"amount_formatted\": \"string\",\n        \"annual_monthly_amount\": 9049,\n        \"annual_monthly_amount_formatted\": \"string\",\n        \"annual_amount\": 5211,\n        \"annual_amount_formatted\": \"string\",\n        \"currency_symbol\": \"string\",\n        \"currency\": \"string\",\n        \"description\": \"string\",\n        \"product_id\": \"string\",\n        \"is_default\": true,\n        \"is_recurring\": false,\n        \"publicly_visible\": true,\n        \"has_base_fee\": false,\n        \"payer_type\": [\n          \"string\",\n          \"string\"\n        ],\n        \"for_payer_type\": \"string\",\n        \"slug\": \"string\",\n        \"avatar_url\": \"string\",\n        \"features\": [\n          {\n            \"object\": \"feature\",\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"slug\": \"string\",\n            \"avatar_url\": \"string\"\n          },\n          {\n            \"object\": \"feature\",\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"slug\": \"string\",\n            \"avatar_url\": \"string\"\n          }\n        ],\n        \"period\": \"string\",\n        \"interval\": 7949,\n        \"free_trial_enabled\": true,\n        \"free_trial_days\": 1708\n      },\n      \"plan_period\": \"month\",\n      \"payment_source_id\": \"string\",\n      \"payer_id\": \"string\",\n      \"is_free_trial\": false,\n      \"proration_date\": \"string\",\n      \"created_at\": 7982,\n      \"updated_at\": 2513,\n      \"credit\": {\n        \"amount\": {\n          \"amount\": 1029,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"cycle_remaining_percent\": 8704.958842878596\n      },\n      \"payment_source\": {\n        \"object\": \"commerce_source\",\n        \"id\": \"string\",\n        \"payer_id\": \"string\",\n        \"payment_method\": \"google_pay\",\n        \"gateway\": \"string\",\n        \"gateway_external_id\": \"string\",\n        \"last4\": \"string\",\n        \"status\": \"disconnected\",\n        \"wallet_type\": \"string\",\n        \"card_type\": \"string\",\n        \"created_at\": 7292,\n        \"updated_at\": 4175,\n        \"is_default\": true,\n        \"gateway_external_account_id\": \"string\",\n        \"expiry_year\": 7948,\n        \"expiry_month\": 5231,\n        \"is_removable\": true\n      },\n      \"lifetime_paid\": {\n        \"amount\": 3326,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"amount\": {\n        \"amount\": 875,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"next_invoice\": {\n        \"amount\": {\n          \"amount\": 6768,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"date\": 2633\n      },\n      \"next_payment\": {\n        \"amount\": {\n          \"amount\": 5230,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"date\": 4288\n      },\n      \"payer\": {\n        \"object\": \"commerce_payer\",\n        \"id\": \"string\",\n        \"instance_id\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"email\": \"string\",\n        \"image_url\": \"string\",\n        \"created_at\": 8423,\n        \"updated_at\": 7265,\n        \"user_id\": \"string\",\n        \"organization_id\": \"string\",\n        \"organization_name\": \"string\"\n      },\n      \"period_start\": 9280,\n      \"period_end\": 1852,\n      \"canceled_at\": 6371,\n      \"past_due_at\": 1702,\n      \"ended_at\": 7472\n    }\n  ],\n  \"active_at\": 7518,\n  \"past_due_at\": 9603,\n  \"next_payment\": {\n    \"time\": 6438,\n    \"date\": 6209,\n    \"amount\": {\n      \"amount\": 2396,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    }\n  },\n  \"eligible_for_free_trial\": false\n}"
												},
												{
													"id": "781399-70347ca3-8668-4f55-8467-d01dc8abd6b4",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-1be204b1-eb70-45ab-9083-108b0cc9a4d3",
													"name": "Authentication invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-ae5a9cb1-1d90-4577-82f2-03b4a985cd1d",
													"name": "Authorization invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-bd52e3da-026c-44ca-a356-c16b31e97f99",
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-19aabdd6-c930-461e-bae1-f0303dac8806",
													"name": "Invalid request parameters",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-107dab26-7e99-4896-98ab-c2b87f35136c",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-545b3b79-821b-4047-b850-65ca12bfa0ad"
								}
							],
							"id": "781399-129e147a-1b34-439b-a487-ac0aa8d9a410"
						},
						{
							"name": "oauth_access_tokens",
							"item": [
								{
									"name": "{provider}",
									"item": [
										{
											"name": "Retrieve the OAuth access token of a user",
											"id": "781399-7a31936f-3de6-46c0-b1a4-70de6e9947b5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/oauth_access_tokens/:provider?paginated=true&limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"oauth_access_tokens",
														":provider"
													],
													"query": [
														{
															"key": "paginated",
															"value": "true",
															"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated."
														},
														{
															"key": "limit",
															"value": "10",
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
														}
													],
													"variable": [
														{
															"id": "c236df7e-9954-4496-9cac-442af6d0397a",
															"key": "user_id",
															"value": "string",
															"description": "The ID of the user for which to retrieve the OAuth access token"
														},
														{
															"id": "0dda524c-2d29-43ca-82a6-bd8ba5281db0",
															"key": "provider",
															"value": "string",
															"description": "The ID of the OAuth provider (e.g. `oauth_google`)"
														}
													]
												},
												"description": "Fetch the corresponding OAuth access token for a user that has previously authenticated with a particular OAuth provider.\nFor OAuth 2.0, if the access token has expired and we have a corresponding refresh token, the access token will be refreshed transparently the new one will be returned."
											},
											"response": [
												{
													"id": "781399-252bdc74-f69b-4a05-b065-30645c5d09b2",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/oauth_access_tokens/:provider?paginated=true&limit=10&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"oauth_access_tokens",
																":provider"
															],
															"query": [
																{
																	"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
																	"key": "paginated",
																	"value": "true"
																},
																{
																	"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
																	"key": "limit",
																	"value": "10"
																},
																{
																	"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
																	"key": "offset",
																	"value": "0"
																}
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "provider"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "[\n  {\n    \"object\": \"oauth_access_token\",\n    \"external_account_id\": \"string\",\n    \"provider_user_id\": \"string\",\n    \"token\": \"string\",\n    \"expires_at\": 8903,\n    \"provider\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": 6466.97941973352,\n      \"key_1\": false,\n      \"key_2\": \"string\",\n      \"key_3\": 7348.302784030102\n    },\n    \"label\": \"string\",\n    \"scopes\": [\n      \"string\",\n      \"string\"\n    ],\n    \"token_secret\": \"string\"\n  },\n  {\n    \"object\": \"oauth_access_token\",\n    \"external_account_id\": \"string\",\n    \"provider_user_id\": \"string\",\n    \"token\": \"string\",\n    \"expires_at\": 3905,\n    \"provider\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": true,\n      \"key_1\": true\n    },\n    \"label\": \"string\",\n    \"scopes\": [\n      \"string\",\n      \"string\"\n    ],\n    \"token_secret\": \"string\"\n  }\n]"
												},
												{
													"id": "781399-3b4bbced-50c8-4638-9980-16dc69e96cd9",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/oauth_access_tokens/:provider?paginated=true&limit=10&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"oauth_access_tokens",
																":provider"
															],
															"query": [
																{
																	"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
																	"key": "paginated",
																	"value": "true"
																},
																{
																	"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
																	"key": "limit",
																	"value": "10"
																},
																{
																	"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
																	"key": "offset",
																	"value": "0"
																}
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "provider"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-13eae451-92de-4ad3-afb2-4c3f7da34d0a",
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/oauth_access_tokens/:provider?paginated=true&limit=10&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"oauth_access_tokens",
																":provider"
															],
															"query": [
																{
																	"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
																	"key": "paginated",
																	"value": "true"
																},
																{
																	"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
																	"key": "limit",
																	"value": "10"
																},
																{
																	"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
																	"key": "offset",
																	"value": "0"
																}
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "provider"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-a3774bbd-0d07-4bef-97c1-8a21e66b79c2",
													"name": "Invalid request parameters",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/oauth_access_tokens/:provider?paginated=true&limit=10&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"oauth_access_tokens",
																":provider"
															],
															"query": [
																{
																	"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
																	"key": "paginated",
																	"value": "true"
																},
																{
																	"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
																	"key": "limit",
																	"value": "10"
																},
																{
																	"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
																	"key": "offset",
																	"value": "0"
																}
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "provider"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-c540e9e2-a023-4f32-8c96-a80da7915260"
								}
							],
							"id": "781399-f89ad112-520f-4c51-9efa-afd4bfef6651"
						},
						{
							"name": "organization_memberships",
							"item": [
								{
									"name": "Retrieve all memberships for a user",
									"id": "781399-7a753cf0-e6de-4a8c-9c27-5d7b554cf8b6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/organization_memberships?limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"organization_memberships"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
												}
											],
											"variable": [
												{
													"id": "61d871d8-c71b-4433-820e-3d4b8b84f162",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user whose organization memberships we want to retrieve"
												}
											]
										},
										"description": "Retrieve a paginated list of the user's organization memberships"
									},
									"response": [
										{
											"id": "781399-6092afcf-6c32-4eaf-a68a-de38c2930637",
											"name": "A list of organization memberships",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/organization_memberships?limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"organization_memberships"
													],
													"query": [
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"data\": [\n    {\n      \"object\": \"organization_membership\",\n      \"id\": \"string\",\n      \"role\": \"string\",\n      \"permissions\": [\n        \"string\",\n        \"string\"\n      ],\n      \"public_metadata\": {\n        \"key_0\": 9083,\n        \"key_1\": \"string\",\n        \"key_2\": true\n      },\n      \"created_at\": 8566,\n      \"updated_at\": 6296,\n      \"organization\": {\n        \"object\": \"organization\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": true,\n        \"max_allowed_memberships\": 6557,\n        \"admin_delete_enabled\": false,\n        \"public_metadata\": {\n          \"key_0\": \"string\",\n          \"key_1\": false\n        },\n        \"created_at\": 2494,\n        \"updated_at\": 3052,\n        \"image_url\": \"string\",\n        \"members_count\": 4272,\n        \"missing_member_with_elevated_permissions\": false,\n        \"pending_invitations_count\": 3425,\n        \"private_metadata\": {\n          \"key_0\": 2918.5963037429697,\n          \"key_1\": 9218.024089152552\n        },\n        \"created_by\": \"string\"\n      },\n      \"role_name\": \"string\",\n      \"private_metadata\": {\n        \"key_0\": false,\n        \"key_1\": 6857,\n        \"key_2\": \"string\",\n        \"key_3\": true\n      },\n      \"public_user_data\": {\n        \"user_id\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"profile_image_url\": \"string\",\n        \"image_url\": \"string\",\n        \"has_image\": true,\n        \"identifier\": \"string\",\n        \"username\": \"string\"\n      }\n    },\n    {\n      \"object\": \"organization_membership\",\n      \"id\": \"string\",\n      \"role\": \"string\",\n      \"permissions\": [\n        \"string\",\n        \"string\"\n      ],\n      \"public_metadata\": {\n        \"key_0\": false\n      },\n      \"created_at\": 7245,\n      \"updated_at\": 4600,\n      \"organization\": {\n        \"object\": \"organization\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": false,\n        \"max_allowed_memberships\": 7782,\n        \"admin_delete_enabled\": true,\n        \"public_metadata\": {\n          \"key_0\": false\n        },\n        \"created_at\": 6903,\n        \"updated_at\": 3770,\n        \"image_url\": \"string\",\n        \"members_count\": 9552,\n        \"missing_member_with_elevated_permissions\": true,\n        \"pending_invitations_count\": 2102,\n        \"private_metadata\": {\n          \"key_0\": 9826.880821938897,\n          \"key_1\": 5161.292338267557\n        },\n        \"created_by\": \"string\"\n      },\n      \"role_name\": \"string\",\n      \"private_metadata\": {\n        \"key_0\": true\n      },\n      \"public_user_data\": {\n        \"user_id\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"profile_image_url\": \"string\",\n        \"image_url\": \"string\",\n        \"has_image\": true,\n        \"identifier\": \"string\",\n        \"username\": \"string\"\n      }\n    }\n  ],\n  \"total_count\": 8054\n}"
										},
										{
											"id": "781399-d067316d-5fdf-4a88-8c79-161cd77265aa",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/organization_memberships?limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"organization_memberships"
													],
													"query": [
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-cbbbe394-9f5e-47d3-8377-3eaf02152ee5"
						},
						{
							"name": "organization_invitations",
							"item": [
								{
									"name": "Retrieve all invitations for a user",
									"id": "781399-fc3445f1-7699-4951-9961-9cf0f14ecc37",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/organization_invitations?limit=10&offset=0&status=revoked",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"organization_invitations"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
												},
												{
													"key": "status",
													"value": "revoked",
													"description": "Filter organization invitations based on their status"
												}
											],
											"variable": [
												{
													"id": "1f067180-d43f-4cc2-90f0-1a28e412e278",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user whose organization invitations we want to retrieve"
												}
											]
										},
										"description": "Retrieve a paginated list of the user's organization invitations"
									},
									"response": [
										{
											"id": "781399-bb2453ca-51a2-4a94-8345-80abac1ced82",
											"name": "A list of organization invitations with public organization data",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/organization_invitations?limit=10&offset=0&status=revoked",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"organization_invitations"
													],
													"query": [
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														},
														{
															"description": "Filter organization invitations based on their status",
															"key": "status",
															"value": "revoked"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"data\": [\n    {\n      \"object\": \"organization_invitation\",\n      \"id\": \"string\",\n      \"email_address\": \"string\",\n      \"role\": \"string\",\n      \"role_name\": \"string\",\n      \"organization_id\": \"string\",\n      \"status\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": true,\n        \"key_1\": 1906.1656024377805,\n        \"key_2\": \"string\"\n      },\n      \"private_metadata\": {\n        \"key_0\": 2595\n      },\n      \"url\": \"string\",\n      \"expires_at\": 4182,\n      \"created_at\": 3286,\n      \"updated_at\": 6295,\n      \"public_organization_data\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": true,\n        \"image_url\": \"string\"\n      }\n    },\n    {\n      \"object\": \"organization_invitation\",\n      \"id\": \"string\",\n      \"email_address\": \"string\",\n      \"role\": \"string\",\n      \"role_name\": \"string\",\n      \"organization_id\": \"string\",\n      \"status\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": \"string\",\n        \"key_1\": 5021\n      },\n      \"private_metadata\": {\n        \"key_0\": false\n      },\n      \"url\": \"string\",\n      \"expires_at\": 7976,\n      \"created_at\": 2658,\n      \"updated_at\": 7380,\n      \"public_organization_data\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": false,\n        \"image_url\": \"string\"\n      }\n    }\n  ],\n  \"total_count\": 2949\n}"
										},
										{
											"id": "781399-b78f3e73-867f-4c19-9a2b-461f7bb4c0b1",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/organization_invitations?limit=10&offset=0&status=revoked",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"organization_invitations"
													],
													"query": [
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														},
														{
															"description": "Filter organization invitations based on their status",
															"key": "status",
															"value": "revoked"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-a867fae2-0862-4383-9176-b846236fab74",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/organization_invitations?limit=10&offset=0&status=revoked",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"organization_invitations"
													],
													"query": [
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														},
														{
															"description": "Filter organization invitations based on their status",
															"key": "status",
															"value": "revoked"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-ce4ce4f8-c0d3-4eca-bfc6-17ff83c2bd40",
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/organization_invitations?limit=10&offset=0&status=revoked",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"organization_invitations"
													],
													"query": [
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														},
														{
															"description": "Filter organization invitations based on their status",
															"key": "status",
															"value": "revoked"
														}
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-364bf094-b625-45bf-8de6-9dd767489655"
						},
						{
							"name": "verify_password",
							"item": [
								{
									"name": "Verify the password of a user",
									"id": "781399-56867d55-72b3-4de2-aad5-18dcd0625b1d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/verify_password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"verify_password"
											],
											"variable": [
												{
													"id": "02dcd2f0-854e-477c-a0e0-19d3d97eb04c",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user for whom to verify the password"
												}
											]
										},
										"description": "Check that the user's password matches the supplied input.\nUseful for custom auth flows and re-verification."
									},
									"response": [
										{
											"id": "781399-344fb09a-c4de-4a0b-8844-35c718a2b1d9",
											"name": "The provided password was correct.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"password\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verify_password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verify_password"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"verified\": false\n}"
										},
										{
											"id": "781399-28ba812d-f4c1-46b6-a32c-36be5bb52fb8",
											"name": "The user does not have a password set.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"password\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verify_password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verify_password"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "781399-76a03553-5f7e-4c85-b00e-5527fb6aed4f",
											"name": "The user does not exist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"password\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verify_password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verify_password"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "781399-f0db3557-e9d8-4a3c-a4e6-5cbc81c7e67d",
											"name": "The provided password was incorrect.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"password\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verify_password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verify_password"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "781399-3e404ce1-2da7-475a-ba86-b042d93d2b15",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"password\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verify_password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verify_password"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-6a64d0e7-9000-4f52-9c51-87f603c1345e"
						},
						{
							"name": "verify_totp",
							"item": [
								{
									"name": "Verify a TOTP or backup code for a user",
									"id": "781399-547a7fa4-9363-4a5f-a551-144fc9779631",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/verify_totp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"verify_totp"
											],
											"variable": [
												{
													"id": "ca0237be-fca9-4d3f-930b-0b6891903708",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user for whom to verify the TOTP"
												}
											]
										},
										"description": "Verify that the provided TOTP or backup code is valid for the user.\nVerifying a backup code will result it in being consumed (i.e. it will\nbecome invalid).\nUseful for custom auth flows and re-verification."
									},
									"response": [
										{
											"id": "781399-7c30b418-3c89-441a-9b10-1d0936890612",
											"name": "The provided TOTP or backup code was correct.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verify_totp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verify_totp"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"verified\": true,\n  \"code_type\": \"backup_code\"\n}"
										},
										{
											"id": "781399-88bdccee-8c67-4f73-b407-f8e18ce038b9",
											"name": "The user does not have TOTP configured for their account.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verify_totp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verify_totp"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "781399-fccaf2e9-4d17-4a1c-8355-92a8185249f3",
											"name": "The user does not exist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verify_totp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verify_totp"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "781399-8a06906f-5d9f-4683-99a6-eb0c0402ec38",
											"name": "The provided TOTP or backup code was incorrect.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verify_totp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verify_totp"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "781399-8d02541d-8280-4a4c-a24f-bb5fca8650c0",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/verify_totp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"verify_totp"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-7741bf6d-36a9-42bb-8439-795e21fdbe10"
						},
						{
							"name": "mfa",
							"item": [
								{
									"name": "Disable a user's MFA methods",
									"id": "781399-a20593d0-c827-4139-ad57-ace134b1d6ff",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/mfa",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"mfa"
											],
											"variable": [
												{
													"id": "91682d6c-f84a-4721-9278-b1fb9bae1d05",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user whose MFA methods are to be disabled"
												}
											]
										},
										"description": "Disable all of a user's MFA methods (e.g. OTP sent via SMS, TOTP on their authenticator app) at once."
									},
									"response": [
										{
											"id": "781399-5154257b-32b4-4f07-8392-b596cb65fb29",
											"name": "Successful operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/mfa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"mfa"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"user_id\": \"string\"\n}"
										},
										{
											"id": "781399-10f3cfc8-7cb2-4dc9-917f-cf5630b04495",
											"name": "Resource not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/mfa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"mfa"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-905261b3-f4cf-4554-a736-c3eb2e05dac8",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/mfa",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"mfa"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-65c4e7a1-54a5-451a-a871-4512b60b009b"
						},
						{
							"name": "backup_code",
							"item": [
								{
									"name": "Disable all user's Backup codes",
									"id": "781399-ef171d1f-eb42-4eef-a1eb-34108e44544c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/backup_code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"backup_code"
											],
											"variable": [
												{
													"id": "3c484c3e-8d23-4dd8-8eb0-2193094ab08b",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user whose backup codes are to be deleted."
												}
											]
										},
										"description": "Disable all of a user's backup codes."
									},
									"response": [
										{
											"id": "781399-4491af0c-72ff-40df-9237-afec3b2db1cd",
											"name": "Successful operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/backup_code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"backup_code"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"user_id\": \"string\"\n}"
										},
										{
											"id": "781399-4d9c585b-fd3f-4be9-815f-b13a952be3a3",
											"name": "Resource not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/backup_code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"backup_code"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-11dbfac4-737d-4168-997c-ccb4e197055a",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/backup_code",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"backup_code"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-2cf21a24-cebc-418a-bd3f-3d9f1db0a592"
						},
						{
							"name": "passkeys",
							"item": [
								{
									"name": "{passkey_identification_id}",
									"item": [
										{
											"name": "Delete a user passkey",
											"id": "781399-137612dc-e267-493a-b479-493187cdcb13",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/passkeys/:passkey_identification_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"passkeys",
														":passkey_identification_id"
													],
													"variable": [
														{
															"id": "72cf4803-d9a8-4bc1-93a1-8906160f122f",
															"key": "user_id",
															"value": "string",
															"description": "The ID of the user that owns the passkey identity"
														},
														{
															"id": "18e9a966-df47-4b18-91df-62b7e1bbe1f4",
															"key": "passkey_identification_id",
															"value": "string",
															"description": "The ID of the passkey identity to be deleted"
														}
													]
												},
												"description": "Delete the passkey identification for a given user and notify them through email."
											},
											"response": [
												{
													"id": "781399-157b2509-8e7f-4413-b51b-e7c172364eb4",
													"name": "Deleted Object",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/passkeys/:passkey_identification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"passkeys",
																":passkey_identification_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "passkey_identification_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
												},
												{
													"id": "781399-d5da3660-2410-4943-9704-8ed13ee7a4d2",
													"name": "Authorization invalid",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/passkeys/:passkey_identification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"passkeys",
																":passkey_identification_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "passkey_identification_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-c1ce6739-bdd2-413e-8746-331a2f3f212c",
													"name": "Resource not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/passkeys/:passkey_identification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"passkeys",
																":passkey_identification_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "passkey_identification_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-49eecf14-b4d2-410c-a052-ec4b80fbcaa3",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/passkeys/:passkey_identification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"passkeys",
																":passkey_identification_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "passkey_identification_id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-8b1a8827-9dc6-42ad-a20e-831a34bba34c"
								}
							],
							"id": "781399-99d70fdf-cdad-475a-9ceb-1305c4d89d29"
						},
						{
							"name": "web3_wallets",
							"item": [
								{
									"name": "{web3_wallet_identification_id}",
									"item": [
										{
											"name": "Delete a user web3 wallet",
											"id": "781399-c45e97b1-9724-4655-a4dd-b9ca429d5913",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/web3_wallets/:web3_wallet_identification_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"web3_wallets",
														":web3_wallet_identification_id"
													],
													"variable": [
														{
															"id": "7843d1ca-7047-43e6-9448-545808330bb7",
															"key": "user_id",
															"value": "string",
															"description": "The ID of the user that owns the web3 wallet"
														},
														{
															"id": "7016fce0-89c2-41d9-8b0e-ca5fd72486f3",
															"key": "web3_wallet_identification_id",
															"value": "string",
															"description": "The ID of the web3 wallet identity to be deleted"
														}
													]
												},
												"description": "Delete the web3 wallet identification for a given user."
											},
											"response": [
												{
													"id": "781399-2f2b8c40-f7e1-4fdb-a7f7-9bea47b4869a",
													"name": "Deleted Object",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/web3_wallets/:web3_wallet_identification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"web3_wallets",
																":web3_wallet_identification_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "web3_wallet_identification_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
												},
												{
													"id": "781399-cf23c69e-993a-4bf8-a5d6-61decceee521",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/web3_wallets/:web3_wallet_identification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"web3_wallets",
																":web3_wallet_identification_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "web3_wallet_identification_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-91c9180f-e1db-4a9c-8c43-b30f2025010b",
													"name": "Authorization invalid",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/web3_wallets/:web3_wallet_identification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"web3_wallets",
																":web3_wallet_identification_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "web3_wallet_identification_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-741ac39c-cc15-4703-b3bf-c36628a6e405",
													"name": "Resource not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/web3_wallets/:web3_wallet_identification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"web3_wallets",
																":web3_wallet_identification_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "web3_wallet_identification_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-86f2bcc3-eac1-4511-ad12-8ad2674b9be6",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/web3_wallets/:web3_wallet_identification_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"web3_wallets",
																":web3_wallet_identification_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "web3_wallet_identification_id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-fd1e0658-829b-4d74-8b4d-6b88c6073366"
								}
							],
							"id": "781399-47b46a9d-0a8b-412d-aecc-20e7b83ae2de"
						},
						{
							"name": "totp",
							"item": [
								{
									"name": "Delete all the user's TOTPs",
									"id": "781399-f0879557-fd2d-403b-9753-2f9df4aba42c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id/totp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id",
												"totp"
											],
											"variable": [
												{
													"id": "3f62cb68-140b-4af4-a9ce-263a582a3cd1",
													"key": "user_id",
													"value": "string",
													"description": "The ID of the user whose TOTPs are to be deleted"
												}
											]
										},
										"description": "Deletes all of the user's TOTPs."
									},
									"response": [
										{
											"id": "781399-0a53e73c-c682-42f5-bdc8-fbaaedc00a18",
											"name": "Successful operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/totp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"totp"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"user_id\": \"string\"\n}"
										},
										{
											"id": "781399-9ab11a3b-e5e5-4f63-856b-990a2453ac19",
											"name": "Resource not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/totp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"totp"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-4fc445b6-8ff3-460c-99a7-f9b4e6c23800",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/totp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"totp"
													],
													"variable": [
														{
															"key": "user_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-dca61b7f-1256-49ab-9cc1-c5bc6e38c3f6"
						},
						{
							"name": "external_accounts",
							"item": [
								{
									"name": "{external_account_id}",
									"item": [
										{
											"name": "Delete External Account",
											"id": "781399-b8fea99d-94c9-44fc-b479-f340a66cd9c2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/users/:user_id/external_accounts/:external_account_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":user_id",
														"external_accounts",
														":external_account_id"
													],
													"variable": [
														{
															"id": "5142fdec-26bf-41e3-a1d2-e2b240512d9f",
															"key": "user_id",
															"value": "string",
															"description": "The ID of the user's external account"
														},
														{
															"id": "9b90f98a-c583-4121-871f-f51b11f4fd94",
															"key": "external_account_id",
															"value": "string",
															"description": "The ID of the external account to delete"
														}
													]
												},
												"description": "Delete an external account by ID."
											},
											"response": [
												{
													"id": "781399-de8e79c0-b849-4cdd-a581-2749f6b56d80",
													"name": "Deleted Object",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/external_accounts/:external_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"external_accounts",
																":external_account_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "external_account_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
												},
												{
													"id": "781399-8400db94-f8b6-4a28-aaaa-9d9817c5499a",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/external_accounts/:external_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"external_accounts",
																":external_account_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "external_account_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-dc0e12d6-347a-4953-b543-40c7079d44ca",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/external_accounts/:external_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"external_accounts",
																":external_account_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "external_account_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-a2222fbb-022a-48e0-8ccd-7de45897cf34",
													"name": "Resource not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/external_accounts/:external_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"external_accounts",
																":external_account_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "external_account_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-b6004f82-2bba-45bd-bf90-f0d1b8777eb0",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/users/:user_id/external_accounts/:external_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																":user_id",
																"external_accounts",
																":external_account_id"
															],
															"variable": [
																{
																	"key": "user_id"
																},
																{
																	"key": "external_account_id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-78b12723-9c70-4b38-bbf3-c4e7847951c8"
								}
							],
							"id": "781399-1cebadc0-1e57-42a9-a214-8e53c7b7cace"
						},
						{
							"name": "Retrieve a user",
							"id": "781399-be729182-8731-49ab-9421-b516a1f7bf6f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"id": "ae0ad343-a9b7-4165-af21-4a623d4ccb4e",
											"key": "user_id",
											"value": "string",
											"description": "The ID of the user to retrieve"
										}
									]
								},
								"description": "Retrieve the details of a user"
							},
							"response": [
								{
									"id": "781399-22f19237-4310-475a-ae5e-79667bf71709",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"string\",\n  \"object\": \"user\",\n  \"username\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"has_image\": true,\n  \"primary_email_address_id\": \"string\",\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"password_enabled\": false,\n  \"two_factor_enabled\": true,\n  \"totp_enabled\": true,\n  \"backup_code_enabled\": false,\n  \"email_addresses\": [\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 3740,\n        \"expire_at\": 795,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_vd\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_rpod\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 4299,\n      \"updated_at\": 6121,\n      \"id\": \"string\",\n      \"matches_sso_connection\": false\n    },\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 654,\n        \"expire_at\": 2299,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_ukptplx\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_ctiorwdcpud\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 8768,\n      \"updated_at\": 6848,\n      \"id\": \"string\",\n      \"matches_sso_connection\": true\n    }\n  ],\n  \"phone_numbers\": [\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"reset_password_email_code\",\n        \"attempts\": 5030,\n        \"expire_at\": 5295,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_xlhs\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_hmfcojuqn\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 6691,\n      \"updated_at\": 2867,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": false,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 1974,\n        \"expire_at\": 1351,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_mkkkho\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_jrkoqwafoj\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 3301,\n      \"updated_at\": 2212,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": true,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ],\n  \"web3_wallets\": [\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_okx_wallet_signature\",\n        \"attempts\": 2661,\n        \"expire_at\": 2991,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2765,\n      \"updated_at\": 2131,\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_base_signature\",\n        \"attempts\": 342,\n        \"expire_at\": 7017,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2851,\n      \"updated_at\": 7003,\n      \"id\": \"string\"\n    }\n  ],\n  \"passkeys\": [\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 4336,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 5670,\n        \"expire_at\": 6420,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 690,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 7963,\n        \"expire_at\": 6633,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    }\n  ],\n  \"external_accounts\": [\n    {\n      \"object\": \"external_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": true,\n        \"key_1\": \"string\"\n      },\n      \"created_at\": 2055,\n      \"updated_at\": 1013,\n      \"verification\": {\n        \"status\": \"transferable\",\n        \"strategy\": \"oauth_xqqgqljqof\",\n        \"attempts\": 1555,\n        \"expire_at\": 5721,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    },\n    {\n      \"object\": \"google_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 9021.765466129193,\n        \"key_1\": 1363,\n        \"key_2\": \"string\"\n      },\n      \"created_at\": 4274,\n      \"updated_at\": 9548,\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"oauth_custom_vk\",\n        \"attempts\": 6794,\n        \"expire_at\": 3143,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    }\n  ],\n  \"saml_accounts\": [\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"saml\",\n        \"attempts\": 7587,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 2544,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 4224,\n      \"public_metadata\": {\n        \"key_0\": 4760\n      },\n      \"saml_connection\": {\n        \"domain\": false\n      }\n    },\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"saml\",\n        \"attempts\": 6824,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 3585,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 1557,\n      \"public_metadata\": {\n        \"key_0\": \"string\",\n        \"key_1\": true\n      },\n      \"saml_connection\": {\n        \"domain\": 9940.292404161679\n      }\n    }\n  ],\n  \"public_metadata\": {\n    \"key_0\": true\n  },\n  \"external_id\": \"string\",\n  \"last_sign_in_at\": 7275,\n  \"banned\": false,\n  \"locked\": true,\n  \"lockout_expires_in_seconds\": 4668,\n  \"verification_attempts_remaining\": 8265,\n  \"created_at\": 4547,\n  \"updated_at\": 7057,\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": false,\n  \"last_active_at\": 1700690400000,\n  \"mfa_enabled_at\": 4422,\n  \"mfa_disabled_at\": 6932,\n  \"legal_accepted_at\": 1700690400000,\n  \"locale\": \"string\",\n  \"profile_image_url\": \"string\",\n  \"image_url\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 9144\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 6532,\n    \"key_1\": 5794.302348985707\n  },\n  \"create_organizations_limit\": 91\n}"
								},
								{
									"id": "781399-d29f72be-8bc6-4636-922f-9492383716c3",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-5fd03bc2-5cbf-481f-b63e-daea288207b2",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-4fd61c67-dfa4-4752-9e30-9bf1122a2272",
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update a user",
							"id": "781399-bc0f7a68-83e5-45e1-908b-fee81d9ab9cf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"external_id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"locale\": \"string\",\n  \"primary_email_address_id\": \"string\",\n  \"notify_primary_email_address_changed\": false,\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"username\": \"string\",\n  \"profile_image_id\": \"string\",\n  \"password\": \"string\",\n  \"password_digest\": \"string\",\n  \"password_hasher\": \"string\",\n  \"skip_password_checks\": true,\n  \"sign_out_of_other_sessions\": false,\n  \"totp_secret\": \"string\",\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": 7828.46264915393,\n    \"key_2\": 6274.309271021563,\n    \"key_3\": 6518.902441881347\n  },\n  \"private_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 8146\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 1807.8141983626117,\n    \"key_1\": false\n  },\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": true,\n  \"legal_accepted_at\": \"string\",\n  \"skip_legal_checks\": false,\n  \"create_organizations_limit\": 6204,\n  \"created_at\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"id": "a13a723c-cd8e-4786-a8c6-dbd5691cae89",
											"key": "user_id",
											"value": "string",
											"description": "The ID of the user to update"
										}
									]
								},
								"description": "Update a user's attributes.\n\nYou can set the user's primary contact identifiers (email address and phone numbers) by updating the `primary_email_address_id` and `primary_phone_number_id` attributes respectively.\nBoth IDs should correspond to verified identifications that belong to the user.\n\nYou can remove a user's username by setting the username attribute to null or the blank string \"\".\nThis is a destructive action; the identification will be deleted forever.\nUsernames can be removed only if they are optional in your instance settings and there's at least one other identifier which can be used for authentication.\n\nThis endpoint allows changing a user's password. When passing the `password` parameter directly you have two further options.\nYou can ignore the password policy checks for your instance by setting the `skip_password_checks` parameter to `true`.\nYou can also choose to sign the user out of all their active sessions on any device once the password is updated. Just set `sign_out_of_other_sessions` to `true`."
							},
							"response": [
								{
									"id": "781399-19d2de6a-a515-4d4d-a6bc-6c8e7c31f39e",
									"name": "Success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"external_id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"locale\": \"string\",\n  \"primary_email_address_id\": \"string\",\n  \"notify_primary_email_address_changed\": false,\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"username\": \"string\",\n  \"profile_image_id\": \"string\",\n  \"password\": \"string\",\n  \"password_digest\": \"string\",\n  \"password_hasher\": \"string\",\n  \"skip_password_checks\": true,\n  \"sign_out_of_other_sessions\": false,\n  \"totp_secret\": \"string\",\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": 7828.46264915393,\n    \"key_2\": 6274.309271021563,\n    \"key_3\": 6518.902441881347\n  },\n  \"private_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 8146\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 1807.8141983626117,\n    \"key_1\": false\n  },\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": true,\n  \"legal_accepted_at\": \"string\",\n  \"skip_legal_checks\": false,\n  \"create_organizations_limit\": 6204,\n  \"created_at\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"string\",\n  \"object\": \"user\",\n  \"username\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"has_image\": true,\n  \"primary_email_address_id\": \"string\",\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"password_enabled\": false,\n  \"two_factor_enabled\": true,\n  \"totp_enabled\": true,\n  \"backup_code_enabled\": false,\n  \"email_addresses\": [\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 3740,\n        \"expire_at\": 795,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_vd\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_rpod\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 4299,\n      \"updated_at\": 6121,\n      \"id\": \"string\",\n      \"matches_sso_connection\": false\n    },\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 654,\n        \"expire_at\": 2299,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_ukptplx\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_ctiorwdcpud\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 8768,\n      \"updated_at\": 6848,\n      \"id\": \"string\",\n      \"matches_sso_connection\": true\n    }\n  ],\n  \"phone_numbers\": [\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"reset_password_email_code\",\n        \"attempts\": 5030,\n        \"expire_at\": 5295,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_xlhs\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_hmfcojuqn\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 6691,\n      \"updated_at\": 2867,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": false,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 1974,\n        \"expire_at\": 1351,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_mkkkho\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_jrkoqwafoj\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 3301,\n      \"updated_at\": 2212,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": true,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ],\n  \"web3_wallets\": [\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_okx_wallet_signature\",\n        \"attempts\": 2661,\n        \"expire_at\": 2991,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2765,\n      \"updated_at\": 2131,\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_base_signature\",\n        \"attempts\": 342,\n        \"expire_at\": 7017,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2851,\n      \"updated_at\": 7003,\n      \"id\": \"string\"\n    }\n  ],\n  \"passkeys\": [\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 4336,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 5670,\n        \"expire_at\": 6420,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 690,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 7963,\n        \"expire_at\": 6633,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    }\n  ],\n  \"external_accounts\": [\n    {\n      \"object\": \"external_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": true,\n        \"key_1\": \"string\"\n      },\n      \"created_at\": 2055,\n      \"updated_at\": 1013,\n      \"verification\": {\n        \"status\": \"transferable\",\n        \"strategy\": \"oauth_xqqgqljqof\",\n        \"attempts\": 1555,\n        \"expire_at\": 5721,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    },\n    {\n      \"object\": \"google_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 9021.765466129193,\n        \"key_1\": 1363,\n        \"key_2\": \"string\"\n      },\n      \"created_at\": 4274,\n      \"updated_at\": 9548,\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"oauth_custom_vk\",\n        \"attempts\": 6794,\n        \"expire_at\": 3143,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    }\n  ],\n  \"saml_accounts\": [\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"saml\",\n        \"attempts\": 7587,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 2544,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 4224,\n      \"public_metadata\": {\n        \"key_0\": 4760\n      },\n      \"saml_connection\": {\n        \"domain\": false\n      }\n    },\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"saml\",\n        \"attempts\": 6824,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 3585,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 1557,\n      \"public_metadata\": {\n        \"key_0\": \"string\",\n        \"key_1\": true\n      },\n      \"saml_connection\": {\n        \"domain\": 9940.292404161679\n      }\n    }\n  ],\n  \"public_metadata\": {\n    \"key_0\": true\n  },\n  \"external_id\": \"string\",\n  \"last_sign_in_at\": 7275,\n  \"banned\": false,\n  \"locked\": true,\n  \"lockout_expires_in_seconds\": 4668,\n  \"verification_attempts_remaining\": 8265,\n  \"created_at\": 4547,\n  \"updated_at\": 7057,\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": false,\n  \"last_active_at\": 1700690400000,\n  \"mfa_enabled_at\": 4422,\n  \"mfa_disabled_at\": 6932,\n  \"legal_accepted_at\": 1700690400000,\n  \"locale\": \"string\",\n  \"profile_image_url\": \"string\",\n  \"image_url\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 9144\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 6532,\n    \"key_1\": 5794.302348985707\n  },\n  \"create_organizations_limit\": 91\n}"
								},
								{
									"id": "781399-42041205-927b-4291-9b0e-1695c40a26cc",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"external_id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"locale\": \"string\",\n  \"primary_email_address_id\": \"string\",\n  \"notify_primary_email_address_changed\": false,\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"username\": \"string\",\n  \"profile_image_id\": \"string\",\n  \"password\": \"string\",\n  \"password_digest\": \"string\",\n  \"password_hasher\": \"string\",\n  \"skip_password_checks\": true,\n  \"sign_out_of_other_sessions\": false,\n  \"totp_secret\": \"string\",\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": 7828.46264915393,\n    \"key_2\": 6274.309271021563,\n    \"key_3\": 6518.902441881347\n  },\n  \"private_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 8146\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 1807.8141983626117,\n    \"key_1\": false\n  },\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": true,\n  \"legal_accepted_at\": \"string\",\n  \"skip_legal_checks\": false,\n  \"create_organizations_limit\": 6204,\n  \"created_at\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-a5744f2d-dfbf-46cc-b46b-fbffd028334a",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"external_id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"locale\": \"string\",\n  \"primary_email_address_id\": \"string\",\n  \"notify_primary_email_address_changed\": false,\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"username\": \"string\",\n  \"profile_image_id\": \"string\",\n  \"password\": \"string\",\n  \"password_digest\": \"string\",\n  \"password_hasher\": \"string\",\n  \"skip_password_checks\": true,\n  \"sign_out_of_other_sessions\": false,\n  \"totp_secret\": \"string\",\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": 7828.46264915393,\n    \"key_2\": 6274.309271021563,\n    \"key_3\": 6518.902441881347\n  },\n  \"private_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 8146\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 1807.8141983626117,\n    \"key_1\": false\n  },\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": true,\n  \"legal_accepted_at\": \"string\",\n  \"skip_legal_checks\": false,\n  \"create_organizations_limit\": 6204,\n  \"created_at\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-553ba267-c68e-401d-9527-e46197af0eac",
									"name": "Resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"external_id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"locale\": \"string\",\n  \"primary_email_address_id\": \"string\",\n  \"notify_primary_email_address_changed\": false,\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"username\": \"string\",\n  \"profile_image_id\": \"string\",\n  \"password\": \"string\",\n  \"password_digest\": \"string\",\n  \"password_hasher\": \"string\",\n  \"skip_password_checks\": true,\n  \"sign_out_of_other_sessions\": false,\n  \"totp_secret\": \"string\",\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": 7828.46264915393,\n    \"key_2\": 6274.309271021563,\n    \"key_3\": 6518.902441881347\n  },\n  \"private_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 8146\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 1807.8141983626117,\n    \"key_1\": false\n  },\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": true,\n  \"legal_accepted_at\": \"string\",\n  \"skip_legal_checks\": false,\n  \"create_organizations_limit\": 6204,\n  \"created_at\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-12f76337-748d-44d7-9467-2ba44548cf33",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"external_id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"locale\": \"string\",\n  \"primary_email_address_id\": \"string\",\n  \"notify_primary_email_address_changed\": false,\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"username\": \"string\",\n  \"profile_image_id\": \"string\",\n  \"password\": \"string\",\n  \"password_digest\": \"string\",\n  \"password_hasher\": \"string\",\n  \"skip_password_checks\": true,\n  \"sign_out_of_other_sessions\": false,\n  \"totp_secret\": \"string\",\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": 7828.46264915393,\n    \"key_2\": 6274.309271021563,\n    \"key_3\": 6518.902441881347\n  },\n  \"private_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 8146\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 1807.8141983626117,\n    \"key_1\": false\n  },\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": true,\n  \"legal_accepted_at\": \"string\",\n  \"skip_legal_checks\": false,\n  \"create_organizations_limit\": 6204,\n  \"created_at\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete a user",
							"id": "781399-6e0ccbc2-76d4-4b78-932d-9bfe24043b9f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"id": "fa78abe6-3708-4dbb-b81b-3a8286ec03ff",
											"key": "user_id",
											"value": "string",
											"description": "The ID of the user to delete"
										}
									]
								},
								"description": "Delete the specified user"
							},
							"response": [
								{
									"id": "781399-b486c5d8-6372-4422-90aa-5725a91ca774",
									"name": "Deleted Object",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
								},
								{
									"id": "781399-ff54d171-05d8-4d7b-86ee-ba3ddbd77924",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-b1e0bf20-c43b-446d-984b-36b40fc7264d",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-6ed16d88-d331-4134-9e3b-38f11b8692d9",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-a406a337-2001-4eba-9540-db7dc7af1bc4"
				},
				{
					"name": "ban",
					"item": [
						{
							"name": "Ban multiple users",
							"id": "781399-d5252ad4-1d18-4c40-ab5e-905482ad03b3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_ids\": [\n    \"string\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/ban",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"ban"
									]
								},
								"description": "Marks multiple users as banned, which means that all their sessions are revoked and they are not allowed to sign in again."
							},
							"response": [
								{
									"id": "781399-46094bd1-531c-4b7f-9e29-1b7eb61efdd6",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_ids\": [\n    \"string\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/ban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"ban"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"id\": \"string\",\n    \"object\": \"user\",\n    \"username\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"has_image\": true,\n    \"primary_email_address_id\": \"string\",\n    \"primary_phone_number_id\": \"string\",\n    \"primary_web3_wallet_id\": \"string\",\n    \"password_enabled\": false,\n    \"two_factor_enabled\": true,\n    \"totp_enabled\": true,\n    \"backup_code_enabled\": true,\n    \"email_addresses\": [\n      {\n        \"object\": \"email_address\",\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"expired\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 6466,\n          \"expire_at\": 2353,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_gegd\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_uewpwwdmoz\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": false,\n        \"created_at\": 5019,\n        \"updated_at\": 7269,\n        \"id\": \"string\",\n        \"matches_sso_connection\": true\n      },\n      {\n        \"object\": \"email_address\",\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"failed\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 6997,\n          \"expire_at\": 7870,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_wlehp\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_yoslydqjoz\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": false,\n        \"created_at\": 4337,\n        \"updated_at\": 603,\n        \"id\": \"string\",\n        \"matches_sso_connection\": true\n      }\n    ],\n    \"phone_numbers\": [\n      {\n        \"object\": \"phone_number\",\n        \"phone_number\": \"string\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 6365,\n          \"expire_at\": 7190,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_y\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_vgjmfva\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": true,\n        \"created_at\": 8717,\n        \"updated_at\": 8816,\n        \"id\": \"string\",\n        \"reserved_for_second_factor\": false,\n        \"default_second_factor\": false,\n        \"backup_codes\": [\n          \"string\",\n          \"string\"\n        ]\n      },\n      {\n        \"object\": \"phone_number\",\n        \"phone_number\": \"string\",\n        \"verification\": {\n          \"status\": \"failed\",\n          \"strategy\": \"phone_code\",\n          \"attempts\": 5409,\n          \"expire_at\": 8148,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_wacero\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_qgbqlvaeq\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": false,\n        \"created_at\": 309,\n        \"updated_at\": 6727,\n        \"id\": \"string\",\n        \"reserved_for_second_factor\": true,\n        \"default_second_factor\": true,\n        \"backup_codes\": [\n          \"string\",\n          \"string\"\n        ]\n      }\n    ],\n    \"web3_wallets\": [\n      {\n        \"object\": \"web3_wallet\",\n        \"web3_wallet\": \"string\",\n        \"verification\": {\n          \"status\": \"failed\",\n          \"strategy\": \"web3_okx_wallet_signature\",\n          \"attempts\": 7988,\n          \"expire_at\": 149,\n          \"object\": \"verification_web3\",\n          \"nonce\": \"string\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"created_at\": 5596,\n        \"updated_at\": 3633,\n        \"id\": \"string\"\n      },\n      {\n        \"object\": \"web3_wallet\",\n        \"web3_wallet\": \"string\",\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"web3_metamask_signature\",\n          \"attempts\": 4827,\n          \"expire_at\": 4175,\n          \"object\": \"verification_web3\",\n          \"nonce\": \"string\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"created_at\": 8351,\n        \"updated_at\": 3263,\n        \"id\": \"string\"\n      }\n    ],\n    \"passkeys\": [\n      {\n        \"object\": \"passkey\",\n        \"name\": \"string\",\n        \"last_used_at\": 2857,\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"passkey\",\n          \"attempts\": 6338,\n          \"expire_at\": 1571,\n          \"object\": \"verification_passkey\",\n          \"nonce\": \"nonce\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"id\": \"string\"\n      },\n      {\n        \"object\": \"passkey\",\n        \"name\": \"string\",\n        \"last_used_at\": 5609,\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"passkey\",\n          \"attempts\": 5181,\n          \"expire_at\": 8104,\n          \"object\": \"verification_passkey\",\n          \"nonce\": \"nonce\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"id\": \"string\"\n      }\n    ],\n    \"external_accounts\": [\n      {\n        \"object\": \"google_account\",\n        \"id\": \"string\",\n        \"provider\": \"string\",\n        \"identification_id\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"approved_scopes\": \"string\",\n        \"email_address\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"public_metadata\": {\n          \"key_0\": \"string\"\n        },\n        \"created_at\": 1926,\n        \"updated_at\": 7409,\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"oauth_custom_pnkhht\",\n          \"attempts\": 1823,\n          \"expire_at\": 9710,\n          \"object\": \"verification_oauth\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"verified_at_client\": \"string\"\n        },\n        \"avatar_url\": \"string\",\n        \"image_url\": \"string\",\n        \"username\": \"string\",\n        \"phone_number\": \"string\",\n        \"label\": \"string\"\n      },\n      {\n        \"object\": \"external_account\",\n        \"id\": \"string\",\n        \"provider\": \"string\",\n        \"identification_id\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"approved_scopes\": \"string\",\n        \"email_address\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"public_metadata\": {\n          \"key_0\": 7555,\n          \"key_1\": 2471\n        },\n        \"created_at\": 288,\n        \"updated_at\": 2157,\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"oauth_custom_cxaywcivm\",\n          \"attempts\": 6529,\n          \"expire_at\": 2102,\n          \"object\": \"verification_oauth\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"verified_at_client\": \"string\"\n        },\n        \"avatar_url\": \"string\",\n        \"image_url\": \"string\",\n        \"username\": \"string\",\n        \"phone_number\": \"string\",\n        \"label\": \"string\"\n      }\n    ],\n    \"saml_accounts\": [\n      {\n        \"id\": \"string\",\n        \"object\": \"saml_account\",\n        \"provider\": \"string\",\n        \"active\": true,\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"saml\",\n          \"attempts\": 74,\n          \"object\": \"verification_saml\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"expire_at\": 5235,\n          \"verified_at_client\": \"string\"\n        },\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"last_authenticated_at\": 5750,\n        \"public_metadata\": {\n          \"key_0\": true\n        },\n        \"saml_connection\": {\n          \"domain\": false\n        }\n      },\n      {\n        \"id\": \"string\",\n        \"object\": \"saml_account\",\n        \"provider\": \"string\",\n        \"active\": false,\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"expired\",\n          \"strategy\": \"saml\",\n          \"attempts\": 2777,\n          \"object\": \"verification_saml\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"expire_at\": 3924,\n          \"verified_at_client\": \"string\"\n        },\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"last_authenticated_at\": 8491,\n        \"public_metadata\": {\n          \"key_0\": \"string\",\n          \"key_1\": 2566\n        },\n        \"saml_connection\": {\n          \"domain\": 2240\n        }\n      }\n    ],\n    \"public_metadata\": {\n      \"key_0\": 8206.931762137669\n    },\n    \"external_id\": \"string\",\n    \"last_sign_in_at\": 4634,\n    \"banned\": false,\n    \"locked\": true,\n    \"lockout_expires_in_seconds\": 5026,\n    \"verification_attempts_remaining\": 455,\n    \"created_at\": 2003,\n    \"updated_at\": 693,\n    \"delete_self_enabled\": false,\n    \"create_organization_enabled\": false,\n    \"last_active_at\": 1700690400000,\n    \"mfa_enabled_at\": 7370,\n    \"mfa_disabled_at\": 8296,\n    \"legal_accepted_at\": 1700690400000,\n    \"locale\": \"string\",\n    \"profile_image_url\": \"string\",\n    \"image_url\": \"string\",\n    \"private_metadata\": {\n      \"key_0\": true,\n      \"key_1\": 48.631855833113356,\n      \"key_2\": false\n    },\n    \"unsafe_metadata\": {\n      \"key_0\": false\n    },\n    \"create_organizations_limit\": 6886\n  },\n  {\n    \"id\": \"string\",\n    \"object\": \"user\",\n    \"username\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"has_image\": true,\n    \"primary_email_address_id\": \"string\",\n    \"primary_phone_number_id\": \"string\",\n    \"primary_web3_wallet_id\": \"string\",\n    \"password_enabled\": true,\n    \"two_factor_enabled\": false,\n    \"totp_enabled\": false,\n    \"backup_code_enabled\": false,\n    \"email_addresses\": [\n      {\n        \"object\": \"email_address\",\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"phone_code\",\n          \"attempts\": 6651,\n          \"expire_at\": 8179,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_rygjjicyw\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_hbcxmgpv\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": true,\n        \"created_at\": 8560,\n        \"updated_at\": 3429,\n        \"id\": \"string\",\n        \"matches_sso_connection\": false\n      },\n      {\n        \"object\": \"email_address\",\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"expired\",\n          \"strategy\": \"phone_code\",\n          \"attempts\": 7075,\n          \"expire_at\": 9127,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_e\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_owkyobtlxll\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": true,\n        \"created_at\": 2553,\n        \"updated_at\": 6666,\n        \"id\": \"string\",\n        \"matches_sso_connection\": false\n      }\n    ],\n    \"phone_numbers\": [\n      {\n        \"object\": \"phone_number\",\n        \"phone_number\": \"string\",\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 4564,\n          \"expire_at\": 3030,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_yyghqkcxqp\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_ienirfo\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": false,\n        \"created_at\": 8820,\n        \"updated_at\": 4116,\n        \"id\": \"string\",\n        \"reserved_for_second_factor\": false,\n        \"default_second_factor\": true,\n        \"backup_codes\": [\n          \"string\",\n          \"string\"\n        ]\n      },\n      {\n        \"object\": \"phone_number\",\n        \"phone_number\": \"string\",\n        \"verification\": {\n          \"status\": \"failed\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 3744,\n          \"expire_at\": 2654,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_nuu\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_hqxfjvr\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": true,\n        \"created_at\": 2539,\n        \"updated_at\": 6919,\n        \"id\": \"string\",\n        \"reserved_for_second_factor\": true,\n        \"default_second_factor\": false,\n        \"backup_codes\": [\n          \"string\",\n          \"string\"\n        ]\n      }\n    ],\n    \"web3_wallets\": [\n      {\n        \"object\": \"web3_wallet\",\n        \"web3_wallet\": \"string\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"web3_coinbase_wallet_signature\",\n          \"attempts\": 441,\n          \"expire_at\": 9021,\n          \"object\": \"verification_web3\",\n          \"nonce\": \"string\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"created_at\": 3118,\n        \"updated_at\": 8174,\n        \"id\": \"string\"\n      },\n      {\n        \"object\": \"web3_wallet\",\n        \"web3_wallet\": \"string\",\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"web3_coinbase_wallet_signature\",\n          \"attempts\": 5795,\n          \"expire_at\": 2218,\n          \"object\": \"verification_web3\",\n          \"nonce\": \"string\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"created_at\": 2129,\n        \"updated_at\": 3613,\n        \"id\": \"string\"\n      }\n    ],\n    \"passkeys\": [\n      {\n        \"object\": \"passkey\",\n        \"name\": \"string\",\n        \"last_used_at\": 7310,\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"passkey\",\n          \"attempts\": 1800,\n          \"expire_at\": 4965,\n          \"object\": \"verification_passkey\",\n          \"nonce\": \"nonce\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"id\": \"string\"\n      },\n      {\n        \"object\": \"passkey\",\n        \"name\": \"string\",\n        \"last_used_at\": 6556,\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"passkey\",\n          \"attempts\": 5933,\n          \"expire_at\": 2128,\n          \"object\": \"verification_passkey\",\n          \"nonce\": \"nonce\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"id\": \"string\"\n      }\n    ],\n    \"external_accounts\": [\n      {\n        \"object\": \"external_account\",\n        \"id\": \"string\",\n        \"provider\": \"string\",\n        \"identification_id\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"approved_scopes\": \"string\",\n        \"email_address\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"public_metadata\": {\n          \"key_0\": 1806\n        },\n        \"created_at\": 3330,\n        \"updated_at\": 3961,\n        \"verification\": {\n          \"status\": \"transferable\",\n          \"strategy\": \"oauth_token_fsmpzcleg\",\n          \"attempts\": 7061,\n          \"expire_at\": 5935,\n          \"object\": \"verification_oauth\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"verified_at_client\": \"string\"\n        },\n        \"avatar_url\": \"string\",\n        \"image_url\": \"string\",\n        \"username\": \"string\",\n        \"phone_number\": \"string\",\n        \"label\": \"string\"\n      },\n      {\n        \"object\": \"facebook_account\",\n        \"id\": \"string\",\n        \"provider\": \"string\",\n        \"identification_id\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"approved_scopes\": \"string\",\n        \"email_address\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"public_metadata\": {\n          \"key_0\": 7478.800382558048\n        },\n        \"created_at\": 6870,\n        \"updated_at\": 1607,\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"oauth_fmipctfakmo\",\n          \"attempts\": 5710,\n          \"expire_at\": 1034,\n          \"object\": \"verification_oauth\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"verified_at_client\": \"string\"\n        },\n        \"avatar_url\": \"string\",\n        \"image_url\": \"string\",\n        \"username\": \"string\",\n        \"phone_number\": \"string\",\n        \"label\": \"string\"\n      }\n    ],\n    \"saml_accounts\": [\n      {\n        \"id\": \"string\",\n        \"object\": \"saml_account\",\n        \"provider\": \"string\",\n        \"active\": false,\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"saml\",\n          \"attempts\": 5283,\n          \"object\": \"verification_saml\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"expire_at\": 421,\n          \"verified_at_client\": \"string\"\n        },\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"last_authenticated_at\": 6745,\n        \"public_metadata\": {\n          \"key_0\": 9589.09245702235,\n          \"key_1\": 8155.474868427625,\n          \"key_2\": 249.21177643408842\n        },\n        \"saml_connection\": {\n          \"domain\": true\n        }\n      },\n      {\n        \"id\": \"string\",\n        \"object\": \"saml_account\",\n        \"provider\": \"string\",\n        \"active\": false,\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"expired\",\n          \"strategy\": \"saml\",\n          \"attempts\": 5098,\n          \"object\": \"verification_saml\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"expire_at\": 6779,\n          \"verified_at_client\": \"string\"\n        },\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"last_authenticated_at\": 5289,\n        \"public_metadata\": {\n          \"key_0\": \"string\",\n          \"key_1\": 5726,\n          \"key_2\": 3094\n        },\n        \"saml_connection\": {\n          \"domain\": 7678.723575334429\n        }\n      }\n    ],\n    \"public_metadata\": {\n      \"key_0\": 3625.75820004018,\n      \"key_1\": 7370,\n      \"key_2\": \"string\"\n    },\n    \"external_id\": \"string\",\n    \"last_sign_in_at\": 963,\n    \"banned\": false,\n    \"locked\": true,\n    \"lockout_expires_in_seconds\": 4583,\n    \"verification_attempts_remaining\": 411,\n    \"created_at\": 6120,\n    \"updated_at\": 4431,\n    \"delete_self_enabled\": true,\n    \"create_organization_enabled\": false,\n    \"last_active_at\": 1700690400000,\n    \"mfa_enabled_at\": 8890,\n    \"mfa_disabled_at\": 3631,\n    \"legal_accepted_at\": 1700690400000,\n    \"locale\": \"string\",\n    \"profile_image_url\": \"string\",\n    \"image_url\": \"string\",\n    \"private_metadata\": {\n      \"key_0\": 4774.919442847308\n    },\n    \"unsafe_metadata\": {\n      \"key_0\": true,\n      \"key_1\": true,\n      \"key_2\": \"string\"\n    },\n    \"create_organizations_limit\": 2911\n  }\n]"
								},
								{
									"id": "781399-2d82ee90-6c20-44eb-bfc9-40b1d85ba4f2",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_ids\": [\n    \"string\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/ban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"ban"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-43a93561-07ca-46a9-9d31-9c0fd7942266",
									"name": "Payment required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_ids\": [\n    \"string\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/ban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"ban"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-e65d9512-09f7-48e6-ac22-0877a67e1a3b"
				},
				{
					"name": "unban",
					"item": [
						{
							"name": "Unban multiple users",
							"id": "781399-5e10ec04-bff9-4da5-bef6-b45752bc6597",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_ids\": [\n    \"string\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/unban",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"unban"
									]
								},
								"description": "Removes the ban mark from multiple users."
							},
							"response": [
								{
									"id": "781399-81362860-b7f8-4232-8715-ca62421bbfab",
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_ids\": [\n    \"string\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/unban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"unban"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"id\": \"string\",\n    \"object\": \"user\",\n    \"username\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"has_image\": true,\n    \"primary_email_address_id\": \"string\",\n    \"primary_phone_number_id\": \"string\",\n    \"primary_web3_wallet_id\": \"string\",\n    \"password_enabled\": false,\n    \"two_factor_enabled\": true,\n    \"totp_enabled\": true,\n    \"backup_code_enabled\": true,\n    \"email_addresses\": [\n      {\n        \"object\": \"email_address\",\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"expired\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 6466,\n          \"expire_at\": 2353,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_gegd\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_uewpwwdmoz\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": false,\n        \"created_at\": 5019,\n        \"updated_at\": 7269,\n        \"id\": \"string\",\n        \"matches_sso_connection\": true\n      },\n      {\n        \"object\": \"email_address\",\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"failed\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 6997,\n          \"expire_at\": 7870,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_wlehp\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_yoslydqjoz\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": false,\n        \"created_at\": 4337,\n        \"updated_at\": 603,\n        \"id\": \"string\",\n        \"matches_sso_connection\": true\n      }\n    ],\n    \"phone_numbers\": [\n      {\n        \"object\": \"phone_number\",\n        \"phone_number\": \"string\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 6365,\n          \"expire_at\": 7190,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_y\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_vgjmfva\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": true,\n        \"created_at\": 8717,\n        \"updated_at\": 8816,\n        \"id\": \"string\",\n        \"reserved_for_second_factor\": false,\n        \"default_second_factor\": false,\n        \"backup_codes\": [\n          \"string\",\n          \"string\"\n        ]\n      },\n      {\n        \"object\": \"phone_number\",\n        \"phone_number\": \"string\",\n        \"verification\": {\n          \"status\": \"failed\",\n          \"strategy\": \"phone_code\",\n          \"attempts\": 5409,\n          \"expire_at\": 8148,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_wacero\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_qgbqlvaeq\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": false,\n        \"created_at\": 309,\n        \"updated_at\": 6727,\n        \"id\": \"string\",\n        \"reserved_for_second_factor\": true,\n        \"default_second_factor\": true,\n        \"backup_codes\": [\n          \"string\",\n          \"string\"\n        ]\n      }\n    ],\n    \"web3_wallets\": [\n      {\n        \"object\": \"web3_wallet\",\n        \"web3_wallet\": \"string\",\n        \"verification\": {\n          \"status\": \"failed\",\n          \"strategy\": \"web3_okx_wallet_signature\",\n          \"attempts\": 7988,\n          \"expire_at\": 149,\n          \"object\": \"verification_web3\",\n          \"nonce\": \"string\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"created_at\": 5596,\n        \"updated_at\": 3633,\n        \"id\": \"string\"\n      },\n      {\n        \"object\": \"web3_wallet\",\n        \"web3_wallet\": \"string\",\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"web3_metamask_signature\",\n          \"attempts\": 4827,\n          \"expire_at\": 4175,\n          \"object\": \"verification_web3\",\n          \"nonce\": \"string\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"created_at\": 8351,\n        \"updated_at\": 3263,\n        \"id\": \"string\"\n      }\n    ],\n    \"passkeys\": [\n      {\n        \"object\": \"passkey\",\n        \"name\": \"string\",\n        \"last_used_at\": 2857,\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"passkey\",\n          \"attempts\": 6338,\n          \"expire_at\": 1571,\n          \"object\": \"verification_passkey\",\n          \"nonce\": \"nonce\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"id\": \"string\"\n      },\n      {\n        \"object\": \"passkey\",\n        \"name\": \"string\",\n        \"last_used_at\": 5609,\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"passkey\",\n          \"attempts\": 5181,\n          \"expire_at\": 8104,\n          \"object\": \"verification_passkey\",\n          \"nonce\": \"nonce\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"id\": \"string\"\n      }\n    ],\n    \"external_accounts\": [\n      {\n        \"object\": \"google_account\",\n        \"id\": \"string\",\n        \"provider\": \"string\",\n        \"identification_id\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"approved_scopes\": \"string\",\n        \"email_address\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"public_metadata\": {\n          \"key_0\": \"string\"\n        },\n        \"created_at\": 1926,\n        \"updated_at\": 7409,\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"oauth_custom_pnkhht\",\n          \"attempts\": 1823,\n          \"expire_at\": 9710,\n          \"object\": \"verification_oauth\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"verified_at_client\": \"string\"\n        },\n        \"avatar_url\": \"string\",\n        \"image_url\": \"string\",\n        \"username\": \"string\",\n        \"phone_number\": \"string\",\n        \"label\": \"string\"\n      },\n      {\n        \"object\": \"external_account\",\n        \"id\": \"string\",\n        \"provider\": \"string\",\n        \"identification_id\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"approved_scopes\": \"string\",\n        \"email_address\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"public_metadata\": {\n          \"key_0\": 7555,\n          \"key_1\": 2471\n        },\n        \"created_at\": 288,\n        \"updated_at\": 2157,\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"oauth_custom_cxaywcivm\",\n          \"attempts\": 6529,\n          \"expire_at\": 2102,\n          \"object\": \"verification_oauth\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"verified_at_client\": \"string\"\n        },\n        \"avatar_url\": \"string\",\n        \"image_url\": \"string\",\n        \"username\": \"string\",\n        \"phone_number\": \"string\",\n        \"label\": \"string\"\n      }\n    ],\n    \"saml_accounts\": [\n      {\n        \"id\": \"string\",\n        \"object\": \"saml_account\",\n        \"provider\": \"string\",\n        \"active\": true,\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"saml\",\n          \"attempts\": 74,\n          \"object\": \"verification_saml\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"expire_at\": 5235,\n          \"verified_at_client\": \"string\"\n        },\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"last_authenticated_at\": 5750,\n        \"public_metadata\": {\n          \"key_0\": true\n        },\n        \"saml_connection\": {\n          \"domain\": false\n        }\n      },\n      {\n        \"id\": \"string\",\n        \"object\": \"saml_account\",\n        \"provider\": \"string\",\n        \"active\": false,\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"expired\",\n          \"strategy\": \"saml\",\n          \"attempts\": 2777,\n          \"object\": \"verification_saml\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"expire_at\": 3924,\n          \"verified_at_client\": \"string\"\n        },\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"last_authenticated_at\": 8491,\n        \"public_metadata\": {\n          \"key_0\": \"string\",\n          \"key_1\": 2566\n        },\n        \"saml_connection\": {\n          \"domain\": 2240\n        }\n      }\n    ],\n    \"public_metadata\": {\n      \"key_0\": 8206.931762137669\n    },\n    \"external_id\": \"string\",\n    \"last_sign_in_at\": 4634,\n    \"banned\": false,\n    \"locked\": true,\n    \"lockout_expires_in_seconds\": 5026,\n    \"verification_attempts_remaining\": 455,\n    \"created_at\": 2003,\n    \"updated_at\": 693,\n    \"delete_self_enabled\": false,\n    \"create_organization_enabled\": false,\n    \"last_active_at\": 1700690400000,\n    \"mfa_enabled_at\": 7370,\n    \"mfa_disabled_at\": 8296,\n    \"legal_accepted_at\": 1700690400000,\n    \"locale\": \"string\",\n    \"profile_image_url\": \"string\",\n    \"image_url\": \"string\",\n    \"private_metadata\": {\n      \"key_0\": true,\n      \"key_1\": 48.631855833113356,\n      \"key_2\": false\n    },\n    \"unsafe_metadata\": {\n      \"key_0\": false\n    },\n    \"create_organizations_limit\": 6886\n  },\n  {\n    \"id\": \"string\",\n    \"object\": \"user\",\n    \"username\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"has_image\": true,\n    \"primary_email_address_id\": \"string\",\n    \"primary_phone_number_id\": \"string\",\n    \"primary_web3_wallet_id\": \"string\",\n    \"password_enabled\": true,\n    \"two_factor_enabled\": false,\n    \"totp_enabled\": false,\n    \"backup_code_enabled\": false,\n    \"email_addresses\": [\n      {\n        \"object\": \"email_address\",\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"phone_code\",\n          \"attempts\": 6651,\n          \"expire_at\": 8179,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_rygjjicyw\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_hbcxmgpv\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": true,\n        \"created_at\": 8560,\n        \"updated_at\": 3429,\n        \"id\": \"string\",\n        \"matches_sso_connection\": false\n      },\n      {\n        \"object\": \"email_address\",\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"expired\",\n          \"strategy\": \"phone_code\",\n          \"attempts\": 7075,\n          \"expire_at\": 9127,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_e\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_owkyobtlxll\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": true,\n        \"created_at\": 2553,\n        \"updated_at\": 6666,\n        \"id\": \"string\",\n        \"matches_sso_connection\": false\n      }\n    ],\n    \"phone_numbers\": [\n      {\n        \"object\": \"phone_number\",\n        \"phone_number\": \"string\",\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 4564,\n          \"expire_at\": 3030,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_yyghqkcxqp\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_ienirfo\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": false,\n        \"created_at\": 8820,\n        \"updated_at\": 4116,\n        \"id\": \"string\",\n        \"reserved_for_second_factor\": false,\n        \"default_second_factor\": true,\n        \"backup_codes\": [\n          \"string\",\n          \"string\"\n        ]\n      },\n      {\n        \"object\": \"phone_number\",\n        \"phone_number\": \"string\",\n        \"verification\": {\n          \"status\": \"failed\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 3744,\n          \"expire_at\": 2654,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_nuu\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_hqxfjvr\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": true,\n        \"created_at\": 2539,\n        \"updated_at\": 6919,\n        \"id\": \"string\",\n        \"reserved_for_second_factor\": true,\n        \"default_second_factor\": false,\n        \"backup_codes\": [\n          \"string\",\n          \"string\"\n        ]\n      }\n    ],\n    \"web3_wallets\": [\n      {\n        \"object\": \"web3_wallet\",\n        \"web3_wallet\": \"string\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"web3_coinbase_wallet_signature\",\n          \"attempts\": 441,\n          \"expire_at\": 9021,\n          \"object\": \"verification_web3\",\n          \"nonce\": \"string\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"created_at\": 3118,\n        \"updated_at\": 8174,\n        \"id\": \"string\"\n      },\n      {\n        \"object\": \"web3_wallet\",\n        \"web3_wallet\": \"string\",\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"web3_coinbase_wallet_signature\",\n          \"attempts\": 5795,\n          \"expire_at\": 2218,\n          \"object\": \"verification_web3\",\n          \"nonce\": \"string\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"created_at\": 2129,\n        \"updated_at\": 3613,\n        \"id\": \"string\"\n      }\n    ],\n    \"passkeys\": [\n      {\n        \"object\": \"passkey\",\n        \"name\": \"string\",\n        \"last_used_at\": 7310,\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"passkey\",\n          \"attempts\": 1800,\n          \"expire_at\": 4965,\n          \"object\": \"verification_passkey\",\n          \"nonce\": \"nonce\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"id\": \"string\"\n      },\n      {\n        \"object\": \"passkey\",\n        \"name\": \"string\",\n        \"last_used_at\": 6556,\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"passkey\",\n          \"attempts\": 5933,\n          \"expire_at\": 2128,\n          \"object\": \"verification_passkey\",\n          \"nonce\": \"nonce\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"id\": \"string\"\n      }\n    ],\n    \"external_accounts\": [\n      {\n        \"object\": \"external_account\",\n        \"id\": \"string\",\n        \"provider\": \"string\",\n        \"identification_id\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"approved_scopes\": \"string\",\n        \"email_address\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"public_metadata\": {\n          \"key_0\": 1806\n        },\n        \"created_at\": 3330,\n        \"updated_at\": 3961,\n        \"verification\": {\n          \"status\": \"transferable\",\n          \"strategy\": \"oauth_token_fsmpzcleg\",\n          \"attempts\": 7061,\n          \"expire_at\": 5935,\n          \"object\": \"verification_oauth\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"verified_at_client\": \"string\"\n        },\n        \"avatar_url\": \"string\",\n        \"image_url\": \"string\",\n        \"username\": \"string\",\n        \"phone_number\": \"string\",\n        \"label\": \"string\"\n      },\n      {\n        \"object\": \"facebook_account\",\n        \"id\": \"string\",\n        \"provider\": \"string\",\n        \"identification_id\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"approved_scopes\": \"string\",\n        \"email_address\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"public_metadata\": {\n          \"key_0\": 7478.800382558048\n        },\n        \"created_at\": 6870,\n        \"updated_at\": 1607,\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"oauth_fmipctfakmo\",\n          \"attempts\": 5710,\n          \"expire_at\": 1034,\n          \"object\": \"verification_oauth\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"verified_at_client\": \"string\"\n        },\n        \"avatar_url\": \"string\",\n        \"image_url\": \"string\",\n        \"username\": \"string\",\n        \"phone_number\": \"string\",\n        \"label\": \"string\"\n      }\n    ],\n    \"saml_accounts\": [\n      {\n        \"id\": \"string\",\n        \"object\": \"saml_account\",\n        \"provider\": \"string\",\n        \"active\": false,\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"saml\",\n          \"attempts\": 5283,\n          \"object\": \"verification_saml\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"expire_at\": 421,\n          \"verified_at_client\": \"string\"\n        },\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"last_authenticated_at\": 6745,\n        \"public_metadata\": {\n          \"key_0\": 9589.09245702235,\n          \"key_1\": 8155.474868427625,\n          \"key_2\": 249.21177643408842\n        },\n        \"saml_connection\": {\n          \"domain\": true\n        }\n      },\n      {\n        \"id\": \"string\",\n        \"object\": \"saml_account\",\n        \"provider\": \"string\",\n        \"active\": false,\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"expired\",\n          \"strategy\": \"saml\",\n          \"attempts\": 5098,\n          \"object\": \"verification_saml\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"expire_at\": 6779,\n          \"verified_at_client\": \"string\"\n        },\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"last_authenticated_at\": 5289,\n        \"public_metadata\": {\n          \"key_0\": \"string\",\n          \"key_1\": 5726,\n          \"key_2\": 3094\n        },\n        \"saml_connection\": {\n          \"domain\": 7678.723575334429\n        }\n      }\n    ],\n    \"public_metadata\": {\n      \"key_0\": 3625.75820004018,\n      \"key_1\": 7370,\n      \"key_2\": \"string\"\n    },\n    \"external_id\": \"string\",\n    \"last_sign_in_at\": 963,\n    \"banned\": false,\n    \"locked\": true,\n    \"lockout_expires_in_seconds\": 4583,\n    \"verification_attempts_remaining\": 411,\n    \"created_at\": 6120,\n    \"updated_at\": 4431,\n    \"delete_self_enabled\": true,\n    \"create_organization_enabled\": false,\n    \"last_active_at\": 1700690400000,\n    \"mfa_enabled_at\": 8890,\n    \"mfa_disabled_at\": 3631,\n    \"legal_accepted_at\": 1700690400000,\n    \"locale\": \"string\",\n    \"profile_image_url\": \"string\",\n    \"image_url\": \"string\",\n    \"private_metadata\": {\n      \"key_0\": 4774.919442847308\n    },\n    \"unsafe_metadata\": {\n      \"key_0\": true,\n      \"key_1\": true,\n      \"key_2\": \"string\"\n    },\n    \"create_organizations_limit\": 2911\n  }\n]"
								},
								{
									"id": "781399-518e048a-7c49-45ff-85dc-ac43f331511f",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_ids\": [\n    \"string\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/unban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"unban"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-968a8424-9d06-4e10-a35f-aed72a78f4a3",
									"name": "Payment required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_ids\": [\n    \"string\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/unban",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"unban"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-3a141f67-167b-4055-9d79-aa6829471d01"
				},
				{
					"name": "List all users",
					"id": "781399-ebce0f00-5397-4499-9197-33f975ad2a38",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users?email_address=string&email_address=string&phone_number=string&phone_number=string&external_id=string&external_id=string&username=string&username=string&web3_wallet=string&web3_wallet=string&user_id=string&user_id=string&organization_id=string&organization_id=string&query=string&email_address_query=string&phone_number_query=string&username_query=string&name_query=string&banned=true&last_active_at_before=1700690400000&last_active_at_after=1700690400000&last_active_at_since=1700690400000&created_at_before=1730160000000&created_at_after=1730160000000&limit=10&offset=0&order_by=-created_at",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "email_address",
									"value": "string",
									"description": "Returns users with the specified email addresses.\nAccepts up to 100 email addresses.\nAny email addresses not found are ignored."
								},
								{
									"key": "email_address",
									"value": "string",
									"description": "Returns users with the specified email addresses.\nAccepts up to 100 email addresses.\nAny email addresses not found are ignored."
								},
								{
									"key": "phone_number",
									"value": "string",
									"description": "Returns users with the specified phone numbers.\nAccepts up to 100 phone numbers.\nAny phone numbers not found are ignored."
								},
								{
									"key": "phone_number",
									"value": "string",
									"description": "Returns users with the specified phone numbers.\nAccepts up to 100 phone numbers.\nAny phone numbers not found are ignored."
								},
								{
									"key": "external_id",
									"value": "string",
									"description": "Returns users with the specified external IDs.\nFor each external ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective external ID should be included or\nexcluded from the result set.\nAccepts up to 100 external IDs.\nAny external IDs not found are ignored."
								},
								{
									"key": "external_id",
									"value": "string",
									"description": "Returns users with the specified external IDs.\nFor each external ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective external ID should be included or\nexcluded from the result set.\nAccepts up to 100 external IDs.\nAny external IDs not found are ignored."
								},
								{
									"key": "username",
									"value": "string",
									"description": "Returns users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored."
								},
								{
									"key": "username",
									"value": "string",
									"description": "Returns users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored."
								},
								{
									"key": "web3_wallet",
									"value": "string",
									"description": "Returns users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored."
								},
								{
									"key": "web3_wallet",
									"value": "string",
									"description": "Returns users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored."
								},
								{
									"key": "user_id",
									"value": "string",
									"description": "Returns users with the user IDs specified.\nFor each user ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective user ID should be included or\nexcluded from the result set.\nAccepts up to 100 user IDs.\nAny user IDs not found are ignored."
								},
								{
									"key": "user_id",
									"value": "string",
									"description": "Returns users with the user IDs specified.\nFor each user ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective user ID should be included or\nexcluded from the result set.\nAccepts up to 100 user IDs.\nAny user IDs not found are ignored."
								},
								{
									"key": "organization_id",
									"value": "string",
									"description": "Returns users that have memberships to the\ngiven organizations.\nFor each organization ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective organization should be included or\nexcluded from the result set.\nAccepts up to 100 organization IDs."
								},
								{
									"key": "organization_id",
									"value": "string",
									"description": "Returns users that have memberships to the\ngiven organizations.\nFor each organization ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective organization should be included or\nexcluded from the result set.\nAccepts up to 100 organization IDs."
								},
								{
									"key": "query",
									"value": "string",
									"description": "Returns users that match the given query.\nFor possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user IDs, first and last names.\nThe query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well."
								},
								{
									"key": "email_address_query",
									"value": "string",
									"description": "Returns users with emails that match the given query, via case-insensitive partial match.\nFor example, `email_address_query=ello` will match a user with the email `HELLO@example.com`."
								},
								{
									"key": "phone_number_query",
									"value": "string",
									"description": "Returns users with phone numbers that match the given query, via case-insensitive partial match.\nFor example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`."
								},
								{
									"key": "username_query",
									"value": "string",
									"description": "Returns users with usernames that match the given query, via case-insensitive partial match.\nFor example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`."
								},
								{
									"key": "name_query",
									"value": "string",
									"description": "Returns users with names that match the given query, via case-insensitive partial match."
								},
								{
									"key": "banned",
									"value": "true",
									"description": "Returns users which are either banned (`banned=true`) or not banned (`banned=false`)."
								},
								{
									"key": "last_active_at_before",
									"value": "1700690400000",
									"description": "Returns users whose last session activity was before the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23."
								},
								{
									"key": "last_active_at_after",
									"value": "1700690400000",
									"description": "Returns users whose last session activity was after the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23."
								},
								{
									"key": "last_active_at_since",
									"value": "1700690400000",
									"description": "Returns users that had session activity since the given date.\nExample: use 1700690400000 to retrieve users that had session activity from 2023-11-23 until the current day.\nDeprecated in favor of `last_active_at_after`."
								},
								{
									"key": "created_at_before",
									"value": "1730160000000",
									"description": "Returns users who have been created before the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created before 2024-10-29."
								},
								{
									"key": "created_at_after",
									"value": "1730160000000",
									"description": "Returns users who have been created after the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created after 2024-10-29."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								},
								{
									"key": "order_by",
									"value": "-created_at",
									"description": "Allows to return users in a particular order.\nAt the moment, you can order the returned users by their `created_at`,`updated_at`,`email_address`,`web3wallet`,`first_name`,`last_name`,`phone_number`,`username`,`last_active_at`,`last_sign_in_at`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want users to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,\nif you pass `order_by=username&order_by=created_at`, we will consider only the first `order_by` parameter, which is `username`. The `created_at` parameter will be ignored in this case."
								}
							]
						},
						"description": "Returns a list of all users.\nThe users are returned sorted by creation date, with the newest users appearing first."
					},
					"response": [
						{
							"id": "781399-060c4d0a-e3f6-4cf0-85ac-a0164869d6b3",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?email_address=string&phone_number=string&external_id=string&username=string&web3_wallet=string&user_id=string&organization_id=string&query=string&email_address_query=string&phone_number_query=string&username_query=string&name_query=string&banned=true&last_active_at_before=1700690400000&last_active_at_after=1700690400000&last_active_at_since=1700690400000&created_at_before=1730160000000&created_at_after=1730160000000&limit=10&offset=0&order_by=-created_at",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"description": "Returns users with the specified email addresses.\nAccepts up to 100 email addresses.\nAny email addresses not found are ignored.",
											"key": "email_address",
											"value": "string"
										},
										{
											"description": "Returns users with the specified phone numbers.\nAccepts up to 100 phone numbers.\nAny phone numbers not found are ignored.",
											"key": "phone_number",
											"value": "string"
										},
										{
											"description": "Returns users with the specified external IDs.\nFor each external ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective external ID should be included or\nexcluded from the result set.\nAccepts up to 100 external IDs.\nAny external IDs not found are ignored.",
											"key": "external_id",
											"value": "string"
										},
										{
											"description": "Returns users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored.",
											"key": "username",
											"value": "string"
										},
										{
											"description": "Returns users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored.",
											"key": "web3_wallet",
											"value": "string"
										},
										{
											"description": "Returns users with the user IDs specified.\nFor each user ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective user ID should be included or\nexcluded from the result set.\nAccepts up to 100 user IDs.\nAny user IDs not found are ignored.",
											"key": "user_id",
											"value": "string"
										},
										{
											"description": "Returns users that have memberships to the\ngiven organizations.\nFor each organization ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective organization should be included or\nexcluded from the result set.\nAccepts up to 100 organization IDs.",
											"key": "organization_id",
											"value": "string"
										},
										{
											"description": "Returns users that match the given query.\nFor possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user IDs, first and last names.\nThe query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Returns users with emails that match the given query, via case-insensitive partial match.\nFor example, `email_address_query=ello` will match a user with the email `HELLO@example.com`.",
											"key": "email_address_query",
											"value": "string"
										},
										{
											"description": "Returns users with phone numbers that match the given query, via case-insensitive partial match.\nFor example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`.",
											"key": "phone_number_query",
											"value": "string"
										},
										{
											"description": "Returns users with usernames that match the given query, via case-insensitive partial match.\nFor example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`.",
											"key": "username_query",
											"value": "string"
										},
										{
											"description": "Returns users with names that match the given query, via case-insensitive partial match.",
											"key": "name_query",
											"value": "string"
										},
										{
											"description": "Returns users which are either banned (`banned=true`) or not banned (`banned=false`).",
											"key": "banned",
											"value": "true"
										},
										{
											"description": "Returns users whose last session activity was before the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23.",
											"key": "last_active_at_before",
											"value": "1700690400000"
										},
										{
											"description": "Returns users whose last session activity was after the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23.",
											"key": "last_active_at_after",
											"value": "1700690400000"
										},
										{
											"description": "Returns users that had session activity since the given date.\nExample: use 1700690400000 to retrieve users that had session activity from 2023-11-23 until the current day.\nDeprecated in favor of `last_active_at_after`.",
											"key": "last_active_at_since",
											"value": "1700690400000"
										},
										{
											"description": "Returns users who have been created before the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created before 2024-10-29.",
											"key": "created_at_before",
											"value": "1730160000000"
										},
										{
											"description": "Returns users who have been created after the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created after 2024-10-29.",
											"key": "created_at_after",
											"value": "1730160000000"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Allows to return users in a particular order.\nAt the moment, you can order the returned users by their `created_at`,`updated_at`,`email_address`,`web3wallet`,`first_name`,`last_name`,`phone_number`,`username`,`last_active_at`,`last_sign_in_at`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want users to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,\nif you pass `order_by=username&order_by=created_at`, we will consider only the first `order_by` parameter, which is `username`. The `created_at` parameter will be ignored in this case.",
											"key": "order_by",
											"value": "-created_at"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n  {\n    \"id\": \"string\",\n    \"object\": \"user\",\n    \"username\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"has_image\": true,\n    \"primary_email_address_id\": \"string\",\n    \"primary_phone_number_id\": \"string\",\n    \"primary_web3_wallet_id\": \"string\",\n    \"password_enabled\": false,\n    \"two_factor_enabled\": true,\n    \"totp_enabled\": true,\n    \"backup_code_enabled\": true,\n    \"email_addresses\": [\n      {\n        \"object\": \"email_address\",\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"expired\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 6466,\n          \"expire_at\": 2353,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_gegd\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_uewpwwdmoz\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": false,\n        \"created_at\": 5019,\n        \"updated_at\": 7269,\n        \"id\": \"string\",\n        \"matches_sso_connection\": true\n      },\n      {\n        \"object\": \"email_address\",\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"failed\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 6997,\n          \"expire_at\": 7870,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_wlehp\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_yoslydqjoz\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": false,\n        \"created_at\": 4337,\n        \"updated_at\": 603,\n        \"id\": \"string\",\n        \"matches_sso_connection\": true\n      }\n    ],\n    \"phone_numbers\": [\n      {\n        \"object\": \"phone_number\",\n        \"phone_number\": \"string\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 6365,\n          \"expire_at\": 7190,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_y\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_vgjmfva\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": true,\n        \"created_at\": 8717,\n        \"updated_at\": 8816,\n        \"id\": \"string\",\n        \"reserved_for_second_factor\": false,\n        \"default_second_factor\": false,\n        \"backup_codes\": [\n          \"string\",\n          \"string\"\n        ]\n      },\n      {\n        \"object\": \"phone_number\",\n        \"phone_number\": \"string\",\n        \"verification\": {\n          \"status\": \"failed\",\n          \"strategy\": \"phone_code\",\n          \"attempts\": 5409,\n          \"expire_at\": 8148,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_wacero\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_qgbqlvaeq\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": false,\n        \"created_at\": 309,\n        \"updated_at\": 6727,\n        \"id\": \"string\",\n        \"reserved_for_second_factor\": true,\n        \"default_second_factor\": true,\n        \"backup_codes\": [\n          \"string\",\n          \"string\"\n        ]\n      }\n    ],\n    \"web3_wallets\": [\n      {\n        \"object\": \"web3_wallet\",\n        \"web3_wallet\": \"string\",\n        \"verification\": {\n          \"status\": \"failed\",\n          \"strategy\": \"web3_okx_wallet_signature\",\n          \"attempts\": 7988,\n          \"expire_at\": 149,\n          \"object\": \"verification_web3\",\n          \"nonce\": \"string\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"created_at\": 5596,\n        \"updated_at\": 3633,\n        \"id\": \"string\"\n      },\n      {\n        \"object\": \"web3_wallet\",\n        \"web3_wallet\": \"string\",\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"web3_metamask_signature\",\n          \"attempts\": 4827,\n          \"expire_at\": 4175,\n          \"object\": \"verification_web3\",\n          \"nonce\": \"string\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"created_at\": 8351,\n        \"updated_at\": 3263,\n        \"id\": \"string\"\n      }\n    ],\n    \"passkeys\": [\n      {\n        \"object\": \"passkey\",\n        \"name\": \"string\",\n        \"last_used_at\": 2857,\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"passkey\",\n          \"attempts\": 6338,\n          \"expire_at\": 1571,\n          \"object\": \"verification_passkey\",\n          \"nonce\": \"nonce\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"id\": \"string\"\n      },\n      {\n        \"object\": \"passkey\",\n        \"name\": \"string\",\n        \"last_used_at\": 5609,\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"passkey\",\n          \"attempts\": 5181,\n          \"expire_at\": 8104,\n          \"object\": \"verification_passkey\",\n          \"nonce\": \"nonce\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"id\": \"string\"\n      }\n    ],\n    \"external_accounts\": [\n      {\n        \"object\": \"google_account\",\n        \"id\": \"string\",\n        \"provider\": \"string\",\n        \"identification_id\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"approved_scopes\": \"string\",\n        \"email_address\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"public_metadata\": {\n          \"key_0\": \"string\"\n        },\n        \"created_at\": 1926,\n        \"updated_at\": 7409,\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"oauth_custom_pnkhht\",\n          \"attempts\": 1823,\n          \"expire_at\": 9710,\n          \"object\": \"verification_oauth\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"verified_at_client\": \"string\"\n        },\n        \"avatar_url\": \"string\",\n        \"image_url\": \"string\",\n        \"username\": \"string\",\n        \"phone_number\": \"string\",\n        \"label\": \"string\"\n      },\n      {\n        \"object\": \"external_account\",\n        \"id\": \"string\",\n        \"provider\": \"string\",\n        \"identification_id\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"approved_scopes\": \"string\",\n        \"email_address\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"public_metadata\": {\n          \"key_0\": 7555,\n          \"key_1\": 2471\n        },\n        \"created_at\": 288,\n        \"updated_at\": 2157,\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"oauth_custom_cxaywcivm\",\n          \"attempts\": 6529,\n          \"expire_at\": 2102,\n          \"object\": \"verification_oauth\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"verified_at_client\": \"string\"\n        },\n        \"avatar_url\": \"string\",\n        \"image_url\": \"string\",\n        \"username\": \"string\",\n        \"phone_number\": \"string\",\n        \"label\": \"string\"\n      }\n    ],\n    \"saml_accounts\": [\n      {\n        \"id\": \"string\",\n        \"object\": \"saml_account\",\n        \"provider\": \"string\",\n        \"active\": true,\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"saml\",\n          \"attempts\": 74,\n          \"object\": \"verification_saml\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"expire_at\": 5235,\n          \"verified_at_client\": \"string\"\n        },\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"last_authenticated_at\": 5750,\n        \"public_metadata\": {\n          \"key_0\": true\n        },\n        \"saml_connection\": {\n          \"domain\": false\n        }\n      },\n      {\n        \"id\": \"string\",\n        \"object\": \"saml_account\",\n        \"provider\": \"string\",\n        \"active\": false,\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"expired\",\n          \"strategy\": \"saml\",\n          \"attempts\": 2777,\n          \"object\": \"verification_saml\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"expire_at\": 3924,\n          \"verified_at_client\": \"string\"\n        },\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"last_authenticated_at\": 8491,\n        \"public_metadata\": {\n          \"key_0\": \"string\",\n          \"key_1\": 2566\n        },\n        \"saml_connection\": {\n          \"domain\": 2240\n        }\n      }\n    ],\n    \"public_metadata\": {\n      \"key_0\": 8206.931762137669\n    },\n    \"external_id\": \"string\",\n    \"last_sign_in_at\": 4634,\n    \"banned\": false,\n    \"locked\": true,\n    \"lockout_expires_in_seconds\": 5026,\n    \"verification_attempts_remaining\": 455,\n    \"created_at\": 2003,\n    \"updated_at\": 693,\n    \"delete_self_enabled\": false,\n    \"create_organization_enabled\": false,\n    \"last_active_at\": 1700690400000,\n    \"mfa_enabled_at\": 7370,\n    \"mfa_disabled_at\": 8296,\n    \"legal_accepted_at\": 1700690400000,\n    \"locale\": \"string\",\n    \"profile_image_url\": \"string\",\n    \"image_url\": \"string\",\n    \"private_metadata\": {\n      \"key_0\": true,\n      \"key_1\": 48.631855833113356,\n      \"key_2\": false\n    },\n    \"unsafe_metadata\": {\n      \"key_0\": false\n    },\n    \"create_organizations_limit\": 6886\n  },\n  {\n    \"id\": \"string\",\n    \"object\": \"user\",\n    \"username\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"has_image\": true,\n    \"primary_email_address_id\": \"string\",\n    \"primary_phone_number_id\": \"string\",\n    \"primary_web3_wallet_id\": \"string\",\n    \"password_enabled\": true,\n    \"two_factor_enabled\": false,\n    \"totp_enabled\": false,\n    \"backup_code_enabled\": false,\n    \"email_addresses\": [\n      {\n        \"object\": \"email_address\",\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"phone_code\",\n          \"attempts\": 6651,\n          \"expire_at\": 8179,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_rygjjicyw\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_hbcxmgpv\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": true,\n        \"created_at\": 8560,\n        \"updated_at\": 3429,\n        \"id\": \"string\",\n        \"matches_sso_connection\": false\n      },\n      {\n        \"object\": \"email_address\",\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"expired\",\n          \"strategy\": \"phone_code\",\n          \"attempts\": 7075,\n          \"expire_at\": 9127,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_e\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_owkyobtlxll\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": true,\n        \"created_at\": 2553,\n        \"updated_at\": 6666,\n        \"id\": \"string\",\n        \"matches_sso_connection\": false\n      }\n    ],\n    \"phone_numbers\": [\n      {\n        \"object\": \"phone_number\",\n        \"phone_number\": \"string\",\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 4564,\n          \"expire_at\": 3030,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_yyghqkcxqp\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_ienirfo\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": false,\n        \"created_at\": 8820,\n        \"updated_at\": 4116,\n        \"id\": \"string\",\n        \"reserved_for_second_factor\": false,\n        \"default_second_factor\": true,\n        \"backup_codes\": [\n          \"string\",\n          \"string\"\n        ]\n      },\n      {\n        \"object\": \"phone_number\",\n        \"phone_number\": \"string\",\n        \"verification\": {\n          \"status\": \"failed\",\n          \"strategy\": \"email_code\",\n          \"attempts\": 3744,\n          \"expire_at\": 2654,\n          \"object\": \"verification_otp\",\n          \"verified_at_client\": \"string\"\n        },\n        \"linked_to\": [\n          {\n            \"type\": \"oauth_nuu\",\n            \"id\": \"string\"\n          },\n          {\n            \"type\": \"oauth_hqxfjvr\",\n            \"id\": \"string\"\n          }\n        ],\n        \"reserved\": true,\n        \"created_at\": 2539,\n        \"updated_at\": 6919,\n        \"id\": \"string\",\n        \"reserved_for_second_factor\": true,\n        \"default_second_factor\": false,\n        \"backup_codes\": [\n          \"string\",\n          \"string\"\n        ]\n      }\n    ],\n    \"web3_wallets\": [\n      {\n        \"object\": \"web3_wallet\",\n        \"web3_wallet\": \"string\",\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"web3_coinbase_wallet_signature\",\n          \"attempts\": 441,\n          \"expire_at\": 9021,\n          \"object\": \"verification_web3\",\n          \"nonce\": \"string\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"created_at\": 3118,\n        \"updated_at\": 8174,\n        \"id\": \"string\"\n      },\n      {\n        \"object\": \"web3_wallet\",\n        \"web3_wallet\": \"string\",\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"web3_coinbase_wallet_signature\",\n          \"attempts\": 5795,\n          \"expire_at\": 2218,\n          \"object\": \"verification_web3\",\n          \"nonce\": \"string\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"created_at\": 2129,\n        \"updated_at\": 3613,\n        \"id\": \"string\"\n      }\n    ],\n    \"passkeys\": [\n      {\n        \"object\": \"passkey\",\n        \"name\": \"string\",\n        \"last_used_at\": 7310,\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"passkey\",\n          \"attempts\": 1800,\n          \"expire_at\": 4965,\n          \"object\": \"verification_passkey\",\n          \"nonce\": \"nonce\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"id\": \"string\"\n      },\n      {\n        \"object\": \"passkey\",\n        \"name\": \"string\",\n        \"last_used_at\": 6556,\n        \"verification\": {\n          \"status\": \"verified\",\n          \"strategy\": \"passkey\",\n          \"attempts\": 5933,\n          \"expire_at\": 2128,\n          \"object\": \"verification_passkey\",\n          \"nonce\": \"nonce\",\n          \"message\": \"string\",\n          \"verified_at_client\": \"string\"\n        },\n        \"id\": \"string\"\n      }\n    ],\n    \"external_accounts\": [\n      {\n        \"object\": \"external_account\",\n        \"id\": \"string\",\n        \"provider\": \"string\",\n        \"identification_id\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"approved_scopes\": \"string\",\n        \"email_address\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"public_metadata\": {\n          \"key_0\": 1806\n        },\n        \"created_at\": 3330,\n        \"updated_at\": 3961,\n        \"verification\": {\n          \"status\": \"transferable\",\n          \"strategy\": \"oauth_token_fsmpzcleg\",\n          \"attempts\": 7061,\n          \"expire_at\": 5935,\n          \"object\": \"verification_oauth\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"verified_at_client\": \"string\"\n        },\n        \"avatar_url\": \"string\",\n        \"image_url\": \"string\",\n        \"username\": \"string\",\n        \"phone_number\": \"string\",\n        \"label\": \"string\"\n      },\n      {\n        \"object\": \"facebook_account\",\n        \"id\": \"string\",\n        \"provider\": \"string\",\n        \"identification_id\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"approved_scopes\": \"string\",\n        \"email_address\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"public_metadata\": {\n          \"key_0\": 7478.800382558048\n        },\n        \"created_at\": 6870,\n        \"updated_at\": 1607,\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"oauth_fmipctfakmo\",\n          \"attempts\": 5710,\n          \"expire_at\": 1034,\n          \"object\": \"verification_oauth\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"verified_at_client\": \"string\"\n        },\n        \"avatar_url\": \"string\",\n        \"image_url\": \"string\",\n        \"username\": \"string\",\n        \"phone_number\": \"string\",\n        \"label\": \"string\"\n      }\n    ],\n    \"saml_accounts\": [\n      {\n        \"id\": \"string\",\n        \"object\": \"saml_account\",\n        \"provider\": \"string\",\n        \"active\": false,\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"unverified\",\n          \"strategy\": \"saml\",\n          \"attempts\": 5283,\n          \"object\": \"verification_saml\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"expire_at\": 421,\n          \"verified_at_client\": \"string\"\n        },\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"last_authenticated_at\": 6745,\n        \"public_metadata\": {\n          \"key_0\": 9589.09245702235,\n          \"key_1\": 8155.474868427625,\n          \"key_2\": 249.21177643408842\n        },\n        \"saml_connection\": {\n          \"domain\": true\n        }\n      },\n      {\n        \"id\": \"string\",\n        \"object\": \"saml_account\",\n        \"provider\": \"string\",\n        \"active\": false,\n        \"email_address\": \"string\",\n        \"verification\": {\n          \"status\": \"expired\",\n          \"strategy\": \"saml\",\n          \"attempts\": 5098,\n          \"object\": \"verification_saml\",\n          \"external_verification_redirect_url\": \"string\",\n          \"error\": {\n            \"message\": \"string\",\n            \"long_message\": \"string\",\n            \"code\": \"string\",\n            \"meta\": {}\n          },\n          \"expire_at\": 6779,\n          \"verified_at_client\": \"string\"\n        },\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"provider_user_id\": \"string\",\n        \"last_authenticated_at\": 5289,\n        \"public_metadata\": {\n          \"key_0\": \"string\",\n          \"key_1\": 5726,\n          \"key_2\": 3094\n        },\n        \"saml_connection\": {\n          \"domain\": 7678.723575334429\n        }\n      }\n    ],\n    \"public_metadata\": {\n      \"key_0\": 3625.75820004018,\n      \"key_1\": 7370,\n      \"key_2\": \"string\"\n    },\n    \"external_id\": \"string\",\n    \"last_sign_in_at\": 963,\n    \"banned\": false,\n    \"locked\": true,\n    \"lockout_expires_in_seconds\": 4583,\n    \"verification_attempts_remaining\": 411,\n    \"created_at\": 6120,\n    \"updated_at\": 4431,\n    \"delete_self_enabled\": true,\n    \"create_organization_enabled\": false,\n    \"last_active_at\": 1700690400000,\n    \"mfa_enabled_at\": 8890,\n    \"mfa_disabled_at\": 3631,\n    \"legal_accepted_at\": 1700690400000,\n    \"locale\": \"string\",\n    \"profile_image_url\": \"string\",\n    \"image_url\": \"string\",\n    \"private_metadata\": {\n      \"key_0\": 4774.919442847308\n    },\n    \"unsafe_metadata\": {\n      \"key_0\": true,\n      \"key_1\": true,\n      \"key_2\": \"string\"\n    },\n    \"create_organizations_limit\": 2911\n  }\n]"
						},
						{
							"id": "781399-b9a61be8-fb10-4e95-abb5-d45f6cfb51df",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?email_address=string&phone_number=string&external_id=string&username=string&web3_wallet=string&user_id=string&organization_id=string&query=string&email_address_query=string&phone_number_query=string&username_query=string&name_query=string&banned=true&last_active_at_before=1700690400000&last_active_at_after=1700690400000&last_active_at_since=1700690400000&created_at_before=1730160000000&created_at_after=1730160000000&limit=10&offset=0&order_by=-created_at",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"description": "Returns users with the specified email addresses.\nAccepts up to 100 email addresses.\nAny email addresses not found are ignored.",
											"key": "email_address",
											"value": "string"
										},
										{
											"description": "Returns users with the specified phone numbers.\nAccepts up to 100 phone numbers.\nAny phone numbers not found are ignored.",
											"key": "phone_number",
											"value": "string"
										},
										{
											"description": "Returns users with the specified external IDs.\nFor each external ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective external ID should be included or\nexcluded from the result set.\nAccepts up to 100 external IDs.\nAny external IDs not found are ignored.",
											"key": "external_id",
											"value": "string"
										},
										{
											"description": "Returns users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored.",
											"key": "username",
											"value": "string"
										},
										{
											"description": "Returns users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored.",
											"key": "web3_wallet",
											"value": "string"
										},
										{
											"description": "Returns users with the user IDs specified.\nFor each user ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective user ID should be included or\nexcluded from the result set.\nAccepts up to 100 user IDs.\nAny user IDs not found are ignored.",
											"key": "user_id",
											"value": "string"
										},
										{
											"description": "Returns users that have memberships to the\ngiven organizations.\nFor each organization ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective organization should be included or\nexcluded from the result set.\nAccepts up to 100 organization IDs.",
											"key": "organization_id",
											"value": "string"
										},
										{
											"description": "Returns users that match the given query.\nFor possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user IDs, first and last names.\nThe query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Returns users with emails that match the given query, via case-insensitive partial match.\nFor example, `email_address_query=ello` will match a user with the email `HELLO@example.com`.",
											"key": "email_address_query",
											"value": "string"
										},
										{
											"description": "Returns users with phone numbers that match the given query, via case-insensitive partial match.\nFor example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`.",
											"key": "phone_number_query",
											"value": "string"
										},
										{
											"description": "Returns users with usernames that match the given query, via case-insensitive partial match.\nFor example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`.",
											"key": "username_query",
											"value": "string"
										},
										{
											"description": "Returns users with names that match the given query, via case-insensitive partial match.",
											"key": "name_query",
											"value": "string"
										},
										{
											"description": "Returns users which are either banned (`banned=true`) or not banned (`banned=false`).",
											"key": "banned",
											"value": "true"
										},
										{
											"description": "Returns users whose last session activity was before the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23.",
											"key": "last_active_at_before",
											"value": "1700690400000"
										},
										{
											"description": "Returns users whose last session activity was after the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23.",
											"key": "last_active_at_after",
											"value": "1700690400000"
										},
										{
											"description": "Returns users that had session activity since the given date.\nExample: use 1700690400000 to retrieve users that had session activity from 2023-11-23 until the current day.\nDeprecated in favor of `last_active_at_after`.",
											"key": "last_active_at_since",
											"value": "1700690400000"
										},
										{
											"description": "Returns users who have been created before the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created before 2024-10-29.",
											"key": "created_at_before",
											"value": "1730160000000"
										},
										{
											"description": "Returns users who have been created after the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created after 2024-10-29.",
											"key": "created_at_after",
											"value": "1730160000000"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Allows to return users in a particular order.\nAt the moment, you can order the returned users by their `created_at`,`updated_at`,`email_address`,`web3wallet`,`first_name`,`last_name`,`phone_number`,`username`,`last_active_at`,`last_sign_in_at`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want users to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,\nif you pass `order_by=username&order_by=created_at`, we will consider only the first `order_by` parameter, which is `username`. The `created_at` parameter will be ignored in this case.",
											"key": "order_by",
											"value": "-created_at"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-aa47cd52-4f81-487c-a0f8-562d0c8ab589",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?email_address=string&phone_number=string&external_id=string&username=string&web3_wallet=string&user_id=string&organization_id=string&query=string&email_address_query=string&phone_number_query=string&username_query=string&name_query=string&banned=true&last_active_at_before=1700690400000&last_active_at_after=1700690400000&last_active_at_since=1700690400000&created_at_before=1730160000000&created_at_after=1730160000000&limit=10&offset=0&order_by=-created_at",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"description": "Returns users with the specified email addresses.\nAccepts up to 100 email addresses.\nAny email addresses not found are ignored.",
											"key": "email_address",
											"value": "string"
										},
										{
											"description": "Returns users with the specified phone numbers.\nAccepts up to 100 phone numbers.\nAny phone numbers not found are ignored.",
											"key": "phone_number",
											"value": "string"
										},
										{
											"description": "Returns users with the specified external IDs.\nFor each external ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective external ID should be included or\nexcluded from the result set.\nAccepts up to 100 external IDs.\nAny external IDs not found are ignored.",
											"key": "external_id",
											"value": "string"
										},
										{
											"description": "Returns users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored.",
											"key": "username",
											"value": "string"
										},
										{
											"description": "Returns users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored.",
											"key": "web3_wallet",
											"value": "string"
										},
										{
											"description": "Returns users with the user IDs specified.\nFor each user ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective user ID should be included or\nexcluded from the result set.\nAccepts up to 100 user IDs.\nAny user IDs not found are ignored.",
											"key": "user_id",
											"value": "string"
										},
										{
											"description": "Returns users that have memberships to the\ngiven organizations.\nFor each organization ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective organization should be included or\nexcluded from the result set.\nAccepts up to 100 organization IDs.",
											"key": "organization_id",
											"value": "string"
										},
										{
											"description": "Returns users that match the given query.\nFor possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user IDs, first and last names.\nThe query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Returns users with emails that match the given query, via case-insensitive partial match.\nFor example, `email_address_query=ello` will match a user with the email `HELLO@example.com`.",
											"key": "email_address_query",
											"value": "string"
										},
										{
											"description": "Returns users with phone numbers that match the given query, via case-insensitive partial match.\nFor example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`.",
											"key": "phone_number_query",
											"value": "string"
										},
										{
											"description": "Returns users with usernames that match the given query, via case-insensitive partial match.\nFor example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`.",
											"key": "username_query",
											"value": "string"
										},
										{
											"description": "Returns users with names that match the given query, via case-insensitive partial match.",
											"key": "name_query",
											"value": "string"
										},
										{
											"description": "Returns users which are either banned (`banned=true`) or not banned (`banned=false`).",
											"key": "banned",
											"value": "true"
										},
										{
											"description": "Returns users whose last session activity was before the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23.",
											"key": "last_active_at_before",
											"value": "1700690400000"
										},
										{
											"description": "Returns users whose last session activity was after the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23.",
											"key": "last_active_at_after",
											"value": "1700690400000"
										},
										{
											"description": "Returns users that had session activity since the given date.\nExample: use 1700690400000 to retrieve users that had session activity from 2023-11-23 until the current day.\nDeprecated in favor of `last_active_at_after`.",
											"key": "last_active_at_since",
											"value": "1700690400000"
										},
										{
											"description": "Returns users who have been created before the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created before 2024-10-29.",
											"key": "created_at_before",
											"value": "1730160000000"
										},
										{
											"description": "Returns users who have been created after the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created after 2024-10-29.",
											"key": "created_at_after",
											"value": "1730160000000"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Allows to return users in a particular order.\nAt the moment, you can order the returned users by their `created_at`,`updated_at`,`email_address`,`web3wallet`,`first_name`,`last_name`,`phone_number`,`username`,`last_active_at`,`last_sign_in_at`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want users to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,\nif you pass `order_by=username&order_by=created_at`, we will consider only the first `order_by` parameter, which is `username`. The `created_at` parameter will be ignored in this case.",
											"key": "order_by",
											"value": "-created_at"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-c53cbeb8-c408-44e0-9758-578df4187cbb",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?email_address=string&phone_number=string&external_id=string&username=string&web3_wallet=string&user_id=string&organization_id=string&query=string&email_address_query=string&phone_number_query=string&username_query=string&name_query=string&banned=true&last_active_at_before=1700690400000&last_active_at_after=1700690400000&last_active_at_since=1700690400000&created_at_before=1730160000000&created_at_after=1730160000000&limit=10&offset=0&order_by=-created_at",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"description": "Returns users with the specified email addresses.\nAccepts up to 100 email addresses.\nAny email addresses not found are ignored.",
											"key": "email_address",
											"value": "string"
										},
										{
											"description": "Returns users with the specified phone numbers.\nAccepts up to 100 phone numbers.\nAny phone numbers not found are ignored.",
											"key": "phone_number",
											"value": "string"
										},
										{
											"description": "Returns users with the specified external IDs.\nFor each external ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective external ID should be included or\nexcluded from the result set.\nAccepts up to 100 external IDs.\nAny external IDs not found are ignored.",
											"key": "external_id",
											"value": "string"
										},
										{
											"description": "Returns users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored.",
											"key": "username",
											"value": "string"
										},
										{
											"description": "Returns users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored.",
											"key": "web3_wallet",
											"value": "string"
										},
										{
											"description": "Returns users with the user IDs specified.\nFor each user ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective user ID should be included or\nexcluded from the result set.\nAccepts up to 100 user IDs.\nAny user IDs not found are ignored.",
											"key": "user_id",
											"value": "string"
										},
										{
											"description": "Returns users that have memberships to the\ngiven organizations.\nFor each organization ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective organization should be included or\nexcluded from the result set.\nAccepts up to 100 organization IDs.",
											"key": "organization_id",
											"value": "string"
										},
										{
											"description": "Returns users that match the given query.\nFor possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user IDs, first and last names.\nThe query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Returns users with emails that match the given query, via case-insensitive partial match.\nFor example, `email_address_query=ello` will match a user with the email `HELLO@example.com`.",
											"key": "email_address_query",
											"value": "string"
										},
										{
											"description": "Returns users with phone numbers that match the given query, via case-insensitive partial match.\nFor example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`.",
											"key": "phone_number_query",
											"value": "string"
										},
										{
											"description": "Returns users with usernames that match the given query, via case-insensitive partial match.\nFor example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`.",
											"key": "username_query",
											"value": "string"
										},
										{
											"description": "Returns users with names that match the given query, via case-insensitive partial match.",
											"key": "name_query",
											"value": "string"
										},
										{
											"description": "Returns users which are either banned (`banned=true`) or not banned (`banned=false`).",
											"key": "banned",
											"value": "true"
										},
										{
											"description": "Returns users whose last session activity was before the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23.",
											"key": "last_active_at_before",
											"value": "1700690400000"
										},
										{
											"description": "Returns users whose last session activity was after the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23.",
											"key": "last_active_at_after",
											"value": "1700690400000"
										},
										{
											"description": "Returns users that had session activity since the given date.\nExample: use 1700690400000 to retrieve users that had session activity from 2023-11-23 until the current day.\nDeprecated in favor of `last_active_at_after`.",
											"key": "last_active_at_since",
											"value": "1700690400000"
										},
										{
											"description": "Returns users who have been created before the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created before 2024-10-29.",
											"key": "created_at_before",
											"value": "1730160000000"
										},
										{
											"description": "Returns users who have been created after the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created after 2024-10-29.",
											"key": "created_at_after",
											"value": "1730160000000"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Allows to return users in a particular order.\nAt the moment, you can order the returned users by their `created_at`,`updated_at`,`email_address`,`web3wallet`,`first_name`,`last_name`,`phone_number`,`username`,`last_active_at`,`last_sign_in_at`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want users to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,\nif you pass `order_by=username&order_by=created_at`, we will consider only the first `order_by` parameter, which is `username`. The `created_at` parameter will be ignored in this case.",
											"key": "order_by",
											"value": "-created_at"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				},
				{
					"name": "Create a new user",
					"id": "781399-3ee3e70b-e2fc-4043-af76-b52754fc20d5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"external_id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"locale\": \"string\",\n  \"email_address\": [\n    \"string\",\n    \"string\"\n  ],\n  \"phone_number\": [\n    \"string\",\n    \"string\"\n  ],\n  \"web3_wallet\": [\n    \"string\",\n    \"string\"\n  ],\n  \"username\": \"string\",\n  \"password\": \"string\",\n  \"password_digest\": \"string\",\n  \"password_hasher\": \"string\",\n  \"skip_password_checks\": true,\n  \"skip_password_requirement\": false,\n  \"totp_secret\": \"string\",\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": 9220\n  },\n  \"private_metadata\": {\n    \"key_0\": \"string\"\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 4968.955381158764\n  },\n  \"delete_self_enabled\": false,\n  \"legal_accepted_at\": \"string\",\n  \"skip_legal_checks\": true,\n  \"create_organization_enabled\": true,\n  \"create_organizations_limit\": 9555,\n  \"created_at\": \"string\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Creates a new user. Your user management settings determine how you should setup your user model.\n\nAny email address and phone number created using this method will be marked as verified.\n\nNote: If you are performing a migration, check out our guide on [zero downtime migrations](https://clerk.com/docs/deployments/migrate-overview).\n\nThe following rate limit rules apply to this endpoint: 1000 requests per 10 seconds for production instances and 100 requests per 10 seconds for development instances"
					},
					"response": [
						{
							"id": "781399-3ec890b3-899d-40a8-9bd4-a7ef0fcd25a0",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"external_id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"locale\": \"string\",\n  \"email_address\": [\n    \"string\",\n    \"string\"\n  ],\n  \"phone_number\": [\n    \"string\",\n    \"string\"\n  ],\n  \"web3_wallet\": [\n    \"string\",\n    \"string\"\n  ],\n  \"username\": \"string\",\n  \"password\": \"string\",\n  \"password_digest\": \"string\",\n  \"password_hasher\": \"string\",\n  \"skip_password_checks\": true,\n  \"skip_password_requirement\": false,\n  \"totp_secret\": \"string\",\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": 9220\n  },\n  \"private_metadata\": {\n    \"key_0\": \"string\"\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 4968.955381158764\n  },\n  \"delete_self_enabled\": false,\n  \"legal_accepted_at\": \"string\",\n  \"skip_legal_checks\": true,\n  \"create_organization_enabled\": true,\n  \"create_organizations_limit\": 9555,\n  \"created_at\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"id\": \"string\",\n  \"object\": \"user\",\n  \"username\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"has_image\": true,\n  \"primary_email_address_id\": \"string\",\n  \"primary_phone_number_id\": \"string\",\n  \"primary_web3_wallet_id\": \"string\",\n  \"password_enabled\": false,\n  \"two_factor_enabled\": true,\n  \"totp_enabled\": true,\n  \"backup_code_enabled\": false,\n  \"email_addresses\": [\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 3740,\n        \"expire_at\": 795,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_vd\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_rpod\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 4299,\n      \"updated_at\": 6121,\n      \"id\": \"string\",\n      \"matches_sso_connection\": false\n    },\n    {\n      \"object\": \"email_address\",\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 654,\n        \"expire_at\": 2299,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_ukptplx\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_ctiorwdcpud\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 8768,\n      \"updated_at\": 6848,\n      \"id\": \"string\",\n      \"matches_sso_connection\": true\n    }\n  ],\n  \"phone_numbers\": [\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"reset_password_email_code\",\n        \"attempts\": 5030,\n        \"expire_at\": 5295,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_xlhs\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_hmfcojuqn\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 6691,\n      \"updated_at\": 2867,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": false,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"object\": \"phone_number\",\n      \"phone_number\": \"string\",\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"email_code\",\n        \"attempts\": 1974,\n        \"expire_at\": 1351,\n        \"object\": \"verification_otp\",\n        \"verified_at_client\": \"string\"\n      },\n      \"linked_to\": [\n        {\n          \"type\": \"oauth_mkkkho\",\n          \"id\": \"string\"\n        },\n        {\n          \"type\": \"oauth_jrkoqwafoj\",\n          \"id\": \"string\"\n        }\n      ],\n      \"reserved\": true,\n      \"created_at\": 3301,\n      \"updated_at\": 2212,\n      \"id\": \"string\",\n      \"reserved_for_second_factor\": false,\n      \"default_second_factor\": true,\n      \"backup_codes\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ],\n  \"web3_wallets\": [\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_okx_wallet_signature\",\n        \"attempts\": 2661,\n        \"expire_at\": 2991,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2765,\n      \"updated_at\": 2131,\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"web3_wallet\",\n      \"web3_wallet\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"web3_base_signature\",\n        \"attempts\": 342,\n        \"expire_at\": 7017,\n        \"object\": \"verification_web3\",\n        \"nonce\": \"string\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"created_at\": 2851,\n      \"updated_at\": 7003,\n      \"id\": \"string\"\n    }\n  ],\n  \"passkeys\": [\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 4336,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 5670,\n        \"expire_at\": 6420,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    },\n    {\n      \"object\": \"passkey\",\n      \"name\": \"string\",\n      \"last_used_at\": 690,\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"passkey\",\n        \"attempts\": 7963,\n        \"expire_at\": 6633,\n        \"object\": \"verification_passkey\",\n        \"nonce\": \"nonce\",\n        \"message\": \"string\",\n        \"verified_at_client\": \"string\"\n      },\n      \"id\": \"string\"\n    }\n  ],\n  \"external_accounts\": [\n    {\n      \"object\": \"external_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": true,\n        \"key_1\": \"string\"\n      },\n      \"created_at\": 2055,\n      \"updated_at\": 1013,\n      \"verification\": {\n        \"status\": \"transferable\",\n        \"strategy\": \"oauth_xqqgqljqof\",\n        \"attempts\": 1555,\n        \"expire_at\": 5721,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    },\n    {\n      \"object\": \"google_account\",\n      \"id\": \"string\",\n      \"provider\": \"string\",\n      \"identification_id\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"approved_scopes\": \"string\",\n      \"email_address\": \"string\",\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 9021.765466129193,\n        \"key_1\": 1363,\n        \"key_2\": \"string\"\n      },\n      \"created_at\": 4274,\n      \"updated_at\": 9548,\n      \"verification\": {\n        \"status\": \"expired\",\n        \"strategy\": \"oauth_custom_vk\",\n        \"attempts\": 6794,\n        \"expire_at\": 3143,\n        \"object\": \"verification_oauth\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"verified_at_client\": \"string\"\n      },\n      \"avatar_url\": \"string\",\n      \"image_url\": \"string\",\n      \"username\": \"string\",\n      \"phone_number\": \"string\",\n      \"label\": \"string\"\n    }\n  ],\n  \"saml_accounts\": [\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"saml\",\n        \"attempts\": 7587,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 2544,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 4224,\n      \"public_metadata\": {\n        \"key_0\": 4760\n      },\n      \"saml_connection\": {\n        \"domain\": false\n      }\n    },\n    {\n      \"id\": \"string\",\n      \"object\": \"saml_account\",\n      \"provider\": \"string\",\n      \"active\": false,\n      \"email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"failed\",\n        \"strategy\": \"saml\",\n        \"attempts\": 6824,\n        \"object\": \"verification_saml\",\n        \"external_verification_redirect_url\": \"string\",\n        \"error\": {\n          \"message\": \"string\",\n          \"long_message\": \"string\",\n          \"code\": \"string\",\n          \"meta\": {}\n        },\n        \"expire_at\": 3585,\n        \"verified_at_client\": \"string\"\n      },\n      \"first_name\": \"string\",\n      \"last_name\": \"string\",\n      \"provider_user_id\": \"string\",\n      \"last_authenticated_at\": 1557,\n      \"public_metadata\": {\n        \"key_0\": \"string\",\n        \"key_1\": true\n      },\n      \"saml_connection\": {\n        \"domain\": 9940.292404161679\n      }\n    }\n  ],\n  \"public_metadata\": {\n    \"key_0\": true\n  },\n  \"external_id\": \"string\",\n  \"last_sign_in_at\": 7275,\n  \"banned\": false,\n  \"locked\": true,\n  \"lockout_expires_in_seconds\": 4668,\n  \"verification_attempts_remaining\": 8265,\n  \"created_at\": 4547,\n  \"updated_at\": 7057,\n  \"delete_self_enabled\": true,\n  \"create_organization_enabled\": false,\n  \"last_active_at\": 1700690400000,\n  \"mfa_enabled_at\": 4422,\n  \"mfa_disabled_at\": 6932,\n  \"legal_accepted_at\": 1700690400000,\n  \"locale\": \"string\",\n  \"profile_image_url\": \"string\",\n  \"image_url\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 9144\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 6532,\n    \"key_1\": 5794.302348985707\n  },\n  \"create_organizations_limit\": 91\n}"
						},
						{
							"id": "781399-7b4f69bf-dd74-4e25-8f42-ac383efaf9fc",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"external_id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"locale\": \"string\",\n  \"email_address\": [\n    \"string\",\n    \"string\"\n  ],\n  \"phone_number\": [\n    \"string\",\n    \"string\"\n  ],\n  \"web3_wallet\": [\n    \"string\",\n    \"string\"\n  ],\n  \"username\": \"string\",\n  \"password\": \"string\",\n  \"password_digest\": \"string\",\n  \"password_hasher\": \"string\",\n  \"skip_password_checks\": true,\n  \"skip_password_requirement\": false,\n  \"totp_secret\": \"string\",\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": 9220\n  },\n  \"private_metadata\": {\n    \"key_0\": \"string\"\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 4968.955381158764\n  },\n  \"delete_self_enabled\": false,\n  \"legal_accepted_at\": \"string\",\n  \"skip_legal_checks\": true,\n  \"create_organization_enabled\": true,\n  \"create_organizations_limit\": 9555,\n  \"created_at\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-acc747cb-2b44-4799-8efa-ef0c53201768",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"external_id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"locale\": \"string\",\n  \"email_address\": [\n    \"string\",\n    \"string\"\n  ],\n  \"phone_number\": [\n    \"string\",\n    \"string\"\n  ],\n  \"web3_wallet\": [\n    \"string\",\n    \"string\"\n  ],\n  \"username\": \"string\",\n  \"password\": \"string\",\n  \"password_digest\": \"string\",\n  \"password_hasher\": \"string\",\n  \"skip_password_checks\": true,\n  \"skip_password_requirement\": false,\n  \"totp_secret\": \"string\",\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": 9220\n  },\n  \"private_metadata\": {\n    \"key_0\": \"string\"\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 4968.955381158764\n  },\n  \"delete_self_enabled\": false,\n  \"legal_accepted_at\": \"string\",\n  \"skip_legal_checks\": true,\n  \"create_organization_enabled\": true,\n  \"create_organizations_limit\": 9555,\n  \"created_at\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-677b7145-28ca-46f6-a746-888a5c7b89bd",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"external_id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"locale\": \"string\",\n  \"email_address\": [\n    \"string\",\n    \"string\"\n  ],\n  \"phone_number\": [\n    \"string\",\n    \"string\"\n  ],\n  \"web3_wallet\": [\n    \"string\",\n    \"string\"\n  ],\n  \"username\": \"string\",\n  \"password\": \"string\",\n  \"password_digest\": \"string\",\n  \"password_hasher\": \"string\",\n  \"skip_password_checks\": true,\n  \"skip_password_requirement\": false,\n  \"totp_secret\": \"string\",\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": 9220\n  },\n  \"private_metadata\": {\n    \"key_0\": \"string\"\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 4968.955381158764\n  },\n  \"delete_self_enabled\": false,\n  \"legal_accepted_at\": \"string\",\n  \"skip_legal_checks\": true,\n  \"create_organization_enabled\": true,\n  \"create_organizations_limit\": 9555,\n  \"created_at\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-dc7e93ea-1e2d-40ee-8ece-8acd9d093093",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"external_id\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"locale\": \"string\",\n  \"email_address\": [\n    \"string\",\n    \"string\"\n  ],\n  \"phone_number\": [\n    \"string\",\n    \"string\"\n  ],\n  \"web3_wallet\": [\n    \"string\",\n    \"string\"\n  ],\n  \"username\": \"string\",\n  \"password\": \"string\",\n  \"password_digest\": \"string\",\n  \"password_hasher\": \"string\",\n  \"skip_password_checks\": true,\n  \"skip_password_requirement\": false,\n  \"totp_secret\": \"string\",\n  \"backup_codes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": 9220\n  },\n  \"private_metadata\": {\n    \"key_0\": \"string\"\n  },\n  \"unsafe_metadata\": {\n    \"key_0\": 4968.955381158764\n  },\n  \"delete_self_enabled\": false,\n  \"legal_accepted_at\": \"string\",\n  \"skip_legal_checks\": true,\n  \"create_organization_enabled\": true,\n  \"create_organizations_limit\": 9555,\n  \"created_at\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-2ed246db-bd3e-4c56-9a1c-84b0b4642790"
		},
		{
			"name": "invitations",
			"item": [
				{
					"name": "bulk",
					"item": [
						{
							"name": "Create multiple invitations",
							"id": "781399-1a17d8e3-0169-423d-99e3-7c91b81072f5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"email_address\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": 2958,\n      \"key_1\": 6813,\n      \"key_2\": false,\n      \"key_3\": 7531\n    },\n    \"redirect_url\": \"string\",\n    \"notify\": true,\n    \"ignore_existing\": false,\n    \"expires_in_days\": 52,\n    \"template_slug\": \"invitation\"\n  },\n  {\n    \"email_address\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": 9828,\n      \"key_2\": 1889.741441430014,\n      \"key_3\": \"string\"\n    },\n    \"redirect_url\": \"string\",\n    \"notify\": true,\n    \"ignore_existing\": false,\n    \"expires_in_days\": 258,\n    \"template_slug\": \"invitation\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/invitations/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invitations",
										"bulk"
									]
								},
								"description": "Use this API operation to create multiple invitations for the provided email addresses. You can choose to send the\ninvitations as emails by setting the `notify` parameter to `true`. There cannot be an existing invitation for any\nof the email addresses you provide unless you set `ignore_existing` to `true` for specific email addresses. Please\nnote that there must be no existing user for any of the email addresses you provide, and this rule cannot be bypassed."
							},
							"response": [
								{
									"id": "781399-274bb951-48de-41ed-933a-ff9f1d878ca6",
									"name": "List of invitations",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"email_address\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": 2958,\n      \"key_1\": 6813,\n      \"key_2\": false,\n      \"key_3\": 7531\n    },\n    \"redirect_url\": \"string\",\n    \"notify\": true,\n    \"ignore_existing\": false,\n    \"expires_in_days\": 52,\n    \"template_slug\": \"invitation\"\n  },\n  {\n    \"email_address\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": 9828,\n      \"key_2\": 1889.741441430014,\n      \"key_3\": \"string\"\n    },\n    \"redirect_url\": \"string\",\n    \"notify\": true,\n    \"ignore_existing\": false,\n    \"expires_in_days\": 258,\n    \"template_slug\": \"invitation\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/invitations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invitations",
												"bulk"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"object\": \"invitation\",\n    \"id\": \"string\",\n    \"email_address\": \"5ZAyRR@IMESZLRVSkqpvB.ip\",\n    \"public_metadata\": {\n      \"key_0\": false,\n      \"key_1\": 3377\n    },\n    \"status\": \"pending\",\n    \"created_at\": 8580,\n    \"updated_at\": 4747,\n    \"revoked\": false,\n    \"url\": \"string\",\n    \"expires_at\": 3043\n  },\n  {\n    \"object\": \"invitation\",\n    \"id\": \"string\",\n    \"email_address\": \"2lMVe3D69z6b@uwQOnGBnHTRrtw.pu\",\n    \"public_metadata\": {\n      \"key_0\": false,\n      \"key_1\": 1094\n    },\n    \"status\": \"pending\",\n    \"created_at\": 4346,\n    \"updated_at\": 4725,\n    \"revoked\": false,\n    \"url\": \"string\",\n    \"expires_at\": 2467\n  }\n]"
								},
								{
									"id": "781399-16a01c06-4c48-4e0e-93a5-38831deeb270",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"email_address\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": 2958,\n      \"key_1\": 6813,\n      \"key_2\": false,\n      \"key_3\": 7531\n    },\n    \"redirect_url\": \"string\",\n    \"notify\": true,\n    \"ignore_existing\": false,\n    \"expires_in_days\": 52,\n    \"template_slug\": \"invitation\"\n  },\n  {\n    \"email_address\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": 9828,\n      \"key_2\": 1889.741441430014,\n      \"key_3\": \"string\"\n    },\n    \"redirect_url\": \"string\",\n    \"notify\": true,\n    \"ignore_existing\": false,\n    \"expires_in_days\": 258,\n    \"template_slug\": \"invitation\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/invitations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invitations",
												"bulk"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-1276c77d-c731-41ee-b2c6-b83ae0b620cd",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"email_address\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": 2958,\n      \"key_1\": 6813,\n      \"key_2\": false,\n      \"key_3\": 7531\n    },\n    \"redirect_url\": \"string\",\n    \"notify\": true,\n    \"ignore_existing\": false,\n    \"expires_in_days\": 52,\n    \"template_slug\": \"invitation\"\n  },\n  {\n    \"email_address\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": 9828,\n      \"key_2\": 1889.741441430014,\n      \"key_3\": \"string\"\n    },\n    \"redirect_url\": \"string\",\n    \"notify\": true,\n    \"ignore_existing\": false,\n    \"expires_in_days\": 258,\n    \"template_slug\": \"invitation\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/invitations/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invitations",
												"bulk"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-0ffe549b-5c3c-48ff-9b76-51c2b5c34bce"
				},
				{
					"name": "{invitation_id}",
					"item": [
						{
							"name": "revoke",
							"item": [
								{
									"name": "Revokes an invitation",
									"id": "781399-5250b1ed-2610-4da7-9cd7-64c24ce597d4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/invitations/:invitation_id/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"invitations",
												":invitation_id",
												"revoke"
											],
											"variable": [
												{
													"id": "e04d0eb1-edfe-439d-a641-8780639ea066",
													"key": "invitation_id",
													"value": "string",
													"description": "The ID of the invitation to be revoked"
												}
											]
										},
										"description": "Revokes the given invitation.\nRevoking an invitation will prevent the user from using the invitation link that was sent to them.\nHowever, it doesn't prevent the user from signing up if they follow the sign up flow.\nOnly active (i.e. non-revoked) invitations can be revoked."
									},
									"response": [
										{
											"id": "781399-53df33e2-6246-4b1e-93c6-a8fa29270014",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/invitations/:invitation_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"invitations",
														":invitation_id",
														"revoke"
													],
													"variable": [
														{
															"key": "invitation_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"invitation\",\n  \"id\": \"string\",\n  \"email_address\": \"pBSIJiTOpjVWXRU@VgaWbfijloeiOnrTzRjgZwlWmMNbWjom.tu\",\n  \"public_metadata\": {\n    \"key_0\": 594.6804566931074\n  },\n  \"status\": \"pending\",\n  \"created_at\": 6854,\n  \"updated_at\": 2502,\n  \"revoked\": true,\n  \"url\": \"string\",\n  \"expires_at\": 4366\n}"
										},
										{
											"id": "781399-53a8f6e3-2ffb-4aff-acfe-0c1ccebd31f3",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/invitations/:invitation_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"invitations",
														":invitation_id",
														"revoke"
													],
													"variable": [
														{
															"key": "invitation_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-920038e5-1d6d-44a5-b0cb-83a5597ce8f1",
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/invitations/:invitation_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"invitations",
														":invitation_id",
														"revoke"
													],
													"variable": [
														{
															"key": "invitation_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-a95424da-a93b-4d86-901c-89a3944e138a"
						}
					],
					"id": "781399-d8b7d346-fa47-4e1f-9b8a-7851a744ad8a"
				},
				{
					"name": "Create an invitation",
					"id": "781399-d1f5ade9-e9ae-4c76-b70d-c1366e8fd7d1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email_address\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": 3158.9149790048564,\n    \"key_1\": false\n  },\n  \"redirect_url\": \"string\",\n  \"notify\": true,\n  \"ignore_existing\": false,\n  \"expires_in_days\": 68,\n  \"template_slug\": \"invitation\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/invitations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"invitations"
							]
						},
						"description": "Creates a new invitation for the given email address and sends the invitation email.\nKeep in mind that you cannot create an invitation if there is already one for the given email address.\nAlso, trying to create an invitation for an email address that already exists in your application will result to an error."
					},
					"response": [
						{
							"id": "781399-0efc1496-c6be-4403-90e1-8839d9ecf559",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email_address\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": 3158.9149790048564,\n    \"key_1\": false\n  },\n  \"redirect_url\": \"string\",\n  \"notify\": true,\n  \"ignore_existing\": false,\n  \"expires_in_days\": 68,\n  \"template_slug\": \"invitation\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invitations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"invitation\",\n  \"id\": \"string\",\n  \"email_address\": \"EpueFhkaP56tAN@SEXvgzSoUTFxkOGtYCfhkiYj.ou\",\n  \"public_metadata\": {\n    \"key_0\": 7001.087672224633,\n    \"key_1\": \"string\",\n    \"key_2\": \"string\"\n  },\n  \"status\": \"pending\",\n  \"created_at\": 7278,\n  \"updated_at\": 8598,\n  \"revoked\": false,\n  \"url\": \"string\",\n  \"expires_at\": 5252\n}"
						},
						{
							"id": "781399-c4e102a3-3b32-4334-b44b-da48293891d4",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email_address\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": 3158.9149790048564,\n    \"key_1\": false\n  },\n  \"redirect_url\": \"string\",\n  \"notify\": true,\n  \"ignore_existing\": false,\n  \"expires_in_days\": 68,\n  \"template_slug\": \"invitation\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invitations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-b4dd64ff-2bc1-42fa-8682-fa6b9a40753b",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email_address\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": 3158.9149790048564,\n    \"key_1\": false\n  },\n  \"redirect_url\": \"string\",\n  \"notify\": true,\n  \"ignore_existing\": false,\n  \"expires_in_days\": 68,\n  \"template_slug\": \"invitation\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invitations"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				},
				{
					"name": "List all invitations",
					"id": "781399-899bbde1-9de8-48cf-a6e0-e11fa34e3b74",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/invitations?status=expired&query=string&order_by=-created_at&paginated=true&limit=10&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"invitations"
							],
							"query": [
								{
									"key": "status",
									"value": "expired",
									"description": "Filter invitations based on their status"
								},
								{
									"key": "query",
									"value": "string",
									"description": "Filter invitations based on their `email_address` or `id`"
								},
								{
									"key": "order_by",
									"value": "-created_at",
									"description": "Allows to return invitations in a particular order.\nAt the moment, you can order the returned invitations either by their `created_at`, `email_address` or `expires_at`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`."
								},
								{
									"key": "paginated",
									"value": "true",
									"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								}
							]
						},
						"description": "Returns all non-revoked invitations for your application, sorted by creation date"
					},
					"response": [
						{
							"id": "781399-5e0048db-a5e9-4146-9162-23aaad74c6b9",
							"name": "List of invitations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/invitations?status=expired&query=string&order_by=-created_at&paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"invitations"
									],
									"query": [
										{
											"description": "Filter invitations based on their status",
											"key": "status",
											"value": "expired"
										},
										{
											"description": "Filter invitations based on their `email_address` or `id`",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Allows to return invitations in a particular order.\nAt the moment, you can order the returned invitations either by their `created_at`, `email_address` or `expires_at`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n  {\n    \"object\": \"invitation\",\n    \"id\": \"string\",\n    \"email_address\": \"5ZAyRR@IMESZLRVSkqpvB.ip\",\n    \"public_metadata\": {\n      \"key_0\": false,\n      \"key_1\": 3377\n    },\n    \"status\": \"pending\",\n    \"created_at\": 8580,\n    \"updated_at\": 4747,\n    \"revoked\": false,\n    \"url\": \"string\",\n    \"expires_at\": 3043\n  },\n  {\n    \"object\": \"invitation\",\n    \"id\": \"string\",\n    \"email_address\": \"2lMVe3D69z6b@uwQOnGBnHTRrtw.pu\",\n    \"public_metadata\": {\n      \"key_0\": false,\n      \"key_1\": 1094\n    },\n    \"status\": \"pending\",\n    \"created_at\": 4346,\n    \"updated_at\": 4725,\n    \"revoked\": false,\n    \"url\": \"string\",\n    \"expires_at\": 2467\n  }\n]"
						}
					]
				}
			],
			"id": "781399-7ed8c032-8f6a-48b0-a0da-5629ac7f47b1"
		},
		{
			"name": "organization_invitations",
			"item": [
				{
					"name": "Get a list of organization invitations for the current instance",
					"id": "781399-31d079be-c425-45b6-9f50-de442070ded7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organization_invitations?order_by=-created_at&status=revoked&query=string&limit=10&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organization_invitations"
							],
							"query": [
								{
									"key": "order_by",
									"value": "-created_at",
									"description": "Allows to return organization invitations in a particular order.\nAt the moment, you can order the returned organization invitations either by their `created_at` or `email_address`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organization invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`."
								},
								{
									"key": "status",
									"value": "revoked",
									"description": "Filter organization invitations based on their status"
								},
								{
									"key": "query",
									"value": "string",
									"description": "Filter organization invitations based on their `email_address`"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								}
							]
						},
						"description": "This request returns the list of organization invitations for the instance.\nResults can be paginated using the optional `limit` and `offset` query parameters.\nYou can filter them by providing the 'status' query parameter, that accepts multiple values.\nYou can change the order by providing the 'order' query parameter, that accepts multiple values.\nYou can filter by the invited user email address providing the `query` query parameter.\nThe organization invitations are ordered by descending creation date by default."
					},
					"response": [
						{
							"id": "781399-350e6300-9082-46b3-873d-e7bfb5f76bb4",
							"name": "A list of organization invitations with public organization data",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_invitations?order_by=-created_at&status=revoked&query=string&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_invitations"
									],
									"query": [
										{
											"description": "Allows to return organization invitations in a particular order.\nAt the moment, you can order the returned organization invitations either by their `created_at` or `email_address`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organization invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Filter organization invitations based on their status",
											"key": "status",
											"value": "revoked"
										},
										{
											"description": "Filter organization invitations based on their `email_address`",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"object\": \"organization_invitation\",\n      \"id\": \"string\",\n      \"email_address\": \"string\",\n      \"role\": \"string\",\n      \"role_name\": \"string\",\n      \"organization_id\": \"string\",\n      \"status\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": true,\n        \"key_1\": 1906.1656024377805,\n        \"key_2\": \"string\"\n      },\n      \"private_metadata\": {\n        \"key_0\": 2595\n      },\n      \"url\": \"string\",\n      \"expires_at\": 4182,\n      \"created_at\": 3286,\n      \"updated_at\": 6295,\n      \"public_organization_data\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": true,\n        \"image_url\": \"string\"\n      }\n    },\n    {\n      \"object\": \"organization_invitation\",\n      \"id\": \"string\",\n      \"email_address\": \"string\",\n      \"role\": \"string\",\n      \"role_name\": \"string\",\n      \"organization_id\": \"string\",\n      \"status\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": \"string\",\n        \"key_1\": 5021\n      },\n      \"private_metadata\": {\n        \"key_0\": false\n      },\n      \"url\": \"string\",\n      \"expires_at\": 7976,\n      \"created_at\": 2658,\n      \"updated_at\": 7380,\n      \"public_organization_data\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": false,\n        \"image_url\": \"string\"\n      }\n    }\n  ],\n  \"total_count\": 2949\n}"
						},
						{
							"id": "781399-4facfb7c-f885-44ef-8778-61558f0c8b94",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_invitations?order_by=-created_at&status=revoked&query=string&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_invitations"
									],
									"query": [
										{
											"description": "Allows to return organization invitations in a particular order.\nAt the moment, you can order the returned organization invitations either by their `created_at` or `email_address`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organization invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Filter organization invitations based on their status",
											"key": "status",
											"value": "revoked"
										},
										{
											"description": "Filter organization invitations based on their `email_address`",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-a5e1f16e-caff-4da5-8e16-fe9f603c0a65",
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_invitations?order_by=-created_at&status=revoked&query=string&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_invitations"
									],
									"query": [
										{
											"description": "Allows to return organization invitations in a particular order.\nAt the moment, you can order the returned organization invitations either by their `created_at` or `email_address`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organization invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Filter organization invitations based on their status",
											"key": "status",
											"value": "revoked"
										},
										{
											"description": "Filter organization invitations based on their `email_address`",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-21e94c50-a270-408d-ac2e-40c109284346",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_invitations?order_by=-created_at&status=revoked&query=string&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_invitations"
									],
									"query": [
										{
											"description": "Allows to return organization invitations in a particular order.\nAt the moment, you can order the returned organization invitations either by their `created_at` or `email_address`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organization invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Filter organization invitations based on their status",
											"key": "status",
											"value": "revoked"
										},
										{
											"description": "Filter organization invitations based on their `email_address`",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-f6a5476b-338b-4c1d-a8f0-f8a01abceee6",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_invitations?order_by=-created_at&status=revoked&query=string&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_invitations"
									],
									"query": [
										{
											"description": "Allows to return organization invitations in a particular order.\nAt the moment, you can order the returned organization invitations either by their `created_at` or `email_address`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organization invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Filter organization invitations based on their status",
											"key": "status",
											"value": "revoked"
										},
										{
											"description": "Filter organization invitations based on their `email_address`",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-d34d2147-c581-44e7-a985-3ee51698cb69"
		},
		{
			"name": "allowlist_identifiers",
			"item": [
				{
					"name": "{identifier_id}",
					"item": [
						{
							"name": "Delete identifier from allow-list",
							"id": "781399-1228ebd1-d79e-4411-8873-e31271e39747",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/allowlist_identifiers/:identifier_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowlist_identifiers",
										":identifier_id"
									],
									"variable": [
										{
											"id": "8b1831fc-e10b-4993-bce0-8a233fb3e093",
											"key": "identifier_id",
											"value": "string",
											"description": "The ID of the identifier to delete from the allow-list"
										}
									]
								},
								"description": "Delete an identifier from the instance allow-list"
							},
							"response": [
								{
									"id": "781399-43665154-56e7-43c1-ad28-b6b2bb2de645",
									"name": "Deleted Object",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/allowlist_identifiers/:identifier_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"allowlist_identifiers",
												":identifier_id"
											],
											"variable": [
												{
													"key": "identifier_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
								},
								{
									"id": "781399-26da0725-d294-42c8-84c2-0a234011432c",
									"name": "Payment required",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/allowlist_identifiers/:identifier_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"allowlist_identifiers",
												":identifier_id"
											],
											"variable": [
												{
													"key": "identifier_id"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-6c438586-ca53-4c7c-8423-82893336f43d",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/allowlist_identifiers/:identifier_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"allowlist_identifiers",
												":identifier_id"
											],
											"variable": [
												{
													"key": "identifier_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-0dbeed58-b21c-4f1b-b106-a2ccb28db6d6"
				},
				{
					"name": "List all identifiers on the allow-list",
					"id": "781399-81b3275e-c4cb-490b-a94d-c8e8b671c77b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/allowlist_identifiers?paginated=true&limit=10&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"allowlist_identifiers"
							],
							"query": [
								{
									"key": "paginated",
									"value": "true",
									"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								}
							]
						},
						"description": "Get a list of all identifiers allowed to sign up to an instance"
					},
					"response": [
						{
							"id": "781399-d1fedf12-55d9-4937-81aa-f9d1d79e6296",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/allowlist_identifiers?paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowlist_identifiers"
									],
									"query": [
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n  {\n    \"object\": \"allowlist_identifier\",\n    \"id\": \"string\",\n    \"invitation_id\": \"string\",\n    \"identifier\": \"string\",\n    \"identifier_type\": \"email_address\",\n    \"instance_id\": \"string\",\n    \"created_at\": 7681,\n    \"updated_at\": 6133\n  },\n  {\n    \"object\": \"allowlist_identifier\",\n    \"id\": \"string\",\n    \"invitation_id\": \"string\",\n    \"identifier\": \"string\",\n    \"identifier_type\": \"email_address\",\n    \"instance_id\": \"string\",\n    \"created_at\": 3351,\n    \"updated_at\": 6227\n  }\n]"
						},
						{
							"id": "781399-b3471b5e-fa2c-469d-ae6b-2c1be8fac032",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/allowlist_identifiers?paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowlist_identifiers"
									],
									"query": [
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-73d1f6f1-5d4d-4ee5-a9e5-0a1c9f2a36cb",
							"name": "Payment required",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/allowlist_identifiers?paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowlist_identifiers"
									],
									"query": [
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				},
				{
					"name": "Add identifier to the allow-list",
					"id": "781399-37d64f2d-71a5-45f7-9e8a-4e35d23598e5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identifier\": \"string\",\n  \"notify\": false\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/allowlist_identifiers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"allowlist_identifiers"
							]
						},
						"description": "Create an identifier allowed to sign up to an instance"
					},
					"response": [
						{
							"id": "781399-07df3e84-df19-4ad1-b3ff-e4d4702196f5",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"string\",\n  \"notify\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/allowlist_identifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowlist_identifiers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"allowlist_identifier\",\n  \"id\": \"string\",\n  \"invitation_id\": \"string\",\n  \"identifier\": \"string\",\n  \"identifier_type\": \"web3_wallet\",\n  \"instance_id\": \"string\",\n  \"created_at\": 3128,\n  \"updated_at\": 9766\n}"
						},
						{
							"id": "781399-c1c8cfa3-6827-4d24-a5fc-4e4dfb5156d3",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"string\",\n  \"notify\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/allowlist_identifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowlist_identifiers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-8b853a8d-e649-4150-b38b-11e15d83c803",
							"name": "Payment required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"string\",\n  \"notify\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/allowlist_identifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowlist_identifiers"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-7d912c35-cfe5-4d1e-84e9-48b9c75a3f94",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"string\",\n  \"notify\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/allowlist_identifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"allowlist_identifiers"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-0394c52c-451a-401f-8a48-c7c7f102db11"
		},
		{
			"name": "blocklist_identifiers",
			"item": [
				{
					"name": "{identifier_id}",
					"item": [
						{
							"name": "Delete identifier from block-list",
							"id": "781399-ac6ae00e-751b-40f6-ad9b-514889a70e77",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocklist_identifiers/:identifier_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocklist_identifiers",
										":identifier_id"
									],
									"variable": [
										{
											"id": "99b728f3-35dc-44e6-adc6-1a04205715bb",
											"key": "identifier_id",
											"value": "string",
											"description": "The ID of the identifier to delete from the block-list"
										}
									]
								},
								"description": "Delete an identifier from the instance block-list"
							},
							"response": [
								{
									"id": "781399-45ddbbd3-50d9-409a-9505-b41142ac3c38",
									"name": "Deleted Object",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocklist_identifiers/:identifier_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocklist_identifiers",
												":identifier_id"
											],
											"variable": [
												{
													"key": "identifier_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
								},
								{
									"id": "781399-71da41cd-2557-41bd-8f23-9f7d180b1883",
									"name": "Payment required",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocklist_identifiers/:identifier_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocklist_identifiers",
												":identifier_id"
											],
											"variable": [
												{
													"key": "identifier_id"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-cc85e79b-8de3-4517-b9f0-9233acc41f3d",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/blocklist_identifiers/:identifier_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"blocklist_identifiers",
												":identifier_id"
											],
											"variable": [
												{
													"key": "identifier_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-0f324e9d-0a13-4fc4-8af1-58d0bd9a1afe"
				},
				{
					"name": "List all identifiers on the block-list",
					"id": "781399-a8b0b522-47d0-49af-9b7d-44fcb96b373a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/blocklist_identifiers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blocklist_identifiers"
							]
						},
						"description": "Get a list of all identifiers which are not allowed to access an instance"
					},
					"response": [
						{
							"id": "781399-ce737700-5c30-4ca1-8845-f1b94003f86e",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocklist_identifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocklist_identifiers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"object\": \"blocklist_identifier\",\n      \"id\": \"string\",\n      \"identifier\": \"string\",\n      \"identifier_type\": \"phone_number\",\n      \"instance_id\": \"string\",\n      \"created_at\": 9351,\n      \"updated_at\": 8452\n    },\n    {\n      \"object\": \"blocklist_identifier\",\n      \"id\": \"string\",\n      \"identifier\": \"string\",\n      \"identifier_type\": \"web3_wallet\",\n      \"instance_id\": \"string\",\n      \"created_at\": 5873,\n      \"updated_at\": 8743\n    }\n  ],\n  \"total_count\": 6590\n}"
						},
						{
							"id": "781399-c5242b2e-d546-4859-a32a-ffb22ea2f7a7",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocklist_identifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocklist_identifiers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-6445a601-961d-4c0d-9390-707b4bc4c05a",
							"name": "Payment required",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/blocklist_identifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocklist_identifiers"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				},
				{
					"name": "Add identifier to the block-list",
					"id": "781399-b8561809-3ddb-467f-acab-1f924ad80aad",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identifier\": \"string\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/blocklist_identifiers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blocklist_identifiers"
							]
						},
						"description": "Create an identifier that is blocked from accessing an instance"
					},
					"response": [
						{
							"id": "781399-1481d05a-356b-4f66-8302-764f2cffb6c1",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocklist_identifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocklist_identifiers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"blocklist_identifier\",\n  \"id\": \"string\",\n  \"identifier\": \"string\",\n  \"identifier_type\": \"phone_number\",\n  \"instance_id\": \"string\",\n  \"created_at\": 9034,\n  \"updated_at\": 3616\n}"
						},
						{
							"id": "781399-9b90b848-1016-45d3-a695-d2b12bc660c0",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocklist_identifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocklist_identifiers"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-f124e813-da31-421c-bf62-1d84f66a1509",
							"name": "Payment required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocklist_identifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocklist_identifiers"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-ba11713d-a261-4afb-837a-f5ce0f39c60d",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/blocklist_identifiers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"blocklist_identifiers"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-ccca4402-e6bf-4a66-8bdc-0ed33d90abef"
		},
		{
			"name": "beta_features",
			"item": [
				{
					"name": "instance_settings",
					"item": [
						{
							"name": "Update instance settings",
							"id": "781399-08a57cb2-3855-4b92-b7af-b1eb0070d04b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"restricted_to_allowlist\": false,\n  \"from_email_address\": \"string\",\n  \"progressive_sign_up\": true,\n  \"enhanced_email_deliverability\": false,\n  \"test_mode\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/beta_features/instance_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"beta_features",
										"instance_settings"
									]
								},
								"description": "Updates the settings of an instance"
							},
							"response": [
								{
									"id": "781399-e99e8f25-a196-43d3-8922-c72716f7d772",
									"name": "InstanceSettings Server API",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"restricted_to_allowlist\": false,\n  \"from_email_address\": \"string\",\n  \"progressive_sign_up\": true,\n  \"enhanced_email_deliverability\": false,\n  \"test_mode\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/beta_features/instance_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"beta_features",
												"instance_settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"instance_settings\",\n  \"id\": \"string\",\n  \"restricted_to_allowlist\": true,\n  \"from_email_address\": \"string\",\n  \"progressive_sign_up\": false,\n  \"enhanced_email_deliverability\": false\n}"
								},
								{
									"id": "781399-464a3b28-8e7d-411c-ba81-739bd2aaade9",
									"name": "Payment required",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"restricted_to_allowlist\": false,\n  \"from_email_address\": \"string\",\n  \"progressive_sign_up\": true,\n  \"enhanced_email_deliverability\": false,\n  \"test_mode\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/beta_features/instance_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"beta_features",
												"instance_settings"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-ee913d56-14e7-43e4-ad36-a188d99a0360",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"restricted_to_allowlist\": false,\n  \"from_email_address\": \"string\",\n  \"progressive_sign_up\": true,\n  \"enhanced_email_deliverability\": false,\n  \"test_mode\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/beta_features/instance_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"beta_features",
												"instance_settings"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-c49886fb-8de5-46d0-b0eb-3f382514a02d"
				},
				{
					"name": "domain",
					"item": [
						{
							"name": "Update production instance domain",
							"id": "781399-8b22dea0-56b3-4ffa-b488-8c7de1cabd85",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"home_url\": \"string\",\n  \"is_secondary\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/beta_features/domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"beta_features",
										"domain"
									]
								},
								"description": "Change the domain of a production instance.\n\nChanging the domain requires updating the [DNS records](https://clerk.com/docs/deployments/overview#dns-records) accordingly, deploying new [SSL certificates](https://clerk.com/docs/deployments/overview#deploy-certificates), updating your Social Connection's redirect URLs and setting the new keys in your code.\n\nWARNING: Changing your domain will invalidate all current user sessions (i.e. users will be logged out). Also, while your application is being deployed, a small downtime is expected to occur."
							},
							"response": [
								{
									"id": "781399-3db64c89-125d-4caf-b111-c2f933872011",
									"name": "Accepted",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"home_url\": \"string\",\n  \"is_secondary\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/beta_features/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"beta_features",
												"domain"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "781399-dba64d72-0669-47bb-aebb-53c9c77a662e",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"home_url\": \"string\",\n  \"is_secondary\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/beta_features/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"beta_features",
												"domain"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-83fd9bfb-58a4-415b-8a68-5083de214c89",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"home_url\": \"string\",\n  \"is_secondary\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/beta_features/domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"beta_features",
												"domain"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-eefa2e48-2edd-4f89-b0d7-273b294acd07"
				}
			],
			"id": "781399-d8ca0c8d-cbee-40c0-a0ea-da19fcbf20cf"
		},
		{
			"name": "actor_tokens",
			"item": [
				{
					"name": "{actor_token_id}",
					"item": [
						{
							"name": "revoke",
							"item": [
								{
									"name": "Revoke actor token",
									"id": "781399-741c96ad-b18a-4c15-aeb7-fff98305ccf5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/actor_tokens/:actor_token_id/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"actor_tokens",
												":actor_token_id",
												"revoke"
											],
											"variable": [
												{
													"id": "56352aae-c673-4316-b8e0-b8fa4c312d9c",
													"key": "actor_token_id",
													"value": "string",
													"description": "The ID of the actor token to be revoked."
												}
											]
										},
										"description": "Revokes a pending actor token."
									},
									"response": [
										{
											"id": "781399-dbe3cd43-24c7-4a7b-baaf-6f6d86e6b459",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/actor_tokens/:actor_token_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"actor_tokens",
														":actor_token_id",
														"revoke"
													],
													"variable": [
														{
															"key": "actor_token_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"actor_token\",\n  \"id\": \"string\",\n  \"user_id\": \"string\",\n  \"actor\": {},\n  \"status\": \"pending\",\n  \"created_at\": 9966,\n  \"updated_at\": 9824,\n  \"token\": \"string\",\n  \"url\": \"string\"\n}"
										},
										{
											"id": "781399-59a83cb3-3957-45ce-9354-6e85c352be6b",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/actor_tokens/:actor_token_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"actor_tokens",
														":actor_token_id",
														"revoke"
													],
													"variable": [
														{
															"key": "actor_token_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-20541948-5251-4e8a-8a72-5bfd8885a53a",
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/actor_tokens/:actor_token_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"actor_tokens",
														":actor_token_id",
														"revoke"
													],
													"variable": [
														{
															"key": "actor_token_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-53594094-54b7-44ca-9c49-1130a18ea73a"
						}
					],
					"id": "781399-086664d9-847c-4f35-ac11-e976d5ec3f96"
				},
				{
					"name": "Create actor token",
					"id": "781399-c35b19dd-ac7b-464c-99de-95c5cf11575d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"string\",\n  \"actor\": {\n    \"sub\": \"user_2OEpKhcCN1Lat9NQ0G6puh7q5Rb\"\n  },\n  \"expires_in_seconds\": 3600,\n  \"session_max_duration_in_seconds\": 1800\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/actor_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actor_tokens"
							]
						},
						"description": "Create an actor token that can be used to impersonate the given user.\nThe `actor` parameter needs to include at least a \"sub\" key whose value is the ID of the actor (impersonating) user."
					},
					"response": [
						{
							"id": "781399-59016f7c-5f42-4435-9af4-c5933f47c69a",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"actor\": {\n    \"sub\": \"user_2OEpKhcCN1Lat9NQ0G6puh7q5Rb\"\n  },\n  \"expires_in_seconds\": 3600,\n  \"session_max_duration_in_seconds\": 1800\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/actor_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actor_tokens"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"actor_token\",\n  \"id\": \"string\",\n  \"user_id\": \"string\",\n  \"actor\": {},\n  \"status\": \"pending\",\n  \"created_at\": 9966,\n  \"updated_at\": 9824,\n  \"token\": \"string\",\n  \"url\": \"string\"\n}"
						},
						{
							"id": "781399-4c66a0d2-66d4-4153-8084-fcfd4733268e",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"actor\": {\n    \"sub\": \"user_2OEpKhcCN1Lat9NQ0G6puh7q5Rb\"\n  },\n  \"expires_in_seconds\": 3600,\n  \"session_max_duration_in_seconds\": 1800\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/actor_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actor_tokens"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-70ef3f29-c40d-418f-81d7-842b079bea9e",
							"name": "Payment required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"actor\": {\n    \"sub\": \"user_2OEpKhcCN1Lat9NQ0G6puh7q5Rb\"\n  },\n  \"expires_in_seconds\": 3600,\n  \"session_max_duration_in_seconds\": 1800\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/actor_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actor_tokens"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-566de599-e6ca-412a-965a-d0195dd067d8",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"actor\": {\n    \"sub\": \"user_2OEpKhcCN1Lat9NQ0G6puh7q5Rb\"\n  },\n  \"expires_in_seconds\": 3600,\n  \"session_max_duration_in_seconds\": 1800\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/actor_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actor_tokens"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-62ce6079-187d-4dd2-ada7-71ef95889815"
		},
		{
			"name": "domains",
			"item": [
				{
					"name": "{domain_id}",
					"item": [
						{
							"name": "Delete a satellite domain",
							"id": "781399-afbb94c2-9b35-4969-8e35-977106a42e19",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains/:domain_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":domain_id"
									],
									"variable": [
										{
											"id": "35609322-a77a-4f43-a3b6-5318fcbf1f7f",
											"key": "domain_id",
											"value": "string",
											"description": "The ID of the domain that will be deleted. Must be a satellite domain."
										}
									]
								},
								"description": "Deletes a satellite domain for the instance.\nIt is currently not possible to delete the instance's primary domain."
							},
							"response": [
								{
									"id": "781399-215ea9c5-29e1-4f43-8bc6-cb52fae8d35f",
									"name": "Deleted Object",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domain_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domain_id"
											],
											"variable": [
												{
													"key": "domain_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
								},
								{
									"id": "781399-792efe8a-0dba-4dbf-a68b-6afdabbdedf7",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domain_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domain_id"
											],
											"variable": [
												{
													"key": "domain_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-a2267981-c8bc-4991-b169-8e7715365caf",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/domains/:domain_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domain_id"
											],
											"variable": [
												{
													"key": "domain_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update a domain",
							"id": "781399-d5a28da7-2628-4374-ac5a-b028ccf773ef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"proxy_url\": \"string\",\n  \"is_secondary\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains/:domain_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains",
										":domain_id"
									],
									"variable": [
										{
											"id": "5fd5d285-5ae0-4202-b15a-d561b7a37dd0",
											"key": "domain_id",
											"value": "string",
											"description": "The ID of the domain that will be updated."
										}
									]
								},
								"description": "The `proxy_url` can be updated only for production instances.\nUpdate one of the instance's domains. Both primary and satellite domains can be updated.\nIf you choose to use Clerk via proxy, use this endpoint to specify the `proxy_url`.\nWhenever you decide you'd rather switch to DNS setup for Clerk, simply set `proxy_url`\nto `null` for the domain. When you update a production instance's primary domain name,\nyou have to make sure that you've completed all the necessary setup steps for DNS and\nemails to work. Expect downtime otherwise. Updating a primary domain's name will also\nupdate the instance's home origin, affecting the default application paths."
							},
							"response": [
								{
									"id": "781399-29175351-85bb-45a0-bd82-3d15257b4fcb",
									"name": "A domain",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"proxy_url\": \"string\",\n  \"is_secondary\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domain_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domain_id"
											],
											"variable": [
												{
													"key": "domain_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"domain\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"is_satellite\": true,\n  \"frontend_api_url\": \"string\",\n  \"development_origin\": \"string\",\n  \"accounts_portal_url\": \"string\",\n  \"proxy_url\": \"string\",\n  \"cname_targets\": [\n    {\n      \"host\": \"string\",\n      \"value\": \"string\",\n      \"required\": true\n    },\n    {\n      \"host\": \"string\",\n      \"value\": \"string\",\n      \"required\": false\n    }\n  ]\n}"
								},
								{
									"id": "781399-02d5bcfa-229e-442d-bdd5-c1b106828afc",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"proxy_url\": \"string\",\n  \"is_secondary\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domain_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domain_id"
											],
											"variable": [
												{
													"key": "domain_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-83548db6-465a-43ce-9eab-2af226ee99dc",
									"name": "Resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"proxy_url\": \"string\",\n  \"is_secondary\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domain_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domain_id"
											],
											"variable": [
												{
													"key": "domain_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-06ebd4ac-0c58-4cd1-aedd-cce22940353c",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"proxy_url\": \"string\",\n  \"is_secondary\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/domains/:domain_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"domains",
												":domain_id"
											],
											"variable": [
												{
													"key": "domain_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-283db2c0-c1e5-4b8f-ae06-01622735a0a6"
				},
				{
					"name": "List all instance domains",
					"id": "781399-0e48b0f5-b677-45c4-8b20-a5b40bc30d21",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/domains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains"
							]
						},
						"description": "Use this endpoint to get a list of all domains for an instance.\nThe response will contain the primary domain for the instance and any satellite domains. Each domain in the response contains information about the URLs where Clerk operates and the required CNAME targets."
					},
					"response": [
						{
							"id": "781399-addbbaa8-a969-4c59-8464-3459dc86daef",
							"name": "A list of domains",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"object\": \"domain\",\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"is_satellite\": true,\n      \"frontend_api_url\": \"string\",\n      \"development_origin\": \"string\",\n      \"accounts_portal_url\": \"string\",\n      \"proxy_url\": \"string\",\n      \"cname_targets\": [\n        {\n          \"host\": \"string\",\n          \"value\": \"string\",\n          \"required\": true\n        },\n        {\n          \"host\": \"string\",\n          \"value\": \"string\",\n          \"required\": true\n        }\n      ]\n    },\n    {\n      \"object\": \"domain\",\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"is_satellite\": true,\n      \"frontend_api_url\": \"string\",\n      \"development_origin\": \"string\",\n      \"accounts_portal_url\": \"string\",\n      \"proxy_url\": \"string\",\n      \"cname_targets\": [\n        {\n          \"host\": \"string\",\n          \"value\": \"string\",\n          \"required\": true\n        },\n        {\n          \"host\": \"string\",\n          \"value\": \"string\",\n          \"required\": true\n        }\n      ]\n    }\n  ],\n  \"total_count\": 6443\n}"
						}
					]
				},
				{
					"name": "Add a domain",
					"id": "781399-a311f432-0a99-40b1-a79b-7c58c62a0e0a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"is_satellite\": true,\n  \"proxy_url\": \"string\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/domains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"domains"
							]
						},
						"description": "Add a new domain for your instance.\nUseful in the case of multi-domain instances, allows adding satellite domains to an instance.\nThe new domain must have a `name`. The domain name can contain the port for development instances, like `localhost:3000`.\nAt the moment, instances can have only one primary domain, so the `is_satellite` parameter must be set to `true`.\nIf you're planning to configure the new satellite domain to run behind a proxy, pass the `proxy_url` parameter accordingly."
					},
					"response": [
						{
							"id": "781399-6dd20f28-5817-425e-8330-f3fdb499cb80",
							"name": "A domain",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"is_satellite\": true,\n  \"proxy_url\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"domain\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"is_satellite\": true,\n  \"frontend_api_url\": \"string\",\n  \"development_origin\": \"string\",\n  \"accounts_portal_url\": \"string\",\n  \"proxy_url\": \"string\",\n  \"cname_targets\": [\n    {\n      \"host\": \"string\",\n      \"value\": \"string\",\n      \"required\": true\n    },\n    {\n      \"host\": \"string\",\n      \"value\": \"string\",\n      \"required\": false\n    }\n  ]\n}"
						},
						{
							"id": "781399-3299025f-d907-4f46-8661-47be6a511ecc",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"is_satellite\": true,\n  \"proxy_url\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-86a6726f-ba36-4315-8eec-d396aa1a2bb6",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"is_satellite\": true,\n  \"proxy_url\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-d72fced8-6a16-46a8-ab2a-2e1025b84643",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"is_satellite\": true,\n  \"proxy_url\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/domains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"domains"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-4f77a676-862f-4ef1-895a-01cc697b95e6"
		},
		{
			"name": "instance",
			"item": [
				{
					"name": "restrictions",
					"item": [
						{
							"name": "Update instance restrictions",
							"id": "781399-e6819d9c-bfff-4154-89ba-4fde73d8a241",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"allowlist\": false,\n  \"blocklist\": false,\n  \"allowlist_blocklist_disabled_on_sign_in\": false,\n  \"block_email_subaddresses\": false,\n  \"block_disposable_email_domains\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instance/restrictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instance",
										"restrictions"
									]
								},
								"description": "Updates the restriction settings of an instance"
							},
							"response": [
								{
									"id": "781399-479c178d-447c-4def-a8a6-6aa7cb7e9ad3",
									"name": "Success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"allowlist\": false,\n  \"blocklist\": false,\n  \"allowlist_blocklist_disabled_on_sign_in\": false,\n  \"block_email_subaddresses\": false,\n  \"block_disposable_email_domains\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instance/restrictions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instance",
												"restrictions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"instance_restrictions\",\n  \"allowlist\": false,\n  \"blocklist\": true,\n  \"allowlist_blocklist_disabled_on_sign_in\": true,\n  \"block_email_subaddresses\": false,\n  \"block_disposable_email_domains\": false\n}"
								},
								{
									"id": "781399-53ce516b-e235-4e6e-98a1-d475c7affec7",
									"name": "Payment required",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"allowlist\": false,\n  \"blocklist\": false,\n  \"allowlist_blocklist_disabled_on_sign_in\": false,\n  \"block_email_subaddresses\": false,\n  \"block_disposable_email_domains\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instance/restrictions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instance",
												"restrictions"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-30b4d052-60f6-4223-b133-73e799f6e46d",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"allowlist\": false,\n  \"blocklist\": false,\n  \"allowlist_blocklist_disabled_on_sign_in\": false,\n  \"block_email_subaddresses\": false,\n  \"block_disposable_email_domains\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instance/restrictions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instance",
												"restrictions"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-c339c525-98de-47dd-91a3-4cf8a99fa2ab"
				},
				{
					"name": "change_domain",
					"item": [
						{
							"name": "Update production instance domain",
							"id": "781399-a59e232a-21c7-4316-aa7a-68cf65f92282",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"home_url\": \"string\",\n  \"is_secondary\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instance/change_domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instance",
										"change_domain"
									]
								},
								"description": "Change the domain of a production instance.\n\nChanging the domain requires updating the [DNS records](https://clerk.com/docs/deployments/overview#dns-records) accordingly, deploying new [SSL certificates](https://clerk.com/docs/deployments/overview#deploy-certificates), updating your Social Connection's redirect URLs and setting the new keys in your code.\n\nWARNING: Changing your domain will invalidate all current user sessions (i.e. users will be logged out). Also, while your application is being deployed, a small downtime is expected to occur."
							},
							"response": [
								{
									"id": "781399-7b66898c-cfbd-4ce6-be31-3dccf2704932",
									"name": "Accepted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"home_url\": \"string\",\n  \"is_secondary\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instance/change_domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instance",
												"change_domain"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "781399-9a3c6315-dad4-4c8b-bdc5-ff7c50170dc9",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"home_url\": \"string\",\n  \"is_secondary\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instance/change_domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instance",
												"change_domain"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-67c97f76-20d1-4042-834b-959ce542519b",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"home_url\": \"string\",\n  \"is_secondary\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instance/change_domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instance",
												"change_domain"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-7f988d8c-340f-4b2e-be04-88b9187e0173"
				},
				{
					"name": "organization_settings",
					"item": [
						{
							"name": "Update instance organization settings",
							"id": "781399-489be4f5-9d5c-4d0a-97ab-6f5be47809be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"enabled\": true,\n  \"max_allowed_memberships\": 545,\n  \"admin_delete_enabled\": false,\n  \"domains_enabled\": true,\n  \"slug_disabled\": true,\n  \"domains_enrollment_modes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"creator_role_id\": \"string\",\n  \"domains_default_role_id\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instance/organization_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instance",
										"organization_settings"
									]
								},
								"description": "Updates the organization settings of the instance"
							},
							"response": [
								{
									"id": "781399-370404fc-7a45-4c59-a016-5c229c77e9e4",
									"name": "Success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"max_allowed_memberships\": 545,\n  \"admin_delete_enabled\": false,\n  \"domains_enabled\": true,\n  \"slug_disabled\": true,\n  \"domains_enrollment_modes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"creator_role_id\": \"string\",\n  \"domains_default_role_id\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instance/organization_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instance",
												"organization_settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"organization_settings\",\n  \"enabled\": false,\n  \"max_allowed_memberships\": 9988,\n  \"max_allowed_roles\": 6880,\n  \"creator_role\": \"string\",\n  \"admin_delete_enabled\": true,\n  \"domains_enabled\": true,\n  \"domains_enrollment_modes\": [\n    \"automatic_invitation\",\n    \"automatic_suggestion\"\n  ],\n  \"domains_default_role\": \"string\",\n  \"max_allowed_permissions\": 2941,\n  \"slug_disabled\": false,\n  \"initial_role_set_key\": \"string\"\n}"
								},
								{
									"id": "781399-c385a3fb-8e6a-46b7-b833-6fdec7a0572f",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"max_allowed_memberships\": 545,\n  \"admin_delete_enabled\": false,\n  \"domains_enabled\": true,\n  \"slug_disabled\": true,\n  \"domains_enrollment_modes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"creator_role_id\": \"string\",\n  \"domains_default_role_id\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instance/organization_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instance",
												"organization_settings"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-005fa2e8-ea6e-47d5-b355-a41907ee50dd",
									"name": "Payment required",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"max_allowed_memberships\": 545,\n  \"admin_delete_enabled\": false,\n  \"domains_enabled\": true,\n  \"slug_disabled\": true,\n  \"domains_enrollment_modes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"creator_role_id\": \"string\",\n  \"domains_default_role_id\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instance/organization_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instance",
												"organization_settings"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-295d6df4-c591-4d6f-819b-06568612b884",
									"name": "Resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"max_allowed_memberships\": 545,\n  \"admin_delete_enabled\": false,\n  \"domains_enabled\": true,\n  \"slug_disabled\": true,\n  \"domains_enrollment_modes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"creator_role_id\": \"string\",\n  \"domains_default_role_id\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instance/organization_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instance",
												"organization_settings"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-5a8870b3-4490-4805-9ec3-177c97a09181",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"enabled\": true,\n  \"max_allowed_memberships\": 545,\n  \"admin_delete_enabled\": false,\n  \"domains_enabled\": true,\n  \"slug_disabled\": true,\n  \"domains_enrollment_modes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"creator_role_id\": \"string\",\n  \"domains_default_role_id\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/instance/organization_settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"instance",
												"organization_settings"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-5f5a3302-2e39-444c-bfe7-185c5a023650"
				},
				{
					"name": "Fetch the current instance",
					"id": "781399-3fc4fa79-981c-483e-b377-7dd1939ab075",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/instance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instance"
							]
						},
						"description": "Fetches the current instance"
					},
					"response": [
						{
							"id": "781399-7a811fb1-957c-4f4e-b080-920428e37d53",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/instance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instance"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"instance\",\n  \"id\": \"string\",\n  \"environment_type\": \"development\",\n  \"allowed_origins\": [\n    \"http://localhost:3000\",\n    \"https://some-domain\"\n  ]\n}"
						}
					]
				},
				{
					"name": "Update instance settings",
					"id": "781399-ead4f91b-7536-45bf-b802-3d71e0f5a785",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"test_mode\": false,\n  \"hibp\": true,\n  \"enhanced_email_deliverability\": false,\n  \"support_email\": \"string\",\n  \"clerk_js_version\": \"string\",\n  \"development_origin\": \"string\",\n  \"allowed_origins\": [\n    \"string\",\n    \"string\"\n  ],\n  \"cookieless_dev\": false,\n  \"url_based_session_syncing\": true\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/instance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"instance"
							]
						},
						"description": "Updates the settings of an instance"
					},
					"response": [
						{
							"id": "781399-0e35c644-4876-4d11-9b84-89d208160dd6",
							"name": "Accepted",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"test_mode\": false,\n  \"hibp\": true,\n  \"enhanced_email_deliverability\": false,\n  \"support_email\": \"string\",\n  \"clerk_js_version\": \"string\",\n  \"development_origin\": \"string\",\n  \"allowed_origins\": [\n    \"string\",\n    \"string\"\n  ],\n  \"cookieless_dev\": false,\n  \"url_based_session_syncing\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instance"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "781399-f7196d41-c80c-4233-a81e-1227d7e7cb20",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"test_mode\": false,\n  \"hibp\": true,\n  \"enhanced_email_deliverability\": false,\n  \"support_email\": \"string\",\n  \"clerk_js_version\": \"string\",\n  \"development_origin\": \"string\",\n  \"allowed_origins\": [\n    \"string\",\n    \"string\"\n  ],\n  \"cookieless_dev\": false,\n  \"url_based_session_syncing\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/instance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"instance"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-cda7f323-4abb-479e-a1fe-bc4ce4e0a0d3"
		},
		{
			"name": "webhooks",
			"item": [
				{
					"name": "svix",
					"item": [
						{
							"name": "Create a Svix app",
							"id": "781399-5e76e97c-d63c-489e-b97d-68cf4bcbb41d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/svix",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"svix"
									]
								},
								"description": "Create a Svix app and associate it with the current instance"
							},
							"response": [
								{
									"id": "781399-d40d539f-82e6-4b20-8c6e-73e9cddc3ff8",
									"name": "Response that contains a temporary Svix URL to access management dashboard",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/svix",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"svix"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"svix_url\": \"string\"\n}"
								},
								{
									"id": "781399-f68614e3-bb49-4ea9-9ac2-5bb5c43b5a55",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/svix",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"svix"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete a Svix app",
							"id": "781399-a933c056-3587-4f55-a0b3-3f35e702ad2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/svix",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"svix"
									]
								},
								"description": "Delete a Svix app and disassociate it from the current instance"
							},
							"response": [
								{
									"id": "781399-478aadc5-afda-4fa4-9ee1-55fd38d820e8",
									"name": "Svix app was successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/svix",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"svix"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "781399-c0b1305c-4429-4510-9636-83f59afe749c",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/svix",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"svix"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-811a51d2-3f0d-4fef-92a5-be5d42d74713"
				},
				{
					"name": "svix_url",
					"item": [
						{
							"name": "Create a Svix Dashboard URL",
							"id": "781399-a08d7511-5c55-46d5-a6ce-48d2b8495f82",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/svix_url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"svix_url"
									]
								},
								"description": "Generate a new URL for accessing the Svix's management dashboard for that particular instance"
							},
							"response": [
								{
									"id": "781399-4ffa2c95-89a0-4ec3-9e52-141968b94a0b",
									"name": "Response that contains a temporary Svix URL to access management dashboard",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/svix_url",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"svix_url"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"svix_url\": \"string\"\n}"
								},
								{
									"id": "781399-3a287a68-f9cb-409b-b8ef-a4597aaf18e5",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/svix_url",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												"svix_url"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-5904d4e9-2e09-40c0-90fb-949a35ecebe8"
				}
			],
			"id": "781399-5abfe176-1148-4118-8998-f764eb164d2a"
		},
		{
			"name": "jwt_templates",
			"item": [
				{
					"name": "{template_id}",
					"item": [
						{
							"name": "Retrieve a template",
							"id": "781399-58990f10-e88f-4875-852c-b497e388b50a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/jwt_templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"jwt_templates",
										":template_id"
									],
									"variable": [
										{
											"id": "edeb64b9-d08d-43c3-b074-8702d58a7d96",
											"key": "template_id",
											"value": "string",
											"description": "JWT Template ID"
										}
									]
								},
								"description": "Retrieve the details of a given JWT template"
							},
							"response": [
								{
									"id": "781399-0cadea3c-a8b4-446c-b4f4-89b1de7d1e1c",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/jwt_templates/:template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jwt_templates",
												":template_id"
											],
											"variable": [
												{
													"key": "template_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"jwt_template\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 776,\n  \"allowed_clock_skew\": 9715,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"created_at\": 4110,\n  \"updated_at\": 2112\n}"
								},
								{
									"id": "781399-1e0a8c7f-b47c-4309-bd65-77c821c3649a",
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/jwt_templates/:template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jwt_templates",
												":template_id"
											],
											"variable": [
												{
													"key": "template_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update a JWT template",
							"id": "781399-e71dfdef-f438-4fa3-a3f2-edc7b0087dde",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 19577730,\n  \"allowed_clock_skew\": 238,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"signing_key\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/jwt_templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"jwt_templates",
										":template_id"
									],
									"variable": [
										{
											"id": "6509e8fd-8fbe-4b3f-a67a-160f09d0ec63",
											"key": "template_id",
											"value": "string",
											"description": "The ID of the JWT template to update"
										}
									]
								},
								"description": "Updates an existing JWT template"
							},
							"response": [
								{
									"id": "781399-8136f307-b839-4f3e-9816-68f67b87d9e6",
									"name": "Success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 19577730,\n  \"allowed_clock_skew\": 238,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"signing_key\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/jwt_templates/:template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jwt_templates",
												":template_id"
											],
											"variable": [
												{
													"key": "template_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"jwt_template\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 776,\n  \"allowed_clock_skew\": 9715,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"created_at\": 4110,\n  \"updated_at\": 2112\n}"
								},
								{
									"id": "781399-2ecc0e24-0f97-4316-bbe4-4ccae409f0bd",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 19577730,\n  \"allowed_clock_skew\": 238,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"signing_key\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/jwt_templates/:template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jwt_templates",
												":template_id"
											],
											"variable": [
												{
													"key": "template_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-9594c3c3-3c04-4e6a-bb5a-f5a43d804698",
									"name": "Payment required",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 19577730,\n  \"allowed_clock_skew\": 238,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"signing_key\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/jwt_templates/:template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jwt_templates",
												":template_id"
											],
											"variable": [
												{
													"key": "template_id"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-6f0e775a-9c21-4992-8c79-39f519b2ab43",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 19577730,\n  \"allowed_clock_skew\": 238,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"signing_key\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/jwt_templates/:template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jwt_templates",
												":template_id"
											],
											"variable": [
												{
													"key": "template_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete a Template",
							"id": "781399-79ffc7f0-37ab-4652-8707-f719fcb72dcc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/jwt_templates/:template_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"jwt_templates",
										":template_id"
									],
									"variable": [
										{
											"id": "6b2dbd94-aa2f-4a4f-be04-1a728ec6ca97",
											"key": "template_id",
											"value": "string",
											"description": "JWT Template ID"
										}
									]
								}
							},
							"response": [
								{
									"id": "781399-c17a5e89-4752-46f3-80e4-54816e9563c2",
									"name": "Deleted Object",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/jwt_templates/:template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jwt_templates",
												":template_id"
											],
											"variable": [
												{
													"key": "template_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
								},
								{
									"id": "781399-3047d5a8-2d8a-417c-b1e9-31b5dc711cc1",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/jwt_templates/:template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jwt_templates",
												":template_id"
											],
											"variable": [
												{
													"key": "template_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-1538fd35-460b-4cc6-bdfd-aff02f65174b",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/jwt_templates/:template_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"jwt_templates",
												":template_id"
											],
											"variable": [
												{
													"key": "template_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-a9c10b28-fd94-4853-9ed9-61e4bc82ccef"
				},
				{
					"name": "List all templates",
					"id": "781399-32d6e003-6d63-4fb7-bd63-893fce6c55a5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/jwt_templates?paginated=true&limit=10&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"jwt_templates"
							],
							"query": [
								{
									"key": "paginated",
									"value": "true",
									"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								}
							]
						}
					},
					"response": [
						{
							"id": "781399-43af1bd8-9bc9-4f12-8273-4158bfa88a7a",
							"name": "List of JWT templates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/jwt_templates?paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"jwt_templates"
									],
									"query": [
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n  {\n    \"object\": \"jwt_template\",\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"claims\": {},\n    \"lifetime\": 2184,\n    \"allowed_clock_skew\": 6593,\n    \"custom_signing_key\": true,\n    \"signing_algorithm\": \"string\",\n    \"created_at\": 1864,\n    \"updated_at\": 9044\n  },\n  {\n    \"object\": \"jwt_template\",\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"claims\": {},\n    \"lifetime\": 5220,\n    \"allowed_clock_skew\": 7532,\n    \"custom_signing_key\": false,\n    \"signing_algorithm\": \"string\",\n    \"created_at\": 4951,\n    \"updated_at\": 6546\n  }\n]"
						}
					]
				},
				{
					"name": "Create a JWT template",
					"id": "781399-cd197b6b-8d38-4ac1-b46c-2b63f19ac648",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 19577730,\n  \"allowed_clock_skew\": 238,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"signing_key\": \"string\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/jwt_templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"jwt_templates"
							]
						},
						"description": "Create a new JWT template"
					},
					"response": [
						{
							"id": "781399-9e813366-43ab-4a41-90ac-22f6516fc166",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 19577730,\n  \"allowed_clock_skew\": 238,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"signing_key\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/jwt_templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"jwt_templates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"jwt_template\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 776,\n  \"allowed_clock_skew\": 9715,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"created_at\": 4110,\n  \"updated_at\": 2112\n}"
						},
						{
							"id": "781399-9570ae99-7f7b-45bf-bd7f-c8959c87e90a",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 19577730,\n  \"allowed_clock_skew\": 238,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"signing_key\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/jwt_templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"jwt_templates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-904a1b0c-7a07-47c8-b00b-d18863a10641",
							"name": "Payment required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 19577730,\n  \"allowed_clock_skew\": 238,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"signing_key\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/jwt_templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"jwt_templates"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-60981373-ea76-4f9e-980c-da36af64b400",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"claims\": {},\n  \"lifetime\": 19577730,\n  \"allowed_clock_skew\": 238,\n  \"custom_signing_key\": false,\n  \"signing_algorithm\": \"string\",\n  \"signing_key\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/jwt_templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"jwt_templates"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-f4d768b7-4d6d-4d62-b43b-9aeaa3b83971"
		},
		{
			"name": "machines",
			"item": [
				{
					"name": "{machine_id}",
					"item": [
						{
							"name": "secret_key",
							"item": [
								{
									"name": "rotate",
									"item": [
										{
											"name": "Rotate a machine's secret key",
											"id": "781399-0ac25130-7ec4-4d6b-8463-d23cbef86d2f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"previous_token_ttl\": 26238\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/secret_key/rotate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"secret_key",
														"rotate"
													],
													"variable": [
														{
															"id": "220e8a24-b719-4663-af55-b03812fd30f5",
															"key": "machine_id",
															"value": "string",
															"description": "The ID of the machine to rotate the secret key for"
														}
													]
												},
												"description": "Rotates the machine's secret key.\nWhen the secret key is rotated, make sure to update it in your machine/application.\nThe previous secret key will remain valid for the duration specified by the previous_token_ttl parameter."
											},
											"response": [
												{
													"id": "781399-1b095e54-f969-4fe8-a243-c71be23d8d7c",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"previous_token_ttl\": 26238\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/machines/:machine_id/secret_key/rotate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"machines",
																":machine_id",
																"secret_key",
																"rotate"
															],
															"variable": [
																{
																	"key": "machine_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"machine_secret_key\",\n  \"secret\": \"string\"\n}"
												},
												{
													"id": "781399-ed945964-8db1-47ed-8c1f-8e762ea8ccbe",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"previous_token_ttl\": 26238\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/machines/:machine_id/secret_key/rotate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"machines",
																":machine_id",
																"secret_key",
																"rotate"
															],
															"variable": [
																{
																	"key": "machine_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-ec5fe904-d665-47c9-b2a3-0d8a08bac893",
													"name": "Authentication invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"previous_token_ttl\": 26238\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/machines/:machine_id/secret_key/rotate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"machines",
																":machine_id",
																"secret_key",
																"rotate"
															],
															"variable": [
																{
																	"key": "machine_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-d7189d9b-b74a-4563-b176-175393e34592",
													"name": "Authorization invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"previous_token_ttl\": 26238\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/machines/:machine_id/secret_key/rotate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"machines",
																":machine_id",
																"secret_key",
																"rotate"
															],
															"variable": [
																{
																	"key": "machine_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-95541786-2f06-4db8-8932-aafdbb5f012b",
													"name": "Resource not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"previous_token_ttl\": 26238\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/machines/:machine_id/secret_key/rotate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"machines",
																":machine_id",
																"secret_key",
																"rotate"
															],
															"variable": [
																{
																	"key": "machine_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-f777c3fd-e47f-4514-91fd-9a99d7f895c5",
													"name": "Invalid request parameters",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"previous_token_ttl\": 26238\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/machines/:machine_id/secret_key/rotate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"machines",
																":machine_id",
																"secret_key",
																"rotate"
															],
															"variable": [
																{
																	"key": "machine_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-7aea0830-5f64-4ffa-b80f-7b6ffa4c886d"
								},
								{
									"name": "Retrieve a machine secret key",
									"id": "781399-e8f21141-e5b4-43ea-a304-52bfcbb80752",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id/secret_key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id",
												"secret_key"
											],
											"variable": [
												{
													"id": "7107552e-d499-4b45-bdc2-ae58e38e1780",
													"key": "machine_id",
													"value": "string",
													"description": "The ID of the machine to retrieve the secret key for"
												}
											]
										},
										"description": "Returns the secret key for a machine."
									},
									"response": [
										{
											"id": "781399-359b453e-eca5-4579-a847-e71061a23928",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/secret_key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"secret_key"
													],
													"variable": [
														{
															"key": "machine_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"machine_secret_key\",\n  \"secret\": \"string\"\n}"
										},
										{
											"id": "781399-f8c1192d-3f56-4715-8803-cee7b9423346",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/secret_key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"secret_key"
													],
													"variable": [
														{
															"key": "machine_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-0073a849-0e65-4031-838f-222739786f47",
											"name": "Authentication invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/secret_key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"secret_key"
													],
													"variable": [
														{
															"key": "machine_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-07b02749-307e-4e99-9168-b1cee969a0d2",
											"name": "Authorization invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/secret_key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"secret_key"
													],
													"variable": [
														{
															"key": "machine_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-02e1bd97-3c27-4b9f-acd1-66cf95e74581",
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/secret_key",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"secret_key"
													],
													"variable": [
														{
															"key": "machine_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-307ed01e-558d-4a12-a365-45a32da51c10"
						},
						{
							"name": "scopes",
							"item": [
								{
									"name": "{other_machine_id}",
									"item": [
										{
											"name": "Delete a machine scope",
											"id": "781399-816f3577-8176-49ab-bbc1-15047ccb02d9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/scopes/:other_machine_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"scopes",
														":other_machine_id"
													],
													"variable": [
														{
															"id": "5f1cf553-ad4f-4f22-b1e5-b36d9a193368",
															"key": "machine_id",
															"value": "string",
															"description": "The ID of the machine that has access to another machine"
														},
														{
															"id": "0e5d4449-10ab-4b7f-845e-959dc63fa30c",
															"key": "other_machine_id",
															"value": "string",
															"description": "The ID of the machine that is being accessed"
														}
													]
												},
												"description": "Deletes a machine scope, removing access from one machine to another."
											},
											"response": [
												{
													"id": "781399-ac391f99-7736-4e41-ac65-0d18c86cb4e5",
													"name": "Machine scope deleted successfully for a machine",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/machines/:machine_id/scopes/:other_machine_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"machines",
																":machine_id",
																"scopes",
																":other_machine_id"
															],
															"variable": [
																{
																	"key": "machine_id"
																},
																{
																	"key": "other_machine_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"machine_scope\",\n  \"from_machine_id\": \"string\",\n  \"to_machine_id\": \"string\",\n  \"deleted\": true\n}"
												},
												{
													"id": "781399-792a7673-f635-4578-a018-599ee2b8e6ec",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/machines/:machine_id/scopes/:other_machine_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"machines",
																":machine_id",
																"scopes",
																":other_machine_id"
															],
															"variable": [
																{
																	"key": "machine_id"
																},
																{
																	"key": "other_machine_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-907996c5-fc3c-4706-a64f-83a3171c28bb",
													"name": "Authentication invalid",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/machines/:machine_id/scopes/:other_machine_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"machines",
																":machine_id",
																"scopes",
																":other_machine_id"
															],
															"variable": [
																{
																	"key": "machine_id"
																},
																{
																	"key": "other_machine_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-0215d32e-dad6-4a82-a81b-ae9bb00de983",
													"name": "Authorization invalid",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/machines/:machine_id/scopes/:other_machine_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"machines",
																":machine_id",
																"scopes",
																":other_machine_id"
															],
															"variable": [
																{
																	"key": "machine_id"
																},
																{
																	"key": "other_machine_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-f59b1dc7-7b09-44f8-8ac2-95d4ba155d3d",
													"name": "Resource not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/machines/:machine_id/scopes/:other_machine_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"machines",
																":machine_id",
																"scopes",
																":other_machine_id"
															],
															"variable": [
																{
																	"key": "machine_id"
																},
																{
																	"key": "other_machine_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-44470911-55af-414b-8892-bb8379af4d0d",
													"name": "Invalid request parameters",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/machines/:machine_id/scopes/:other_machine_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"machines",
																":machine_id",
																"scopes",
																":other_machine_id"
															],
															"variable": [
																{
																	"key": "machine_id"
																},
																{
																	"key": "other_machine_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-78e23561-7ae0-4b1a-8b5e-7f1fed45b066"
								},
								{
									"name": "Create a machine scope",
									"id": "781399-93367a14-dcf8-42c8-bd86-f1263cde7bdb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"to_machine_id\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id/scopes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id",
												"scopes"
											],
											"variable": [
												{
													"id": "9f047249-171b-436f-810e-4f7c986011ea",
													"key": "machine_id",
													"value": "string",
													"description": "The ID of the machine that will have access to another machine"
												}
											]
										},
										"description": "Creates a new machine scope, allowing the specified machine to access another machine.\nMaximum of 25 scopes per machine."
									},
									"response": [
										{
											"id": "781399-533d62d4-1cbc-4ab7-a205-c25d57fa5419",
											"name": "Machine scope created successfully for a machine",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"to_machine_id\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/scopes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"scopes"
													],
													"variable": [
														{
															"key": "machine_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"machine_scope\",\n  \"from_machine_id\": \"string\",\n  \"to_machine_id\": \"string\",\n  \"created_at\": 1025\n}"
										},
										{
											"id": "781399-c9c5c865-6f0f-4933-bf80-66ec0719f201",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"to_machine_id\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/scopes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"scopes"
													],
													"variable": [
														{
															"key": "machine_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-e04e8b61-2800-4600-a9e7-ea9201dbadc9",
											"name": "Authentication invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"to_machine_id\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/scopes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"scopes"
													],
													"variable": [
														{
															"key": "machine_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-5070e912-1f12-4db9-a1aa-9c262ae32450",
											"name": "Authorization invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"to_machine_id\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/scopes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"scopes"
													],
													"variable": [
														{
															"key": "machine_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-5c5ebe58-31e6-4b99-a106-cc47368cbfba",
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"to_machine_id\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/scopes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"scopes"
													],
													"variable": [
														{
															"key": "machine_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-541c01a3-2e32-41b9-94d6-66e30eb68256",
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"to_machine_id\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/scopes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"scopes"
													],
													"variable": [
														{
															"key": "machine_id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-ff444089-b0c0-4984-9e0b-df85498ed47d",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"to_machine_id\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/machines/:machine_id/scopes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"machines",
														":machine_id",
														"scopes"
													],
													"variable": [
														{
															"key": "machine_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-5926b250-0952-4e34-8cd0-9e7e77a2c5c4"
						},
						{
							"name": "Retrieve a machine",
							"id": "781399-930b8509-af22-4629-b59d-20415b31694e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/machines/:machine_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines",
										":machine_id"
									],
									"variable": [
										{
											"id": "92f59a24-f503-4d7a-90d4-9c400248f426",
											"key": "machine_id",
											"value": "string",
											"description": "The ID of the machine to retrieve"
										}
									]
								},
								"description": "Returns the details of a machine."
							},
							"response": [
								{
									"id": "781399-f286deb2-6467-4c24-b0dc-5fe853fc0258",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"machine\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"instance_id\": \"string\",\n  \"created_at\": 4924,\n  \"updated_at\": 5680,\n  \"scoped_machines\": [\n    {\n      \"object\": \"machine\",\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"instance_id\": \"string\",\n      \"created_at\": 3279,\n      \"updated_at\": 1063,\n      \"default_token_ttl\": 3600\n    },\n    {\n      \"object\": \"machine\",\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"instance_id\": \"string\",\n      \"created_at\": 8344,\n      \"updated_at\": 7654,\n      \"default_token_ttl\": 3600\n    }\n  ],\n  \"default_token_ttl\": 3600\n}"
								},
								{
									"id": "781399-4bd28719-a9be-47b3-9bc5-3abecf46bc3b",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-f9c31ce1-9855-4440-bd11-cfbfb06b358a",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-88c98083-f922-4ebf-8003-e3460f6e3d67",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-1c858f0d-84a7-4cc7-b7db-80cdf4292a87",
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-427c59b7-9741-4091-985c-64a37816dbf5",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update a machine",
							"id": "781399-522f3914-9b9c-43d1-9b36-23c5f542958d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"default_token_ttl\": 216849552\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/machines/:machine_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines",
										":machine_id"
									],
									"variable": [
										{
											"id": "4e14fbde-c464-4b0a-b97a-c40913e95e98",
											"key": "machine_id",
											"value": "string",
											"description": "The ID of the machine to update"
										}
									]
								},
								"description": "Updates an existing machine.\nOnly the provided fields will be updated."
							},
							"response": [
								{
									"id": "781399-568428f7-0167-45cf-8ca0-c0d3a97dc9ba",
									"name": "Success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"default_token_ttl\": 216849552\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"machine\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"instance_id\": \"string\",\n  \"created_at\": 4924,\n  \"updated_at\": 5680,\n  \"scoped_machines\": [\n    {\n      \"object\": \"machine\",\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"instance_id\": \"string\",\n      \"created_at\": 3279,\n      \"updated_at\": 1063,\n      \"default_token_ttl\": 3600\n    },\n    {\n      \"object\": \"machine\",\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"instance_id\": \"string\",\n      \"created_at\": 8344,\n      \"updated_at\": 7654,\n      \"default_token_ttl\": 3600\n    }\n  ],\n  \"default_token_ttl\": 3600\n}"
								},
								{
									"id": "781399-aef7f90e-d793-4bca-b91f-152a8fb7d747",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"default_token_ttl\": 216849552\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-86866608-9736-4b83-8fe4-686b7dbd8624",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"default_token_ttl\": 216849552\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-cad21307-0db4-4361-8997-0419dd884d56",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"default_token_ttl\": 216849552\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-c36daaa0-4cfd-4b28-92ff-4b0f0d9d6f00",
									"name": "Resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"default_token_ttl\": 216849552\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-df3f518e-f873-4c77-8b79-05cd1340ac5f",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"default_token_ttl\": 216849552\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete a machine",
							"id": "781399-e2b5ac52-9884-44d8-bb4c-af94762e8cfc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/machines/:machine_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines",
										":machine_id"
									],
									"variable": [
										{
											"id": "f0c452f1-49ad-4fdc-ae15-980e6e5c1199",
											"key": "machine_id",
											"value": "string",
											"description": "The ID of the machine to delete"
										}
									]
								},
								"description": "Deletes a machine."
							},
							"response": [
								{
									"id": "781399-8eec6b7f-3614-4d36-ba62-04cd08e0c80d",
									"name": "Success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"machine\",\n  \"id\": \"string\",\n  \"deleted\": true\n}"
								},
								{
									"id": "781399-eefe1316-54e4-4a11-a5c0-f13bc6cd77d9",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-95182b35-e5d8-4a29-a105-0a8d209eb0ab",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-536fafdc-2ccf-4da7-9589-7acd257acc14",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-2810c1f0-99c2-40dc-bbb7-176524220694",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-34aedd5a-acaf-4e66-b68a-a3478bba5e12",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/machines/:machine_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"machines",
												":machine_id"
											],
											"variable": [
												{
													"key": "machine_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-aee0797f-edb2-457e-9717-d6e1bf9fa0aa"
				},
				{
					"name": "Get a list of machines for an instance",
					"id": "781399-194307ba-82b1-428e-98a7-43b1c26cd35d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/machines?limit=10&offset=0&query=string&order_by=-created_at",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"machines"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								},
								{
									"key": "query",
									"value": "string",
									"description": "Returns machines with ID or name that match the given query. Uses exact match for machine ID and partial match for name."
								},
								{
									"key": "order_by",
									"value": "-created_at",
									"description": "Allows to return machines in a particular order.\nYou can order the returned machines by their `name` or `created_at`.\nTo specify the direction, use the `+` or `-` symbols prepended to the property to order by.\nFor example, to return machines in descending order by `created_at`, use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`."
								}
							]
						},
						"description": "This request returns the list of machines for an instance. The machines are\nordered by descending creation date (i.e. most recent machines will be\nreturned first)"
					},
					"response": [
						{
							"id": "781399-a1e4e370-b566-4d61-be0c-29d44e2e7c9f",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/machines?limit=10&offset=0&query=string&order_by=-created_at",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Returns machines with ID or name that match the given query. Uses exact match for machine ID and partial match for name.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Allows to return machines in a particular order.\nYou can order the returned machines by their `name` or `created_at`.\nTo specify the direction, use the `+` or `-` symbols prepended to the property to order by.\nFor example, to return machines in descending order by `created_at`, use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"created_at\": 4291,\n      \"id\": \"string\",\n      \"instance_id\": \"string\",\n      \"name\": \"string\",\n      \"object\": \"machine\",\n      \"scoped_machines\": [\n        {\n          \"object\": \"machine\",\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"instance_id\": \"string\",\n          \"created_at\": 7692,\n          \"updated_at\": 6406,\n          \"default_token_ttl\": 3600\n        },\n        {\n          \"object\": \"machine\",\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"instance_id\": \"string\",\n          \"created_at\": 6175,\n          \"updated_at\": 6728,\n          \"default_token_ttl\": 3600\n        }\n      ],\n      \"updated_at\": 8660,\n      \"default_token_ttl\": 3600\n    },\n    {\n      \"created_at\": 1905,\n      \"id\": \"string\",\n      \"instance_id\": \"string\",\n      \"name\": \"string\",\n      \"object\": \"machine\",\n      \"scoped_machines\": [\n        {\n          \"object\": \"machine\",\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"instance_id\": \"string\",\n          \"created_at\": 8204,\n          \"updated_at\": 3228,\n          \"default_token_ttl\": 3600\n        },\n        {\n          \"object\": \"machine\",\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"instance_id\": \"string\",\n          \"created_at\": 701,\n          \"updated_at\": 5360,\n          \"default_token_ttl\": 3600\n        }\n      ],\n      \"updated_at\": 489,\n      \"default_token_ttl\": 3600\n    }\n  ],\n  \"total_count\": 2750\n}"
						},
						{
							"id": "781399-c8f8cbb6-e8e3-4062-b9d1-10111d76fb8c",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/machines?limit=10&offset=0&query=string&order_by=-created_at",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Returns machines with ID or name that match the given query. Uses exact match for machine ID and partial match for name.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Allows to return machines in a particular order.\nYou can order the returned machines by their `name` or `created_at`.\nTo specify the direction, use the `+` or `-` symbols prepended to the property to order by.\nFor example, to return machines in descending order by `created_at`, use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-1bb8df77-c110-4359-b30b-edfd8f22b3ab",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/machines?limit=10&offset=0&query=string&order_by=-created_at",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Returns machines with ID or name that match the given query. Uses exact match for machine ID and partial match for name.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Allows to return machines in a particular order.\nYou can order the returned machines by their `name` or `created_at`.\nTo specify the direction, use the `+` or `-` symbols prepended to the property to order by.\nFor example, to return machines in descending order by `created_at`, use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-e0569ce6-9604-4b35-9269-17a15aa6f2a7",
							"name": "Authorization invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/machines?limit=10&offset=0&query=string&order_by=-created_at",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Returns machines with ID or name that match the given query. Uses exact match for machine ID and partial match for name.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Allows to return machines in a particular order.\nYou can order the returned machines by their `name` or `created_at`.\nTo specify the direction, use the `+` or `-` symbols prepended to the property to order by.\nFor example, to return machines in descending order by `created_at`, use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-55e6ab1b-b583-4a33-b842-ee5b4b68178f",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/machines?limit=10&offset=0&query=string&order_by=-created_at",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Returns machines with ID or name that match the given query. Uses exact match for machine ID and partial match for name.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Allows to return machines in a particular order.\nYou can order the returned machines by their `name` or `created_at`.\nTo specify the direction, use the `+` or `-` symbols prepended to the property to order by.\nFor example, to return machines in descending order by `created_at`, use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				},
				{
					"name": "Create a machine",
					"id": "781399-c3674aa4-0561-40f2-9d77-4109e5050013",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"scoped_machines\": [\n    \"string\",\n    \"string\"\n  ],\n  \"default_token_ttl\": 3600\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/machines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"machines"
							]
						},
						"description": "Creates a new machine."
					},
					"response": [
						{
							"id": "781399-c3b55e2c-3141-4ffc-a2c4-453ea5934d4a",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"scoped_machines\": [\n    \"string\",\n    \"string\"\n  ],\n  \"default_token_ttl\": 3600\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/machines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"created_at\": 4523,\n  \"id\": \"string\",\n  \"instance_id\": \"string\",\n  \"name\": \"string\",\n  \"object\": \"machine\",\n  \"scoped_machines\": [\n    {\n      \"object\": \"machine\",\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"instance_id\": \"string\",\n      \"created_at\": 7473,\n      \"updated_at\": 5535,\n      \"default_token_ttl\": 3600\n    },\n    {\n      \"object\": \"machine\",\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"instance_id\": \"string\",\n      \"created_at\": 2977,\n      \"updated_at\": 8292,\n      \"default_token_ttl\": 3600\n    }\n  ],\n  \"secret_key\": \"string\",\n  \"updated_at\": 267,\n  \"default_token_ttl\": 3600\n}"
						},
						{
							"id": "781399-fa9ae21c-32a5-4bdf-bf6f-f79bad49b602",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"scoped_machines\": [\n    \"string\",\n    \"string\"\n  ],\n  \"default_token_ttl\": 3600\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/machines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-3ddfae73-76a0-4181-993f-1fcae17e6d3f",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"scoped_machines\": [\n    \"string\",\n    \"string\"\n  ],\n  \"default_token_ttl\": 3600\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/machines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-e87cafcc-d5db-4ae7-a352-db6c1074c66f",
							"name": "Authorization invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"scoped_machines\": [\n    \"string\",\n    \"string\"\n  ],\n  \"default_token_ttl\": 3600\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/machines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-44845b0e-554c-4b5b-a485-a066fca53138",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"scoped_machines\": [\n    \"string\",\n    \"string\"\n  ],\n  \"default_token_ttl\": 3600\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/machines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"machines"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-f5105f3b-7b67-4244-8fc1-c7cc3518426c"
		},
		{
			"name": "organizations",
			"item": [
				{
					"name": "{organization_id}",
					"item": [
						{
							"name": "metadata",
							"item": [
								{
									"name": "Merge and update metadata for an organization",
									"id": "781399-8595dcac-e0f8-4c6e-8648-97979e80f9d1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 3232,\n    \"key_1\": 6302\n  },\n  \"private_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 8522\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/metadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"metadata"
											],
											"variable": [
												{
													"id": "c50840a2-9065-481f-b9a5-a02a60c4b26b",
													"key": "organization_id",
													"value": "string",
													"description": "The ID of the organization for which metadata will be merged or updated"
												}
											]
										},
										"description": "Update organization metadata attributes by merging existing values with the provided parameters.\nMetadata values will be updated via a deep merge.\nDeep meaning that any nested JSON objects will be merged as well.\nYou can remove metadata keys at any level by setting their value to `null`."
									},
									"response": [
										{
											"id": "781399-d0548cf1-a402-4bde-ae01-d7cf49fc3611",
											"name": "An organization",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 3232,\n    \"key_1\": 6302\n  },\n  \"private_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 8522\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"metadata"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"organization\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"has_image\": true,\n  \"max_allowed_memberships\": 1790,\n  \"admin_delete_enabled\": false,\n  \"public_metadata\": {\n    \"key_0\": false\n  },\n  \"created_at\": 6202,\n  \"updated_at\": 6863,\n  \"image_url\": \"string\",\n  \"members_count\": 1167,\n  \"missing_member_with_elevated_permissions\": false,\n  \"pending_invitations_count\": 5670,\n  \"private_metadata\": {\n    \"key_0\": true\n  },\n  \"created_by\": \"string\"\n}"
										},
										{
											"id": "781399-a4d47f3d-0dcb-400d-b6ad-d2a4b86a69f6",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 3232,\n    \"key_1\": 6302\n  },\n  \"private_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 8522\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"metadata"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-d1fc18f2-ad7a-425c-9e94-d025c0cce532",
											"name": "Authentication invalid",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 3232,\n    \"key_1\": 6302\n  },\n  \"private_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 8522\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"metadata"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-c43f2031-18b6-4d96-8ba9-95a41c1aa561",
											"name": "Resource not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 3232,\n    \"key_1\": 6302\n  },\n  \"private_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 8522\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"metadata"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-66687e3a-3cfc-4b69-ab5f-fd9b365a2212",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 3232,\n    \"key_1\": 6302\n  },\n  \"private_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 8522\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"metadata"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-024683eb-f729-40b7-8e96-99545f5c15c9"
						},
						{
							"name": "logo",
							"item": [
								{
									"name": "Upload a logo for the organization",
									"id": "781399-6cabc65a-a45d-4a88-aef4-e26eaeef98ce",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"value": null
												},
												{
													"description": "The ID of the user that will be credited with the image upload.",
													"key": "uploader_user_id",
													"value": "string",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/logo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"logo"
											],
											"variable": [
												{
													"id": "4ac42540-df71-40e7-9f5d-021679499328",
													"key": "organization_id",
													"value": "string",
													"description": "The ID of the organization for which to upload a logo"
												}
											]
										},
										"description": "Set or replace an organization's logo, by uploading an image file.\nThis endpoint uses the `multipart/form-data` request content type and accepts a file of image type.\nThe file size cannot exceed 10MB.\nOnly the following file content types are supported: `image/jpeg`, `image/png`, `image/gif`, `image/webp`."
									},
									"response": [
										{
											"id": "781399-e3d98bd7-efcb-40da-a3a5-345c4101318a",
											"name": "An organization with a logo URL.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": []
														},
														{
															"description": "The ID of the user that will be credited with the image upload.",
															"key": "uploader_user_id",
															"value": "string",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/logo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"logo"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"organization\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"has_image\": true,\n  \"max_allowed_memberships\": 1779,\n  \"admin_delete_enabled\": false,\n  \"public_metadata\": {\n    \"key_0\": false,\n    \"key_1\": 2930,\n    \"key_2\": true\n  },\n  \"created_at\": 8091,\n  \"updated_at\": 9410,\n  \"image_url\": \"string\",\n  \"members_count\": 9560,\n  \"missing_member_with_elevated_permissions\": false,\n  \"pending_invitations_count\": 2224,\n  \"private_metadata\": {\n    \"key_0\": true,\n    \"key_1\": false,\n    \"key_2\": true\n  },\n  \"created_by\": \"string\",\n  \"logo_url\": \"string\"\n}"
										},
										{
											"id": "781399-2f6f596c-8e00-46e8-bac0-e61b2e74cda0",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": []
														},
														{
															"description": "The ID of the user that will be credited with the image upload.",
															"key": "uploader_user_id",
															"value": "string",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/logo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"logo"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-c4d80baa-61c4-4e97-a5f6-ee8446ca056d",
											"name": "Authorization invalid",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": []
														},
														{
															"description": "The ID of the user that will be credited with the image upload.",
															"key": "uploader_user_id",
															"value": "string",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/logo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"logo"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-b7200459-3985-4a57-be10-723da2a0d38a",
											"name": "Resource not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": []
														},
														{
															"description": "The ID of the user that will be credited with the image upload.",
															"key": "uploader_user_id",
															"value": "string",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/logo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"logo"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-24f5e46e-9cbc-4217-a3a4-b79562cb06fc",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"type": "file",
															"src": []
														},
														{
															"description": "The ID of the user that will be credited with the image upload.",
															"key": "uploader_user_id",
															"value": "string",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/logo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"logo"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Request Entity Too Large",
											"code": 413,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								},
								{
									"name": "Delete the organization's logo.",
									"id": "781399-4fba866c-86ca-4fdc-bd35-251ea58951ed",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/logo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"logo"
											],
											"variable": [
												{
													"id": "478bbed0-e927-46c3-b253-1e6f77fc13ff",
													"key": "organization_id",
													"value": "string",
													"description": "The ID of the organization for which the logo will be deleted."
												}
											]
										},
										"description": "Delete the organization's logo."
									},
									"response": [
										{
											"id": "781399-91ce4854-8409-404c-b01c-b9191006565f",
											"name": "An organization",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/logo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"logo"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"organization\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"has_image\": true,\n  \"max_allowed_memberships\": 1790,\n  \"admin_delete_enabled\": false,\n  \"public_metadata\": {\n    \"key_0\": false\n  },\n  \"created_at\": 6202,\n  \"updated_at\": 6863,\n  \"image_url\": \"string\",\n  \"members_count\": 1167,\n  \"missing_member_with_elevated_permissions\": false,\n  \"pending_invitations_count\": 5670,\n  \"private_metadata\": {\n    \"key_0\": true\n  },\n  \"created_by\": \"string\"\n}"
										},
										{
											"id": "781399-20852688-70e7-43b8-b065-29c4b4d43f32",
											"name": "Resource not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/logo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"logo"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-e48ed461-0826-40ec-b239-d386104cfb4f"
						},
						{
							"name": "billing",
							"item": [
								{
									"name": "subscription",
									"item": [
										{
											"name": "Retrieve an organization's billing subscription",
											"id": "781399-7eac961a-6ad9-4ff9-bc52-e95a1660a2c9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/billing/subscription",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"billing",
														"subscription"
													],
													"variable": [
														{
															"id": "8f11651b-a7ba-4182-94cb-8bdcea68a08b",
															"key": "organization_id",
															"value": "string",
															"description": "The ID of the organization whose subscription to retrieve"
														}
													]
												},
												"description": "Retrieves the billing subscription for the specified organization.\nThis includes subscription details, active plans, billing information, and payment status.\nThe subscription contains subscription items which represent the individual plans the organization is subscribed to."
											},
											"response": [
												{
													"id": "781399-a8312e09-860b-4e2a-be0a-650ee5795b6c",
													"name": "A commerce subscription.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"commerce_subscription\",\n  \"id\": \"string\",\n  \"instance_id\": \"string\",\n  \"status\": \"canceled\",\n  \"payer_id\": \"string\",\n  \"created_at\": 7053,\n  \"updated_at\": 679,\n  \"subscription_items\": [\n    {\n      \"object\": \"commerce_subscription_item\",\n      \"id\": \"string\",\n      \"instance_id\": \"string\",\n      \"status\": \"past_due\",\n      \"plan_id\": \"string\",\n      \"plan\": {\n        \"object\": \"commerce_plan\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"fee\": {\n          \"amount\": 3790,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"annual_monthly_fee\": {\n          \"amount\": 7481,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"annual_fee\": {\n          \"amount\": 3485,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"amount\": 2906,\n        \"amount_formatted\": \"string\",\n        \"annual_monthly_amount\": 532,\n        \"annual_monthly_amount_formatted\": \"string\",\n        \"annual_amount\": 300,\n        \"annual_amount_formatted\": \"string\",\n        \"currency_symbol\": \"string\",\n        \"currency\": \"string\",\n        \"description\": \"string\",\n        \"product_id\": \"string\",\n        \"is_default\": false,\n        \"is_recurring\": true,\n        \"publicly_visible\": false,\n        \"has_base_fee\": true,\n        \"payer_type\": [\n          \"string\",\n          \"string\"\n        ],\n        \"for_payer_type\": \"string\",\n        \"slug\": \"string\",\n        \"avatar_url\": \"string\",\n        \"features\": [\n          {\n            \"object\": \"feature\",\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"slug\": \"string\",\n            \"avatar_url\": \"string\"\n          },\n          {\n            \"object\": \"feature\",\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"slug\": \"string\",\n            \"avatar_url\": \"string\"\n          }\n        ],\n        \"period\": \"string\",\n        \"interval\": 7030,\n        \"free_trial_enabled\": false,\n        \"free_trial_days\": 7568\n      },\n      \"plan_period\": \"month\",\n      \"payment_source_id\": \"string\",\n      \"payer_id\": \"string\",\n      \"is_free_trial\": true,\n      \"proration_date\": \"string\",\n      \"created_at\": 9684,\n      \"updated_at\": 784,\n      \"credit\": {\n        \"amount\": {\n          \"amount\": 4867,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"cycle_remaining_percent\": 409.0254185810294\n      },\n      \"payment_source\": {\n        \"object\": \"commerce_source\",\n        \"id\": \"string\",\n        \"payer_id\": \"string\",\n        \"payment_method\": \"apple_pay\",\n        \"gateway\": \"string\",\n        \"gateway_external_id\": \"string\",\n        \"last4\": \"string\",\n        \"status\": \"active\",\n        \"wallet_type\": \"string\",\n        \"card_type\": \"string\",\n        \"created_at\": 2918,\n        \"updated_at\": 2318,\n        \"is_default\": false,\n        \"gateway_external_account_id\": \"string\",\n        \"expiry_year\": 5815,\n        \"expiry_month\": 4518,\n        \"is_removable\": true\n      },\n      \"lifetime_paid\": {\n        \"amount\": 4813,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"amount\": {\n        \"amount\": 5944,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"next_invoice\": {\n        \"amount\": {\n          \"amount\": 7312,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"date\": 4520\n      },\n      \"next_payment\": {\n        \"amount\": {\n          \"amount\": 3333,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"date\": 423\n      },\n      \"payer\": {\n        \"object\": \"commerce_payer\",\n        \"id\": \"string\",\n        \"instance_id\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"email\": \"string\",\n        \"image_url\": \"string\",\n        \"created_at\": 7219,\n        \"updated_at\": 6543,\n        \"user_id\": \"string\",\n        \"organization_id\": \"string\",\n        \"organization_name\": \"string\"\n      },\n      \"period_start\": 4225,\n      \"period_end\": 8324,\n      \"canceled_at\": 1662,\n      \"past_due_at\": 5379,\n      \"ended_at\": 5777\n    },\n    {\n      \"object\": \"commerce_subscription_item\",\n      \"id\": \"string\",\n      \"instance_id\": \"string\",\n      \"status\": \"active\",\n      \"plan_id\": \"string\",\n      \"plan\": {\n        \"object\": \"commerce_plan\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"fee\": {\n          \"amount\": 4397,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"annual_monthly_fee\": {\n          \"amount\": 261,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"annual_fee\": {\n          \"amount\": 9883,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"amount\": 249,\n        \"amount_formatted\": \"string\",\n        \"annual_monthly_amount\": 9049,\n        \"annual_monthly_amount_formatted\": \"string\",\n        \"annual_amount\": 5211,\n        \"annual_amount_formatted\": \"string\",\n        \"currency_symbol\": \"string\",\n        \"currency\": \"string\",\n        \"description\": \"string\",\n        \"product_id\": \"string\",\n        \"is_default\": true,\n        \"is_recurring\": false,\n        \"publicly_visible\": true,\n        \"has_base_fee\": false,\n        \"payer_type\": [\n          \"string\",\n          \"string\"\n        ],\n        \"for_payer_type\": \"string\",\n        \"slug\": \"string\",\n        \"avatar_url\": \"string\",\n        \"features\": [\n          {\n            \"object\": \"feature\",\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"slug\": \"string\",\n            \"avatar_url\": \"string\"\n          },\n          {\n            \"object\": \"feature\",\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"slug\": \"string\",\n            \"avatar_url\": \"string\"\n          }\n        ],\n        \"period\": \"string\",\n        \"interval\": 7949,\n        \"free_trial_enabled\": true,\n        \"free_trial_days\": 1708\n      },\n      \"plan_period\": \"month\",\n      \"payment_source_id\": \"string\",\n      \"payer_id\": \"string\",\n      \"is_free_trial\": false,\n      \"proration_date\": \"string\",\n      \"created_at\": 7982,\n      \"updated_at\": 2513,\n      \"credit\": {\n        \"amount\": {\n          \"amount\": 1029,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"cycle_remaining_percent\": 8704.958842878596\n      },\n      \"payment_source\": {\n        \"object\": \"commerce_source\",\n        \"id\": \"string\",\n        \"payer_id\": \"string\",\n        \"payment_method\": \"google_pay\",\n        \"gateway\": \"string\",\n        \"gateway_external_id\": \"string\",\n        \"last4\": \"string\",\n        \"status\": \"disconnected\",\n        \"wallet_type\": \"string\",\n        \"card_type\": \"string\",\n        \"created_at\": 7292,\n        \"updated_at\": 4175,\n        \"is_default\": true,\n        \"gateway_external_account_id\": \"string\",\n        \"expiry_year\": 7948,\n        \"expiry_month\": 5231,\n        \"is_removable\": true\n      },\n      \"lifetime_paid\": {\n        \"amount\": 3326,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"amount\": {\n        \"amount\": 875,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"next_invoice\": {\n        \"amount\": {\n          \"amount\": 6768,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"date\": 2633\n      },\n      \"next_payment\": {\n        \"amount\": {\n          \"amount\": 5230,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"date\": 4288\n      },\n      \"payer\": {\n        \"object\": \"commerce_payer\",\n        \"id\": \"string\",\n        \"instance_id\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"email\": \"string\",\n        \"image_url\": \"string\",\n        \"created_at\": 8423,\n        \"updated_at\": 7265,\n        \"user_id\": \"string\",\n        \"organization_id\": \"string\",\n        \"organization_name\": \"string\"\n      },\n      \"period_start\": 9280,\n      \"period_end\": 1852,\n      \"canceled_at\": 6371,\n      \"past_due_at\": 1702,\n      \"ended_at\": 7472\n    }\n  ],\n  \"active_at\": 7518,\n  \"past_due_at\": 9603,\n  \"next_payment\": {\n    \"time\": 6438,\n    \"date\": 6209,\n    \"amount\": {\n      \"amount\": 2396,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    }\n  },\n  \"eligible_for_free_trial\": false\n}"
												},
												{
													"id": "781399-c8dfbe0f-f987-46f2-a184-bfa33c7191ea",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-4c58a47e-718f-4e30-aa95-e67a47890d37",
													"name": "Authentication invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-3cd3bedd-6b7a-4800-927a-f8d7b0ba0cb0",
													"name": "Authorization invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-624ecdb1-56ee-4f8c-9738-d15c8b6bc60f",
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-2785b88b-ba4a-4965-aa12-adca2b978102",
													"name": "Invalid request parameters",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-0c70af3b-c4f1-4d6e-94b7-a35037a5161e",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/billing/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"billing",
																"subscription"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-4a8bc72f-9cc1-4d28-bbb1-bd2f08d0211c"
								}
							],
							"id": "781399-64c9572a-8d6e-4e70-ac47-c4efc6366eb1"
						},
						{
							"name": "invitations",
							"item": [
								{
									"name": "bulk",
									"item": [
										{
											"name": "Bulk create and send organization invitations",
											"id": "781399-bdae7058-cb7e-4637-9619-6a7cc8f30a37",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"email_address\": \"string\",\n    \"role\": \"string\",\n    \"inviter_user_id\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": true\n    },\n    \"private_metadata\": {\n      \"key_0\": \"string\"\n    },\n    \"redirect_url\": \"string\",\n    \"expires_in_days\": 105\n  },\n  {\n    \"email_address\": \"string\",\n    \"role\": \"string\",\n    \"inviter_user_id\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": 9948,\n      \"key_1\": 8874\n    },\n    \"private_metadata\": {\n      \"key_0\": 4070.425754219139,\n      \"key_1\": true\n    },\n    \"redirect_url\": \"string\",\n    \"expires_in_days\": 147\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations/bulk",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations",
														"bulk"
													],
													"variable": [
														{
															"id": "17b5a571-67cb-433c-8ff4-76099ad83891",
															"key": "organization_id",
															"value": "string",
															"description": "The organization ID."
														}
													]
												},
												"description": "Creates new organization invitations in bulk and sends out emails to the provided email addresses with a link to accept the invitation and join the organization.\nYou can specify a different `role` for each invited organization member.\nNew organization invitations get a \"pending\" status until they are revoked by an organization administrator or accepted by the invitee.\nThe request body supports passing an optional `redirect_url` parameter for each invitation.\nWhen the invited user clicks the link to accept the invitation, they will be redirected to the provided URL.\nUse this parameter to implement a custom invitation acceptance flow.\nYou can specify the ID of the user that will send the invitation with the `inviter_user_id` parameter. Each invitation\ncan have a different inviter user.\nInviter users must be members with administrator privileges in the organization.\nOnly \"admin\" members can create organization invitations.\nYou can optionally provide public and private metadata for each organization invitation. The public metadata are visible\nby both the Frontend and the Backend, whereas the private metadata are only visible by the Backend.\nWhen the organization invitation is accepted, the metadata will be transferred to the newly created organization membership."
											},
											"response": [
												{
													"id": "781399-b0bf5a26-9b8b-4444-a12e-37d6af71cd67",
													"name": "A list of organization invitations",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"email_address\": \"string\",\n    \"role\": \"string\",\n    \"inviter_user_id\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": true\n    },\n    \"private_metadata\": {\n      \"key_0\": \"string\"\n    },\n    \"redirect_url\": \"string\",\n    \"expires_in_days\": 105\n  },\n  {\n    \"email_address\": \"string\",\n    \"role\": \"string\",\n    \"inviter_user_id\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": 9948,\n      \"key_1\": 8874\n    },\n    \"private_metadata\": {\n      \"key_0\": 4070.425754219139,\n      \"key_1\": true\n    },\n    \"redirect_url\": \"string\",\n    \"expires_in_days\": 147\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/bulk",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																"bulk"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"data\": [\n    {\n      \"object\": \"organization_invitation\",\n      \"id\": \"string\",\n      \"email_address\": \"string\",\n      \"role\": \"string\",\n      \"role_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 1106,\n        \"key_1\": \"string\",\n        \"key_2\": false\n      },\n      \"url\": \"string\",\n      \"expires_at\": 7058,\n      \"created_at\": 6350,\n      \"updated_at\": 8307,\n      \"organization_id\": \"string\",\n      \"status\": \"string\",\n      \"private_metadata\": {\n        \"key_0\": \"string\"\n      }\n    },\n    {\n      \"object\": \"organization_invitation\",\n      \"id\": \"string\",\n      \"email_address\": \"string\",\n      \"role\": \"string\",\n      \"role_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 4367.87981218061,\n        \"key_1\": 4288.565286706455\n      },\n      \"url\": \"string\",\n      \"expires_at\": 744,\n      \"created_at\": 1994,\n      \"updated_at\": 2268,\n      \"organization_id\": \"string\",\n      \"status\": \"string\",\n      \"private_metadata\": {\n        \"key_0\": 7918.03981493954,\n        \"key_1\": 8973\n      }\n    }\n  ],\n  \"total_count\": 5844\n}"
												},
												{
													"id": "781399-0768d18e-69aa-4132-be95-0cd1fac41026",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"email_address\": \"string\",\n    \"role\": \"string\",\n    \"inviter_user_id\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": true\n    },\n    \"private_metadata\": {\n      \"key_0\": \"string\"\n    },\n    \"redirect_url\": \"string\",\n    \"expires_in_days\": 105\n  },\n  {\n    \"email_address\": \"string\",\n    \"role\": \"string\",\n    \"inviter_user_id\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": 9948,\n      \"key_1\": 8874\n    },\n    \"private_metadata\": {\n      \"key_0\": 4070.425754219139,\n      \"key_1\": true\n    },\n    \"redirect_url\": \"string\",\n    \"expires_in_days\": 147\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/bulk",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																"bulk"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-60939ceb-cfab-4aca-addf-6487885d6e85",
													"name": "Authorization invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"email_address\": \"string\",\n    \"role\": \"string\",\n    \"inviter_user_id\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": true\n    },\n    \"private_metadata\": {\n      \"key_0\": \"string\"\n    },\n    \"redirect_url\": \"string\",\n    \"expires_in_days\": 105\n  },\n  {\n    \"email_address\": \"string\",\n    \"role\": \"string\",\n    \"inviter_user_id\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": 9948,\n      \"key_1\": 8874\n    },\n    \"private_metadata\": {\n      \"key_0\": 4070.425754219139,\n      \"key_1\": true\n    },\n    \"redirect_url\": \"string\",\n    \"expires_in_days\": 147\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/bulk",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																"bulk"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-064777fd-b63b-48ef-8a3b-ae56cc01723b",
													"name": "Resource not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"email_address\": \"string\",\n    \"role\": \"string\",\n    \"inviter_user_id\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": true\n    },\n    \"private_metadata\": {\n      \"key_0\": \"string\"\n    },\n    \"redirect_url\": \"string\",\n    \"expires_in_days\": 105\n  },\n  {\n    \"email_address\": \"string\",\n    \"role\": \"string\",\n    \"inviter_user_id\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": 9948,\n      \"key_1\": 8874\n    },\n    \"private_metadata\": {\n      \"key_0\": 4070.425754219139,\n      \"key_1\": true\n    },\n    \"redirect_url\": \"string\",\n    \"expires_in_days\": 147\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/bulk",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																"bulk"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-cdd4a596-bb9b-40cc-95da-076ec0245a6e",
													"name": "Invalid request parameters",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"email_address\": \"string\",\n    \"role\": \"string\",\n    \"inviter_user_id\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": true\n    },\n    \"private_metadata\": {\n      \"key_0\": \"string\"\n    },\n    \"redirect_url\": \"string\",\n    \"expires_in_days\": 105\n  },\n  {\n    \"email_address\": \"string\",\n    \"role\": \"string\",\n    \"inviter_user_id\": \"string\",\n    \"public_metadata\": {\n      \"key_0\": 9948,\n      \"key_1\": 8874\n    },\n    \"private_metadata\": {\n      \"key_0\": 4070.425754219139,\n      \"key_1\": true\n    },\n    \"redirect_url\": \"string\",\n    \"expires_in_days\": 147\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/bulk",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																"bulk"
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-4cffd3ea-2542-4fcf-8410-4b9138f9c9d5"
								},
								{
									"name": "pending",
									"item": [
										{
											"name": "Get a list of pending organization invitations",
											"id": "781399-c5d2a608-f8e5-4118-983e-b3e0267d9544",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations/pending?limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations",
														"pending"
													],
													"query": [
														{
															"key": "limit",
															"value": "10",
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
														}
													],
													"variable": [
														{
															"id": "e4fead8a-917e-4a57-b39c-79138ae9aa4d",
															"key": "organization_id",
															"value": "string",
															"description": "The organization ID."
														}
													]
												},
												"description": "This request returns the list of organization invitations with \"pending\" status.\nThese are the organization invitations that can still be used to join the organization, but have not been accepted by the invited user yet.\nResults can be paginated using the optional `limit` and `offset` query parameters.\nThe organization invitations are ordered by descending creation date.\nMost recent invitations will be returned first.\nAny invitations created as a result of an Organization Domain are not included in the results."
											},
											"response": [
												{
													"id": "781399-5a37a6f4-1e6d-4ee1-a602-d198a03dd284",
													"name": "A list of organization invitations",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/pending?limit=10&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																"pending"
															],
															"query": [
																{
																	"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
																	"key": "limit",
																	"value": "10"
																},
																{
																	"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
																	"key": "offset",
																	"value": "0"
																}
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"data\": [\n    {\n      \"object\": \"organization_invitation\",\n      \"id\": \"string\",\n      \"email_address\": \"string\",\n      \"role\": \"string\",\n      \"role_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 1106,\n        \"key_1\": \"string\",\n        \"key_2\": false\n      },\n      \"url\": \"string\",\n      \"expires_at\": 7058,\n      \"created_at\": 6350,\n      \"updated_at\": 8307,\n      \"organization_id\": \"string\",\n      \"status\": \"string\",\n      \"private_metadata\": {\n        \"key_0\": \"string\"\n      }\n    },\n    {\n      \"object\": \"organization_invitation\",\n      \"id\": \"string\",\n      \"email_address\": \"string\",\n      \"role\": \"string\",\n      \"role_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 4367.87981218061,\n        \"key_1\": 4288.565286706455\n      },\n      \"url\": \"string\",\n      \"expires_at\": 744,\n      \"created_at\": 1994,\n      \"updated_at\": 2268,\n      \"organization_id\": \"string\",\n      \"status\": \"string\",\n      \"private_metadata\": {\n        \"key_0\": 7918.03981493954,\n        \"key_1\": 8973\n      }\n    }\n  ],\n  \"total_count\": 5844\n}"
												},
												{
													"id": "781399-1b1df589-c794-4dc1-9256-79499bb7c407",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/pending?limit=10&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																"pending"
															],
															"query": [
																{
																	"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
																	"key": "limit",
																	"value": "10"
																},
																{
																	"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
																	"key": "offset",
																	"value": "0"
																}
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-665d2ec8-f912-4bbc-b593-6697a111db90",
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/pending?limit=10&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																"pending"
															],
															"query": [
																{
																	"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
																	"key": "limit",
																	"value": "10"
																},
																{
																	"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
																	"key": "offset",
																	"value": "0"
																}
															],
															"variable": [
																{
																	"key": "organization_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-57b92f80-563b-495d-8043-5a6b53c0585b"
								},
								{
									"name": "{invitation_id}",
									"item": [
										{
											"name": "revoke",
											"item": [
												{
													"name": "Revoke a pending organization invitation",
													"id": "781399-22a98850-afb6-4054-85df-b76b4c33f447",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"requesting_user_id\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_id/revoke",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																":invitation_id",
																"revoke"
															],
															"variable": [
																{
																	"id": "0e2160b5-97ce-44b3-8c3b-cb91e87709cd",
																	"key": "organization_id",
																	"value": "string",
																	"description": "The organization ID."
																},
																{
																	"id": "313e3331-d399-46fb-a7d3-424e384027ed",
																	"key": "invitation_id",
																	"value": "string",
																	"description": "The organization invitation ID."
																}
															]
														},
														"description": "Use this request to revoke a previously issued organization invitation.\nRevoking an organization invitation makes it invalid; the invited user will no longer be able to join the organization with the revoked invitation.\nOnly organization invitations with \"pending\" status can be revoked.\nThe request accepts the `requesting_user_id` parameter to specify the user which revokes the invitation.\nOnly users with \"admin\" role can revoke invitations."
													},
													"response": [
														{
															"id": "781399-b0da7168-6f9f-4c97-8997-dd2e65aa7329",
															"name": "An organization invitation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"requesting_user_id\": \"string\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_id/revoke",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"invitations",
																		":invitation_id",
																		"revoke"
																	],
																	"variable": [
																		{
																			"key": "organization_id"
																		},
																		{
																			"key": "invitation_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"object\": \"organization_invitation\",\n  \"id\": \"string\",\n  \"email_address\": \"string\",\n  \"role\": \"string\",\n  \"role_name\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": 4793.570368245785\n  },\n  \"url\": \"string\",\n  \"expires_at\": 2600,\n  \"created_at\": 5433,\n  \"updated_at\": 7110,\n  \"organization_id\": \"string\",\n  \"status\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": \"string\"\n  }\n}"
														},
														{
															"id": "781399-1991736c-435d-4da1-90c7-1938b6aeed8e",
															"name": "Request was not successful",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"requesting_user_id\": \"string\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_id/revoke",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"invitations",
																		":invitation_id",
																		"revoke"
																	],
																	"variable": [
																		{
																			"key": "organization_id"
																		},
																		{
																			"key": "invitation_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
														},
														{
															"id": "781399-b0021eb3-acd0-433a-9a03-e27a01a26be7",
															"name": "Authorization invalid",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"requesting_user_id\": \"string\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_id/revoke",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"invitations",
																		":invitation_id",
																		"revoke"
																	],
																	"variable": [
																		{
																			"key": "organization_id"
																		},
																		{
																			"key": "invitation_id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
														},
														{
															"id": "781399-631b92c2-514b-46b8-b887-7699447dec08",
															"name": "Resource not found",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"requesting_user_id\": \"string\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_id/revoke",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"invitations",
																		":invitation_id",
																		"revoke"
																	],
																	"variable": [
																		{
																			"key": "organization_id"
																		},
																		{
																			"key": "invitation_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
														}
													]
												}
											],
											"id": "781399-28d2f633-e2fb-4b11-b637-6dc688ef994e"
										},
										{
											"name": "Retrieve an organization invitation by ID",
											"id": "781399-600fe64b-6103-40aa-ab95-1bd1e5b7f680",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations",
														":invitation_id"
													],
													"variable": [
														{
															"id": "1256d45f-a01e-41b6-980d-6e912be73eba",
															"key": "organization_id",
															"value": "string",
															"description": "The organization ID."
														},
														{
															"id": "afbfe6a1-4730-47d5-8eac-4164a8356088",
															"key": "invitation_id",
															"value": "string",
															"description": "The organization invitation ID."
														}
													]
												},
												"description": "Use this request to get an existing organization invitation by ID."
											},
											"response": [
												{
													"id": "781399-42481f04-1899-4072-8a59-1dae8050e619",
													"name": "An organization invitation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																":invitation_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "invitation_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"organization_invitation\",\n  \"id\": \"string\",\n  \"email_address\": \"string\",\n  \"role\": \"string\",\n  \"role_name\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": 4793.570368245785\n  },\n  \"url\": \"string\",\n  \"expires_at\": 2600,\n  \"created_at\": 5433,\n  \"updated_at\": 7110,\n  \"organization_id\": \"string\",\n  \"status\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": \"string\"\n  }\n}"
												},
												{
													"id": "781399-df08e1e2-d50e-4ecb-a9db-779a2def75e2",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																":invitation_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "invitation_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-3c7cbf5a-852a-43b6-9a71-7c5ffd675278",
													"name": "Authorization invalid",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																":invitation_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "invitation_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-5e9c6528-da71-4e88-9db3-cdf7c14afcb0",
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/invitations/:invitation_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"invitations",
																":invitation_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "invitation_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-5ce8b23e-dc21-4dba-b822-fda108c50d1a"
								},
								{
									"name": "Create and send an organization invitation",
									"id": "781399-60069b69-f913-47af-b9df-94ed0bf3ef8c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email_address\": \"string\",\n  \"role\": \"string\",\n  \"inviter_user_id\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": 3527.4859995497377,\n    \"key_1\": false,\n    \"key_2\": false\n  },\n  \"private_metadata\": {\n    \"key_0\": 1267\n  },\n  \"redirect_url\": \"string\",\n  \"expires_in_days\": 223\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"invitations"
											],
											"variable": [
												{
													"id": "bdb66f2c-e1cd-4ac6-9405-a667137c116a",
													"key": "organization_id",
													"value": "string",
													"description": "The ID of the organization for which to send the invitation"
												}
											]
										},
										"description": "Creates a new organization invitation and sends an email to the provided `email_address` with a link to accept the invitation and join the organization.\nYou can specify the `role` for the invited organization member.\n\nNew organization invitations get a \"pending\" status until they are revoked by an organization administrator or accepted by the invitee.\n\nThe request body supports passing an optional `redirect_url` parameter.\nWhen the invited user clicks the link to accept the invitation, they will be redirected to the URL provided.\nUse this parameter to implement a custom invitation acceptance flow.\n\nYou can specify the ID of the user that will send the invitation with the `inviter_user_id` parameter.\nThat user must be a member with administrator privileges in the organization.\nOnly \"admin\" members can create organization invitations.\n\nYou can optionally provide public and private metadata for the organization invitation.\nThe public metadata are visible by both the Frontend and the Backend whereas the private ones only by the Backend.\nWhen the organization invitation is accepted, the metadata will be transferred to the newly created organization membership."
									},
									"response": [
										{
											"id": "781399-71669ed9-246e-412c-bc2e-e54118ebb07a",
											"name": "An organization invitation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email_address\": \"string\",\n  \"role\": \"string\",\n  \"inviter_user_id\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": 3527.4859995497377,\n    \"key_1\": false,\n    \"key_2\": false\n  },\n  \"private_metadata\": {\n    \"key_0\": 1267\n  },\n  \"redirect_url\": \"string\",\n  \"expires_in_days\": 223\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"organization_invitation\",\n  \"id\": \"string\",\n  \"email_address\": \"string\",\n  \"role\": \"string\",\n  \"role_name\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": 4793.570368245785\n  },\n  \"url\": \"string\",\n  \"expires_at\": 2600,\n  \"created_at\": 5433,\n  \"updated_at\": 7110,\n  \"organization_id\": \"string\",\n  \"status\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": \"string\"\n  }\n}"
										},
										{
											"id": "781399-12089fb2-95b9-4873-9762-813ecad35b99",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email_address\": \"string\",\n  \"role\": \"string\",\n  \"inviter_user_id\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": 3527.4859995497377,\n    \"key_1\": false,\n    \"key_2\": false\n  },\n  \"private_metadata\": {\n    \"key_0\": 1267\n  },\n  \"redirect_url\": \"string\",\n  \"expires_in_days\": 223\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-5a053fdd-07a0-4f01-8e84-42b37427b419",
											"name": "Authorization invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email_address\": \"string\",\n  \"role\": \"string\",\n  \"inviter_user_id\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": 3527.4859995497377,\n    \"key_1\": false,\n    \"key_2\": false\n  },\n  \"private_metadata\": {\n    \"key_0\": 1267\n  },\n  \"redirect_url\": \"string\",\n  \"expires_in_days\": 223\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-03dd3b43-878c-4dc3-a3eb-a54758eff97e",
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email_address\": \"string\",\n  \"role\": \"string\",\n  \"inviter_user_id\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": 3527.4859995497377,\n    \"key_1\": false,\n    \"key_2\": false\n  },\n  \"private_metadata\": {\n    \"key_0\": 1267\n  },\n  \"redirect_url\": \"string\",\n  \"expires_in_days\": 223\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-ddd0e52c-9b4d-4fef-8c83-0fc1532a0d3e",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email_address\": \"string\",\n  \"role\": \"string\",\n  \"inviter_user_id\": \"string\",\n  \"public_metadata\": {\n    \"key_0\": 3527.4859995497377,\n    \"key_1\": false,\n    \"key_2\": false\n  },\n  \"private_metadata\": {\n    \"key_0\": 1267\n  },\n  \"redirect_url\": \"string\",\n  \"expires_in_days\": 223\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								},
								{
									"name": "Get a list of organization invitations",
									"id": "781399-bc40a5be-8abb-4966-ac50-08108b6ec98f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/invitations?status=revoked&email_address=string&order_by=-created_at&limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"invitations"
											],
											"query": [
												{
													"key": "status",
													"value": "revoked",
													"description": "Filter organization invitations based on their status"
												},
												{
													"key": "email_address",
													"value": "string",
													"description": "Returns organization invitations inviting the specified email address."
												},
												{
													"key": "order_by",
													"value": "-created_at",
													"description": "Allows to return organization invitations in a particular order.\nYou can order the returned organization invitations either by their `created_at` or `email_address`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organization invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`."
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
												}
											],
											"variable": [
												{
													"id": "11d16b56-c3ee-4ea9-a869-927216754472",
													"key": "organization_id",
													"value": "string",
													"description": "The organization ID."
												}
											]
										},
										"description": "This request returns the list of organization invitations.\nResults can be paginated using the optional `limit` and `offset` query parameters.\nYou can filter them by providing the 'status' query parameter, that accepts multiple values.\nThe organization invitations are ordered by descending creation date.\nMost recent invitations will be returned first.\nAny invitations created as a result of an Organization Domain are not included in the results."
									},
									"response": [
										{
											"id": "781399-d338cb79-7d37-468e-b73b-2ee00059d735",
											"name": "A list of organization invitations",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations?status=revoked&email_address=string&order_by=-created_at&limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"query": [
														{
															"description": "Filter organization invitations based on their status",
															"key": "status",
															"value": "revoked"
														},
														{
															"description": "Returns organization invitations inviting the specified email address.",
															"key": "email_address",
															"value": "string"
														},
														{
															"description": "Allows to return organization invitations in a particular order.\nYou can order the returned organization invitations either by their `created_at` or `email_address`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organization invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
															"key": "order_by",
															"value": "-created_at"
														},
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"data\": [\n    {\n      \"object\": \"organization_invitation\",\n      \"id\": \"string\",\n      \"email_address\": \"string\",\n      \"role\": \"string\",\n      \"role_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 1106,\n        \"key_1\": \"string\",\n        \"key_2\": false\n      },\n      \"url\": \"string\",\n      \"expires_at\": 7058,\n      \"created_at\": 6350,\n      \"updated_at\": 8307,\n      \"organization_id\": \"string\",\n      \"status\": \"string\",\n      \"private_metadata\": {\n        \"key_0\": \"string\"\n      }\n    },\n    {\n      \"object\": \"organization_invitation\",\n      \"id\": \"string\",\n      \"email_address\": \"string\",\n      \"role\": \"string\",\n      \"role_name\": \"string\",\n      \"public_metadata\": {\n        \"key_0\": 4367.87981218061,\n        \"key_1\": 4288.565286706455\n      },\n      \"url\": \"string\",\n      \"expires_at\": 744,\n      \"created_at\": 1994,\n      \"updated_at\": 2268,\n      \"organization_id\": \"string\",\n      \"status\": \"string\",\n      \"private_metadata\": {\n        \"key_0\": 7918.03981493954,\n        \"key_1\": 8973\n      }\n    }\n  ],\n  \"total_count\": 5844\n}"
										},
										{
											"id": "781399-2802caaa-0bec-41ff-9d0b-570279d8e4b6",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations?status=revoked&email_address=string&order_by=-created_at&limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"query": [
														{
															"description": "Filter organization invitations based on their status",
															"key": "status",
															"value": "revoked"
														},
														{
															"description": "Returns organization invitations inviting the specified email address.",
															"key": "email_address",
															"value": "string"
														},
														{
															"description": "Allows to return organization invitations in a particular order.\nYou can order the returned organization invitations either by their `created_at` or `email_address`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organization invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
															"key": "order_by",
															"value": "-created_at"
														},
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-fb4ed144-1201-4f84-86cf-6e3cdbba702e",
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations?status=revoked&email_address=string&order_by=-created_at&limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"query": [
														{
															"description": "Filter organization invitations based on their status",
															"key": "status",
															"value": "revoked"
														},
														{
															"description": "Returns organization invitations inviting the specified email address.",
															"key": "email_address",
															"value": "string"
														},
														{
															"description": "Allows to return organization invitations in a particular order.\nYou can order the returned organization invitations either by their `created_at` or `email_address`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organization invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
															"key": "order_by",
															"value": "-created_at"
														},
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-be07b7cb-e133-494d-9c43-fe4b1a39bfac",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/invitations?status=revoked&email_address=string&order_by=-created_at&limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"invitations"
													],
													"query": [
														{
															"description": "Filter organization invitations based on their status",
															"key": "status",
															"value": "revoked"
														},
														{
															"description": "Returns organization invitations inviting the specified email address.",
															"key": "email_address",
															"value": "string"
														},
														{
															"description": "Allows to return organization invitations in a particular order.\nYou can order the returned organization invitations either by their `created_at` or `email_address`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organization invitations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
															"key": "order_by",
															"value": "-created_at"
														},
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-0de59441-02c6-49ac-a60c-1e097044d98d"
						},
						{
							"name": "memberships",
							"item": [
								{
									"name": "{user_id}",
									"item": [
										{
											"name": "metadata",
											"item": [
												{
													"name": "Merge and update organization membership metadata",
													"id": "781399-7a5f8935-af10-4b02-99b2-aa491ddf4306",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": \"string\",\n    \"key_3\": 1773.239384602463\n  },\n  \"private_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id/metadata",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"memberships",
																":user_id",
																"metadata"
															],
															"variable": [
																{
																	"id": "54c513df-94d5-4b8e-80a6-ab00f583a506",
																	"key": "organization_id",
																	"value": "string",
																	"description": "The ID of the organization to which this membership belongs"
																},
																{
																	"id": "3d9660c0-699c-4ecc-a480-e705df43803b",
																	"key": "user_id",
																	"value": "string",
																	"description": "The ID of the user to which this membership belongs"
																}
															]
														},
														"description": "Update an organization membership's metadata attributes by merging existing values with the provided parameters.\nMetadata values will be updated via a deep merge. Deep means that any nested JSON objects will be merged as well.\nYou can remove metadata keys at any level by setting their value to `null`."
													},
													"response": [
														{
															"id": "781399-c44c2c39-65e5-483d-a381-650eedd2cb20",
															"name": "Success",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": \"string\",\n    \"key_3\": 1773.239384602463\n  },\n  \"private_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id/metadata",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"memberships",
																		":user_id",
																		"metadata"
																	],
																	"variable": [
																		{
																			"key": "organization_id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"object\": \"organization_membership\",\n  \"id\": \"string\",\n  \"role\": \"string\",\n  \"permissions\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": 8330,\n    \"key_2\": 7707.446389060685,\n    \"key_3\": 7909,\n    \"key_4\": 7599.777726954052\n  },\n  \"created_at\": 9132,\n  \"updated_at\": 9339,\n  \"organization\": {\n    \"object\": \"organization\",\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"slug\": \"string\",\n    \"has_image\": true,\n    \"max_allowed_memberships\": 1060,\n    \"admin_delete_enabled\": true,\n    \"public_metadata\": {\n      \"key_0\": \"string\"\n    },\n    \"created_at\": 6131,\n    \"updated_at\": 3480,\n    \"image_url\": \"string\",\n    \"members_count\": 8369,\n    \"missing_member_with_elevated_permissions\": true,\n    \"pending_invitations_count\": 7718,\n    \"private_metadata\": {\n      \"key_0\": 4161.252436575284,\n      \"key_1\": \"string\",\n      \"key_2\": 3009.1734553763927,\n      \"key_3\": 9790.636933092117\n    },\n    \"created_by\": \"string\"\n  },\n  \"role_name\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 2557\n  },\n  \"public_user_data\": {\n    \"user_id\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"profile_image_url\": \"string\",\n    \"image_url\": \"string\",\n    \"has_image\": true,\n    \"identifier\": \"string\",\n    \"username\": \"string\"\n  }\n}"
														},
														{
															"id": "781399-872be725-addd-4cf7-8caf-7bb3f97c59f9",
															"name": "Request was not successful",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": \"string\",\n    \"key_3\": 1773.239384602463\n  },\n  \"private_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id/metadata",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"memberships",
																		":user_id",
																		"metadata"
																	],
																	"variable": [
																		{
																			"key": "organization_id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
														},
														{
															"id": "781399-b08c6f0a-7426-4287-a6f5-9786a59857be",
															"name": "Resource not found",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": \"string\",\n    \"key_3\": 1773.239384602463\n  },\n  \"private_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id/metadata",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"memberships",
																		":user_id",
																		"metadata"
																	],
																	"variable": [
																		{
																			"key": "organization_id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
														},
														{
															"id": "781399-1ec4638f-7391-4e5c-a908-da1e278c8b9d",
															"name": "Invalid request parameters",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false,\n    \"key_2\": \"string\",\n    \"key_3\": 1773.239384602463\n  },\n  \"private_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": false\n  }\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id/metadata",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"organizations",
																		":organization_id",
																		"memberships",
																		":user_id",
																		"metadata"
																	],
																	"variable": [
																		{
																			"key": "organization_id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
															"code": 422,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
														}
													]
												}
											],
											"id": "781399-8883e491-cd49-48a3-b1af-0a4e50c175c8"
										},
										{
											"name": "Update an organization membership",
											"id": "781399-93fb54a8-0f22-48c5-9a00-3ab1c2da531d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"role\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"memberships",
														":user_id"
													],
													"variable": [
														{
															"id": "39f9a07a-8f3d-473c-9713-2f3069e4bde9",
															"key": "organization_id",
															"value": "string",
															"description": "The ID of the organization to which this membership belongs"
														},
														{
															"id": "21f0bf7f-59e4-43fa-b54d-c36cdafc68dc",
															"key": "user_id",
															"value": "string",
															"description": "The ID of the user to which this membership belongs"
														}
													]
												},
												"description": "Updates the properties of an existing organization membership"
											},
											"response": [
												{
													"id": "781399-63778ac7-fc93-413b-81cd-88f947cec882",
													"name": "Success",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"role\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"memberships",
																":user_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"organization_membership\",\n  \"id\": \"string\",\n  \"role\": \"string\",\n  \"permissions\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": 8330,\n    \"key_2\": 7707.446389060685,\n    \"key_3\": 7909,\n    \"key_4\": 7599.777726954052\n  },\n  \"created_at\": 9132,\n  \"updated_at\": 9339,\n  \"organization\": {\n    \"object\": \"organization\",\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"slug\": \"string\",\n    \"has_image\": true,\n    \"max_allowed_memberships\": 1060,\n    \"admin_delete_enabled\": true,\n    \"public_metadata\": {\n      \"key_0\": \"string\"\n    },\n    \"created_at\": 6131,\n    \"updated_at\": 3480,\n    \"image_url\": \"string\",\n    \"members_count\": 8369,\n    \"missing_member_with_elevated_permissions\": true,\n    \"pending_invitations_count\": 7718,\n    \"private_metadata\": {\n      \"key_0\": 4161.252436575284,\n      \"key_1\": \"string\",\n      \"key_2\": 3009.1734553763927,\n      \"key_3\": 9790.636933092117\n    },\n    \"created_by\": \"string\"\n  },\n  \"role_name\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 2557\n  },\n  \"public_user_data\": {\n    \"user_id\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"profile_image_url\": \"string\",\n    \"image_url\": \"string\",\n    \"has_image\": true,\n    \"identifier\": \"string\",\n    \"username\": \"string\"\n  }\n}"
												},
												{
													"id": "781399-c68bf15b-9208-4264-b0fe-fad5617035cc",
													"name": "Resource not found",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"role\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"memberships",
																":user_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-5dba18b9-d4ae-4f9c-8c4b-8ad9ffed7c53",
													"name": "Invalid request parameters",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"role\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"memberships",
																":user_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										},
										{
											"name": "Remove a member from an organization",
											"id": "781399-129b4d9a-9466-4ae2-a392-edbd1807b761",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"memberships",
														":user_id"
													],
													"variable": [
														{
															"id": "4297c979-6340-4463-8319-abdfa9faca8e",
															"key": "organization_id",
															"value": "string",
															"description": "The ID of the organization to which this membership belongs"
														},
														{
															"id": "580a9c32-e8ad-4bca-9e8e-b1dd0d945cc3",
															"key": "user_id",
															"value": "string",
															"description": "The ID of the user to which this membership belongs"
														}
													]
												},
												"description": "Removes the given membership from the organization"
											},
											"response": [
												{
													"id": "781399-00ef462c-bcb6-4574-85af-9ae2f135d3cf",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"memberships",
																":user_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"organization_membership\",\n  \"id\": \"string\",\n  \"role\": \"string\",\n  \"permissions\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": 8330,\n    \"key_2\": 7707.446389060685,\n    \"key_3\": 7909,\n    \"key_4\": 7599.777726954052\n  },\n  \"created_at\": 9132,\n  \"updated_at\": 9339,\n  \"organization\": {\n    \"object\": \"organization\",\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"slug\": \"string\",\n    \"has_image\": true,\n    \"max_allowed_memberships\": 1060,\n    \"admin_delete_enabled\": true,\n    \"public_metadata\": {\n      \"key_0\": \"string\"\n    },\n    \"created_at\": 6131,\n    \"updated_at\": 3480,\n    \"image_url\": \"string\",\n    \"members_count\": 8369,\n    \"missing_member_with_elevated_permissions\": true,\n    \"pending_invitations_count\": 7718,\n    \"private_metadata\": {\n      \"key_0\": 4161.252436575284,\n      \"key_1\": \"string\",\n      \"key_2\": 3009.1734553763927,\n      \"key_3\": 9790.636933092117\n    },\n    \"created_by\": \"string\"\n  },\n  \"role_name\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 2557\n  },\n  \"public_user_data\": {\n    \"user_id\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"profile_image_url\": \"string\",\n    \"image_url\": \"string\",\n    \"has_image\": true,\n    \"identifier\": \"string\",\n    \"username\": \"string\"\n  }\n}"
												},
												{
													"id": "781399-0756a6a5-ff02-4930-b754-0e9c373f2a2c",
													"name": "Authentication invalid",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"memberships",
																":user_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-7d2c5548-1ac2-41c3-9dc6-428f1e042f7b",
													"name": "Resource not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"memberships",
																":user_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-18863aec-42c1-4fbf-8250-1569da9d6f9f",
													"name": "Invalid request parameters",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/memberships/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"memberships",
																":user_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "user_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-4ccb9cfb-c9ff-4304-a843-15505883cbd8"
								},
								{
									"name": "Create a new organization membership",
									"id": "781399-6cb71062-e9a3-462f-8b59-9a6174ccada1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user_id\": \"string\",\n  \"role\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/memberships",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"memberships"
											],
											"variable": [
												{
													"id": "ca6b9101-554d-43b7-b99c-c10f2391c8d5",
													"key": "organization_id",
													"value": "string",
													"description": "The ID of the organization where the new membership will be created"
												}
											]
										},
										"description": "Adds a user as a member to the given organization.\nOnly users in the same instance as the organization can be added as members.\n\nThis organization will be the user's [active organization] (https://clerk.com/docs/organizations/overview#active-organization)\nthe next time they create a session, presuming they don't explicitly set a\ndifferent organization as active before then."
									},
									"response": [
										{
											"id": "781399-bcbd1b43-a704-4485-86c6-9fb9aafc66f3",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user_id\": \"string\",\n  \"role\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/memberships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"memberships"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"organization_membership\",\n  \"id\": \"string\",\n  \"role\": \"string\",\n  \"permissions\": [\n    \"string\",\n    \"string\"\n  ],\n  \"public_metadata\": {\n    \"key_0\": \"string\",\n    \"key_1\": 8330,\n    \"key_2\": 7707.446389060685,\n    \"key_3\": 7909,\n    \"key_4\": 7599.777726954052\n  },\n  \"created_at\": 9132,\n  \"updated_at\": 9339,\n  \"organization\": {\n    \"object\": \"organization\",\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"slug\": \"string\",\n    \"has_image\": true,\n    \"max_allowed_memberships\": 1060,\n    \"admin_delete_enabled\": true,\n    \"public_metadata\": {\n      \"key_0\": \"string\"\n    },\n    \"created_at\": 6131,\n    \"updated_at\": 3480,\n    \"image_url\": \"string\",\n    \"members_count\": 8369,\n    \"missing_member_with_elevated_permissions\": true,\n    \"pending_invitations_count\": 7718,\n    \"private_metadata\": {\n      \"key_0\": 4161.252436575284,\n      \"key_1\": \"string\",\n      \"key_2\": 3009.1734553763927,\n      \"key_3\": 9790.636933092117\n    },\n    \"created_by\": \"string\"\n  },\n  \"role_name\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 2557\n  },\n  \"public_user_data\": {\n    \"user_id\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"profile_image_url\": \"string\",\n    \"image_url\": \"string\",\n    \"has_image\": true,\n    \"identifier\": \"string\",\n    \"username\": \"string\"\n  }\n}"
										},
										{
											"id": "781399-6ffeb2bc-9ecb-48fc-9de0-60aebc8f007f",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user_id\": \"string\",\n  \"role\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/memberships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"memberships"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-5c29645d-03ae-488b-b0d5-8a376d20a1b5",
											"name": "Authorization invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user_id\": \"string\",\n  \"role\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/memberships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"memberships"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-bd3a030e-7673-4b42-ac33-1e26c9a06132",
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user_id\": \"string\",\n  \"role\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/memberships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"memberships"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-27c80935-147a-4868-9562-22e643b896c8",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user_id\": \"string\",\n  \"role\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/memberships",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"memberships"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								},
								{
									"name": "Get a list of all members of an organization",
									"id": "781399-cab31da4-5c55-4fb3-9f2f-4aac4341e066",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/memberships?order_by=string&user_id=string&user_id=string&email_address=string&email_address=string&phone_number=string&phone_number=string&username=string&username=string&web3_wallet=string&web3_wallet=string&role=string&role=string&query=string&email_address_query=string&phone_number_query=string&username_query=string&name_query=string&last_active_at_before=1700690400000&last_active_at_after=1700690400000&created_at_before=1730160000000&created_at_after=1730160000000&limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"memberships"
											],
											"query": [
												{
													"key": "order_by",
													"value": "string",
													"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -, we can choose to sort in ascending (ASC) or descending (DESC) order.\""
												},
												{
													"key": "user_id",
													"value": "string",
													"description": "Returns users with the user IDs specified. For each user ID, the `+` and `-` can be\nprepended to the ID, which denote whether the respective user ID should be included or\nexcluded from the result set. Accepts up to 100 user IDs. Any user IDs not found are ignored."
												},
												{
													"key": "user_id",
													"value": "string",
													"description": "Returns users with the user IDs specified. For each user ID, the `+` and `-` can be\nprepended to the ID, which denote whether the respective user ID should be included or\nexcluded from the result set. Accepts up to 100 user IDs. Any user IDs not found are ignored."
												},
												{
													"key": "email_address",
													"value": "string",
													"description": "Returns users with the specified email addresses. Accepts up to 100 email addresses. Any email addresses not found are ignored."
												},
												{
													"key": "email_address",
													"value": "string",
													"description": "Returns users with the specified email addresses. Accepts up to 100 email addresses. Any email addresses not found are ignored."
												},
												{
													"key": "phone_number",
													"value": "string",
													"description": "Returns users with the specified phone numbers. Accepts up to 100 phone numbers. Any phone numbers not found are ignored."
												},
												{
													"key": "phone_number",
													"value": "string",
													"description": "Returns users with the specified phone numbers. Accepts up to 100 phone numbers. Any phone numbers not found are ignored."
												},
												{
													"key": "username",
													"value": "string",
													"description": "Returns users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored."
												},
												{
													"key": "username",
													"value": "string",
													"description": "Returns users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored."
												},
												{
													"key": "web3_wallet",
													"value": "string",
													"description": "Returns users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored."
												},
												{
													"key": "web3_wallet",
													"value": "string",
													"description": "Returns users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored."
												},
												{
													"key": "role",
													"value": "string",
													"description": "Returns users with the specified roles. Accepts up to 100 roles. Any roles not found are ignored."
												},
												{
													"key": "role",
													"value": "string",
													"description": "Returns users with the specified roles. Accepts up to 100 roles. Any roles not found are ignored."
												},
												{
													"key": "query",
													"value": "string",
													"description": "Returns users that match the given query.\nFor possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user IDs, first and last names.\nThe query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well."
												},
												{
													"key": "email_address_query",
													"value": "string",
													"description": "Returns users with emails that match the given query, via case-insensitive partial match.\nFor example, `email_address_query=ello` will match a user with the email `HELLO@example.com`."
												},
												{
													"key": "phone_number_query",
													"value": "string",
													"description": "Returns users with phone numbers that match the given query, via case-insensitive partial match.\nFor example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`."
												},
												{
													"key": "username_query",
													"value": "string",
													"description": "Returns users with usernames that match the given query, via case-insensitive partial match.\nFor example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`."
												},
												{
													"key": "name_query",
													"value": "string",
													"description": "Returns users with names that match the given query, via case-insensitive partial match."
												},
												{
													"key": "last_active_at_before",
													"value": "1700690400000",
													"description": "Returns users whose last session activity was before the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23."
												},
												{
													"key": "last_active_at_after",
													"value": "1700690400000",
													"description": "Returns users whose last session activity was after the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23."
												},
												{
													"key": "created_at_before",
													"value": "1730160000000",
													"description": "Returns users who have been created before the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created before 2024-10-29."
												},
												{
													"key": "created_at_after",
													"value": "1730160000000",
													"description": "Returns users who have been created after the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created after 2024-10-29."
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
												}
											],
											"variable": [
												{
													"id": "f9dda545-9762-46f4-aeae-d7de345100b3",
													"key": "organization_id",
													"value": "string",
													"description": "The organization ID."
												}
											]
										},
										"description": "Retrieves all user memberships for the given organization"
									},
									"response": [
										{
											"id": "781399-71faa3a8-2958-498a-b266-12c747ba0d0a",
											"name": "A list of organization memberships",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/memberships?order_by=string&user_id=string&email_address=string&phone_number=string&username=string&web3_wallet=string&role=string&query=string&email_address_query=string&phone_number_query=string&username_query=string&name_query=string&last_active_at_before=1700690400000&last_active_at_after=1700690400000&created_at_before=1730160000000&created_at_after=1730160000000&limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"memberships"
													],
													"query": [
														{
															"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -, we can choose to sort in ascending (ASC) or descending (DESC) order.\"",
															"key": "order_by",
															"value": "string"
														},
														{
															"description": "Returns users with the user IDs specified. For each user ID, the `+` and `-` can be\nprepended to the ID, which denote whether the respective user ID should be included or\nexcluded from the result set. Accepts up to 100 user IDs. Any user IDs not found are ignored.",
															"key": "user_id",
															"value": "string"
														},
														{
															"description": "Returns users with the specified email addresses. Accepts up to 100 email addresses. Any email addresses not found are ignored.",
															"key": "email_address",
															"value": "string"
														},
														{
															"description": "Returns users with the specified phone numbers. Accepts up to 100 phone numbers. Any phone numbers not found are ignored.",
															"key": "phone_number",
															"value": "string"
														},
														{
															"description": "Returns users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored.",
															"key": "username",
															"value": "string"
														},
														{
															"description": "Returns users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored.",
															"key": "web3_wallet",
															"value": "string"
														},
														{
															"description": "Returns users with the specified roles. Accepts up to 100 roles. Any roles not found are ignored.",
															"key": "role",
															"value": "string"
														},
														{
															"description": "Returns users that match the given query.\nFor possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user IDs, first and last names.\nThe query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.",
															"key": "query",
															"value": "string"
														},
														{
															"description": "Returns users with emails that match the given query, via case-insensitive partial match.\nFor example, `email_address_query=ello` will match a user with the email `HELLO@example.com`.",
															"key": "email_address_query",
															"value": "string"
														},
														{
															"description": "Returns users with phone numbers that match the given query, via case-insensitive partial match.\nFor example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`.",
															"key": "phone_number_query",
															"value": "string"
														},
														{
															"description": "Returns users with usernames that match the given query, via case-insensitive partial match.\nFor example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`.",
															"key": "username_query",
															"value": "string"
														},
														{
															"description": "Returns users with names that match the given query, via case-insensitive partial match.",
															"key": "name_query",
															"value": "string"
														},
														{
															"description": "Returns users whose last session activity was before the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23.",
															"key": "last_active_at_before",
															"value": "1700690400000"
														},
														{
															"description": "Returns users whose last session activity was after the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23.",
															"key": "last_active_at_after",
															"value": "1700690400000"
														},
														{
															"description": "Returns users who have been created before the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created before 2024-10-29.",
															"key": "created_at_before",
															"value": "1730160000000"
														},
														{
															"description": "Returns users who have been created after the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created after 2024-10-29.",
															"key": "created_at_after",
															"value": "1730160000000"
														},
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"data\": [\n    {\n      \"object\": \"organization_membership\",\n      \"id\": \"string\",\n      \"role\": \"string\",\n      \"permissions\": [\n        \"string\",\n        \"string\"\n      ],\n      \"public_metadata\": {\n        \"key_0\": 9083,\n        \"key_1\": \"string\",\n        \"key_2\": true\n      },\n      \"created_at\": 8566,\n      \"updated_at\": 6296,\n      \"organization\": {\n        \"object\": \"organization\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": true,\n        \"max_allowed_memberships\": 6557,\n        \"admin_delete_enabled\": false,\n        \"public_metadata\": {\n          \"key_0\": \"string\",\n          \"key_1\": false\n        },\n        \"created_at\": 2494,\n        \"updated_at\": 3052,\n        \"image_url\": \"string\",\n        \"members_count\": 4272,\n        \"missing_member_with_elevated_permissions\": false,\n        \"pending_invitations_count\": 3425,\n        \"private_metadata\": {\n          \"key_0\": 2918.5963037429697,\n          \"key_1\": 9218.024089152552\n        },\n        \"created_by\": \"string\"\n      },\n      \"role_name\": \"string\",\n      \"private_metadata\": {\n        \"key_0\": false,\n        \"key_1\": 6857,\n        \"key_2\": \"string\",\n        \"key_3\": true\n      },\n      \"public_user_data\": {\n        \"user_id\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"profile_image_url\": \"string\",\n        \"image_url\": \"string\",\n        \"has_image\": true,\n        \"identifier\": \"string\",\n        \"username\": \"string\"\n      }\n    },\n    {\n      \"object\": \"organization_membership\",\n      \"id\": \"string\",\n      \"role\": \"string\",\n      \"permissions\": [\n        \"string\",\n        \"string\"\n      ],\n      \"public_metadata\": {\n        \"key_0\": false\n      },\n      \"created_at\": 7245,\n      \"updated_at\": 4600,\n      \"organization\": {\n        \"object\": \"organization\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": false,\n        \"max_allowed_memberships\": 7782,\n        \"admin_delete_enabled\": true,\n        \"public_metadata\": {\n          \"key_0\": false\n        },\n        \"created_at\": 6903,\n        \"updated_at\": 3770,\n        \"image_url\": \"string\",\n        \"members_count\": 9552,\n        \"missing_member_with_elevated_permissions\": true,\n        \"pending_invitations_count\": 2102,\n        \"private_metadata\": {\n          \"key_0\": 9826.880821938897,\n          \"key_1\": 5161.292338267557\n        },\n        \"created_by\": \"string\"\n      },\n      \"role_name\": \"string\",\n      \"private_metadata\": {\n        \"key_0\": true\n      },\n      \"public_user_data\": {\n        \"user_id\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"profile_image_url\": \"string\",\n        \"image_url\": \"string\",\n        \"has_image\": true,\n        \"identifier\": \"string\",\n        \"username\": \"string\"\n      }\n    }\n  ],\n  \"total_count\": 8054\n}"
										},
										{
											"id": "781399-859a92e6-910a-40d1-b311-c3a62ad2efd6",
											"name": "Authentication invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/memberships?order_by=string&user_id=string&email_address=string&phone_number=string&username=string&web3_wallet=string&role=string&query=string&email_address_query=string&phone_number_query=string&username_query=string&name_query=string&last_active_at_before=1700690400000&last_active_at_after=1700690400000&created_at_before=1730160000000&created_at_after=1730160000000&limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"memberships"
													],
													"query": [
														{
															"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -, we can choose to sort in ascending (ASC) or descending (DESC) order.\"",
															"key": "order_by",
															"value": "string"
														},
														{
															"description": "Returns users with the user IDs specified. For each user ID, the `+` and `-` can be\nprepended to the ID, which denote whether the respective user ID should be included or\nexcluded from the result set. Accepts up to 100 user IDs. Any user IDs not found are ignored.",
															"key": "user_id",
															"value": "string"
														},
														{
															"description": "Returns users with the specified email addresses. Accepts up to 100 email addresses. Any email addresses not found are ignored.",
															"key": "email_address",
															"value": "string"
														},
														{
															"description": "Returns users with the specified phone numbers. Accepts up to 100 phone numbers. Any phone numbers not found are ignored.",
															"key": "phone_number",
															"value": "string"
														},
														{
															"description": "Returns users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored.",
															"key": "username",
															"value": "string"
														},
														{
															"description": "Returns users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored.",
															"key": "web3_wallet",
															"value": "string"
														},
														{
															"description": "Returns users with the specified roles. Accepts up to 100 roles. Any roles not found are ignored.",
															"key": "role",
															"value": "string"
														},
														{
															"description": "Returns users that match the given query.\nFor possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user IDs, first and last names.\nThe query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.",
															"key": "query",
															"value": "string"
														},
														{
															"description": "Returns users with emails that match the given query, via case-insensitive partial match.\nFor example, `email_address_query=ello` will match a user with the email `HELLO@example.com`.",
															"key": "email_address_query",
															"value": "string"
														},
														{
															"description": "Returns users with phone numbers that match the given query, via case-insensitive partial match.\nFor example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`.",
															"key": "phone_number_query",
															"value": "string"
														},
														{
															"description": "Returns users with usernames that match the given query, via case-insensitive partial match.\nFor example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`.",
															"key": "username_query",
															"value": "string"
														},
														{
															"description": "Returns users with names that match the given query, via case-insensitive partial match.",
															"key": "name_query",
															"value": "string"
														},
														{
															"description": "Returns users whose last session activity was before the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23.",
															"key": "last_active_at_before",
															"value": "1700690400000"
														},
														{
															"description": "Returns users whose last session activity was after the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23.",
															"key": "last_active_at_after",
															"value": "1700690400000"
														},
														{
															"description": "Returns users who have been created before the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created before 2024-10-29.",
															"key": "created_at_before",
															"value": "1730160000000"
														},
														{
															"description": "Returns users who have been created after the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created after 2024-10-29.",
															"key": "created_at_after",
															"value": "1730160000000"
														},
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-c50b8fea-4f7c-4467-a477-02e0405b2fda",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/memberships?order_by=string&user_id=string&email_address=string&phone_number=string&username=string&web3_wallet=string&role=string&query=string&email_address_query=string&phone_number_query=string&username_query=string&name_query=string&last_active_at_before=1700690400000&last_active_at_after=1700690400000&created_at_before=1730160000000&created_at_after=1730160000000&limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"memberships"
													],
													"query": [
														{
															"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -, we can choose to sort in ascending (ASC) or descending (DESC) order.\"",
															"key": "order_by",
															"value": "string"
														},
														{
															"description": "Returns users with the user IDs specified. For each user ID, the `+` and `-` can be\nprepended to the ID, which denote whether the respective user ID should be included or\nexcluded from the result set. Accepts up to 100 user IDs. Any user IDs not found are ignored.",
															"key": "user_id",
															"value": "string"
														},
														{
															"description": "Returns users with the specified email addresses. Accepts up to 100 email addresses. Any email addresses not found are ignored.",
															"key": "email_address",
															"value": "string"
														},
														{
															"description": "Returns users with the specified phone numbers. Accepts up to 100 phone numbers. Any phone numbers not found are ignored.",
															"key": "phone_number",
															"value": "string"
														},
														{
															"description": "Returns users with the specified usernames.\nAccepts up to 100 usernames.\nAny usernames not found are ignored.",
															"key": "username",
															"value": "string"
														},
														{
															"description": "Returns users with the specified web3 wallet addresses.\nAccepts up to 100 web3 wallet addresses.\nAny web3 wallet addresses not found are ignored.",
															"key": "web3_wallet",
															"value": "string"
														},
														{
															"description": "Returns users with the specified roles. Accepts up to 100 roles. Any roles not found are ignored.",
															"key": "role",
															"value": "string"
														},
														{
															"description": "Returns users that match the given query.\nFor possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user IDs, first and last names.\nThe query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.",
															"key": "query",
															"value": "string"
														},
														{
															"description": "Returns users with emails that match the given query, via case-insensitive partial match.\nFor example, `email_address_query=ello` will match a user with the email `HELLO@example.com`.",
															"key": "email_address_query",
															"value": "string"
														},
														{
															"description": "Returns users with phone numbers that match the given query, via case-insensitive partial match.\nFor example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`.",
															"key": "phone_number_query",
															"value": "string"
														},
														{
															"description": "Returns users with usernames that match the given query, via case-insensitive partial match.\nFor example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`.",
															"key": "username_query",
															"value": "string"
														},
														{
															"description": "Returns users with names that match the given query, via case-insensitive partial match.",
															"key": "name_query",
															"value": "string"
														},
														{
															"description": "Returns users whose last session activity was before the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was before 2023-11-23.",
															"key": "last_active_at_before",
															"value": "1700690400000"
														},
														{
															"description": "Returns users whose last session activity was after the given date (with millisecond precision).\nExample: use 1700690400000 to retrieve users whose last session activity was after 2023-11-23.",
															"key": "last_active_at_after",
															"value": "1700690400000"
														},
														{
															"description": "Returns users who have been created before the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created before 2024-10-29.",
															"key": "created_at_before",
															"value": "1730160000000"
														},
														{
															"description": "Returns users who have been created after the given date (with millisecond precision).\nExample: use 1730160000000 to retrieve users who have been created after 2024-10-29.",
															"key": "created_at_after",
															"value": "1730160000000"
														},
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-b8be275a-83c5-44b5-9f43-294bb81ccb7f"
						},
						{
							"name": "domains",
							"item": [
								{
									"name": "{domain_id}",
									"item": [
										{
											"name": "Update an organization domain.",
											"id": "781399-26350473-075b-46dd-b716-812078a5e203",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"enrollment_mode\": \"string\",\n  \"verified\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/domains/:domain_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"domains",
														":domain_id"
													],
													"variable": [
														{
															"id": "9b31af71-9f00-4031-9328-e90fdf3e287b",
															"key": "organization_id",
															"value": "string",
															"description": "The ID of the organization to which the domain belongs"
														},
														{
															"id": "57374654-57d7-4c9d-b43e-c642e75ff056",
															"key": "domain_id",
															"value": "string",
															"description": "The ID of the domain"
														}
													]
												},
												"description": "Updates the properties of an existing organization domain."
											},
											"response": [
												{
													"id": "781399-fe699769-7f6e-4cd1-a9aa-3eb470aacb06",
													"name": "An organization domain",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enrollment_mode\": \"string\",\n  \"verified\": false\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/domains/:domain_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"domains",
																":domain_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "domain_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"organization_domain\",\n  \"id\": \"string\",\n  \"organization_id\": \"string\",\n  \"name\": \"string\",\n  \"enrollment_mode\": \"automatic_invitation\",\n  \"affiliation_email_address\": \"string\",\n  \"verification\": {\n    \"status\": \"verified\",\n    \"strategy\": \"string\",\n    \"attempts\": 5730,\n    \"expire_at\": 6140\n  },\n  \"total_pending_invitations\": 2370,\n  \"total_pending_suggestions\": 7382,\n  \"created_at\": 3687,\n  \"updated_at\": 3466,\n  \"public_organization_data\": {\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"slug\": \"string\",\n    \"has_image\": true,\n    \"image_url\": \"string\"\n  }\n}"
												},
												{
													"id": "781399-7e43a86d-db74-41c3-a5b5-75e4c37212f3",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enrollment_mode\": \"string\",\n  \"verified\": false\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/domains/:domain_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"domains",
																":domain_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "domain_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-ec918972-4487-4dcc-9347-ca2bbc8ee305",
													"name": "Resource not found",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enrollment_mode\": \"string\",\n  \"verified\": false\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/domains/:domain_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"domains",
																":domain_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "domain_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-a159de44-7e66-44e7-a547-1f494bf714d5",
													"name": "Invalid request parameters",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"enrollment_mode\": \"string\",\n  \"verified\": false\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/domains/:domain_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"domains",
																":domain_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "domain_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										},
										{
											"name": "Remove a domain from an organization.",
											"id": "781399-84034577-940d-4de1-9874-a13613dff538",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/domains/:domain_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"domains",
														":domain_id"
													],
													"variable": [
														{
															"id": "c663a367-9f29-488a-b119-96533f5127de",
															"key": "organization_id",
															"value": "string",
															"description": "The ID of the organization to which the domain belongs"
														},
														{
															"id": "a1bf1445-77bd-473c-bef8-ae7e45a5f340",
															"key": "domain_id",
															"value": "string",
															"description": "The ID of the domain"
														}
													]
												},
												"description": "Removes the given domain from the organization."
											},
											"response": [
												{
													"id": "781399-4bc703d7-3985-4409-b453-85dc0927f80e",
													"name": "Deleted Object",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/domains/:domain_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"domains",
																":domain_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "domain_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
												},
												{
													"id": "781399-aa09eccf-956c-4e9f-946e-499f4b19811c",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/domains/:domain_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"domains",
																":domain_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "domain_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-c758ce6f-89ca-4b15-bd5d-961e95ec9f4e",
													"name": "Authentication invalid",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/domains/:domain_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"domains",
																":domain_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "domain_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-d3e2ffee-b674-444e-9e19-d47dec4ec9f7",
													"name": "Resource not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/organizations/:organization_id/domains/:domain_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"organizations",
																":organization_id",
																"domains",
																":domain_id"
															],
															"variable": [
																{
																	"key": "organization_id"
																},
																{
																	"key": "domain_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-2646f525-d5f7-488e-9577-b3f40f30e25b"
								},
								{
									"name": "Create a new organization domain.",
									"id": "781399-edbf8f10-98e8-44d7-b9d5-0ae72dd7eed7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"enrollment_mode\": \"string\",\n  \"verified\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"domains"
											],
											"variable": [
												{
													"id": "e89ad810-3f29-4bb3-bc12-d457d07247a3",
													"key": "organization_id",
													"value": "string",
													"description": "The ID of the organization where the new domain will be created."
												}
											]
										},
										"description": "Creates a new organization domain. By default the domain is verified, but can be optionally set to unverified."
									},
									"response": [
										{
											"id": "781399-653a9414-0de8-474d-be16-18b3a5a6101b",
											"name": "An organization domain",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"enrollment_mode\": \"string\",\n  \"verified\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"domains"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"organization_domain\",\n  \"id\": \"string\",\n  \"organization_id\": \"string\",\n  \"name\": \"string\",\n  \"enrollment_mode\": \"automatic_invitation\",\n  \"affiliation_email_address\": \"string\",\n  \"verification\": {\n    \"status\": \"verified\",\n    \"strategy\": \"string\",\n    \"attempts\": 5730,\n    \"expire_at\": 6140\n  },\n  \"total_pending_invitations\": 2370,\n  \"total_pending_suggestions\": 7382,\n  \"created_at\": 3687,\n  \"updated_at\": 3466,\n  \"public_organization_data\": {\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"slug\": \"string\",\n    \"has_image\": true,\n    \"image_url\": \"string\"\n  }\n}"
										},
										{
											"id": "781399-fcbe0ece-b622-42bf-9177-e40c05b1f314",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"enrollment_mode\": \"string\",\n  \"verified\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"domains"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-2d84a2cc-1334-4bda-8bc7-ec31a6a31c00",
											"name": "Authorization invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"enrollment_mode\": \"string\",\n  \"verified\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"domains"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-2aa0af5f-ff90-48c1-8314-6972a8788876",
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"enrollment_mode\": \"string\",\n  \"verified\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"domains"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-4a7d344d-bf37-437d-8b11-78b353e0e9f1",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"enrollment_mode\": \"string\",\n  \"verified\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"domains"
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								},
								{
									"name": "Get a list of all domains of an organization.",
									"id": "781399-4c912256-f6a9-41ae-850c-8ce648f78aee",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id/domains?verified=string&enrollment_mode=string&limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id",
												"domains"
											],
											"query": [
												{
													"key": "verified",
													"value": "string",
													"description": "Filter domains by their verification status. `true` or `false`"
												},
												{
													"key": "enrollment_mode",
													"value": "string",
													"description": "Filter domains by their enrollment mode"
												},
												{
													"key": "limit",
													"value": "10",
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
												}
											],
											"variable": [
												{
													"id": "460357dd-f2c9-4292-ae8b-d9df036208d0",
													"key": "organization_id",
													"value": "string",
													"description": "The organization ID."
												}
											]
										},
										"description": "Get a list of all domains of an organization."
									},
									"response": [
										{
											"id": "781399-d2c9e9c8-9c16-4bc7-96c4-2e80dfc7b607",
											"name": "A list of organization domains",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/domains?verified=string&enrollment_mode=string&limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"domains"
													],
													"query": [
														{
															"description": "Filter domains by their verification status. `true` or `false`",
															"key": "verified",
															"value": "string"
														},
														{
															"description": "Filter domains by their enrollment mode",
															"key": "enrollment_mode",
															"value": "string"
														},
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"data\": [\n    {\n      \"object\": \"organization_domain\",\n      \"id\": \"string\",\n      \"organization_id\": \"string\",\n      \"name\": \"string\",\n      \"enrollment_mode\": \"automatic_invitation\",\n      \"affiliation_email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"string\",\n        \"attempts\": 2136,\n        \"expire_at\": 490\n      },\n      \"total_pending_invitations\": 4241,\n      \"total_pending_suggestions\": 9335,\n      \"created_at\": 8123,\n      \"updated_at\": 8708,\n      \"public_organization_data\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": false,\n        \"image_url\": \"string\"\n      }\n    },\n    {\n      \"object\": \"organization_domain\",\n      \"id\": \"string\",\n      \"organization_id\": \"string\",\n      \"name\": \"string\",\n      \"enrollment_mode\": \"manual_invitation\",\n      \"affiliation_email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"string\",\n        \"attempts\": 2681,\n        \"expire_at\": 8490\n      },\n      \"total_pending_invitations\": 6684,\n      \"total_pending_suggestions\": 692,\n      \"created_at\": 7332,\n      \"updated_at\": 2432,\n      \"public_organization_data\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": true,\n        \"image_url\": \"string\"\n      }\n    }\n  ],\n  \"total_count\": 1049\n}"
										},
										{
											"id": "781399-bfc0bf25-05eb-478b-91fb-dc42d83e69f1",
											"name": "Authentication invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/domains?verified=string&enrollment_mode=string&limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"domains"
													],
													"query": [
														{
															"description": "Filter domains by their verification status. `true` or `false`",
															"key": "verified",
															"value": "string"
														},
														{
															"description": "Filter domains by their enrollment mode",
															"key": "enrollment_mode",
															"value": "string"
														},
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-254541a9-1c89-4928-b248-b12c540574c0",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/:organization_id/domains?verified=string&enrollment_mode=string&limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														":organization_id",
														"domains"
													],
													"query": [
														{
															"description": "Filter domains by their verification status. `true` or `false`",
															"key": "verified",
															"value": "string"
														},
														{
															"description": "Filter domains by their enrollment mode",
															"key": "enrollment_mode",
															"value": "string"
														},
														{
															"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
															"key": "limit",
															"value": "10"
														},
														{
															"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
															"key": "offset",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "organization_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-26b805b5-113a-4cc1-96e5-35c6c9cd19b0"
						},
						{
							"name": "Retrieve an organization by ID or slug",
							"id": "781399-3fdb2a9a-e116-4001-a149-70b968001394",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization_id?include_members_count=true&include_missing_member_with_elevated_permissions=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization_id"
									],
									"query": [
										{
											"key": "include_members_count",
											"value": "true",
											"description": "Flag to denote whether or not the organization's members count should be included in the response."
										},
										{
											"key": "include_missing_member_with_elevated_permissions",
											"value": "true",
											"description": "Flag to denote whether or not to include a member with elevated permissions who is not currently a member of the organization."
										}
									],
									"variable": [
										{
											"id": "f40948c0-554c-4dc4-b68d-8ae7c86770d5",
											"key": "organization_id",
											"value": "string",
											"description": "The ID or slug of the organization"
										}
									]
								},
								"description": "Fetches the organization whose ID or slug matches the provided `id_or_slug` URL query parameter."
							},
							"response": [
								{
									"id": "781399-74a52678-d1b2-4542-abb8-b5c5df7f9e50",
									"name": "An organization",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id?include_members_count=true&include_missing_member_with_elevated_permissions=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"query": [
												{
													"description": "Flag to denote whether or not the organization's members count should be included in the response.",
													"key": "include_members_count",
													"value": "true"
												},
												{
													"description": "Flag to denote whether or not to include a member with elevated permissions who is not currently a member of the organization.",
													"key": "include_missing_member_with_elevated_permissions",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "organization_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"organization\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"has_image\": true,\n  \"max_allowed_memberships\": 1790,\n  \"admin_delete_enabled\": false,\n  \"public_metadata\": {\n    \"key_0\": false\n  },\n  \"created_at\": 6202,\n  \"updated_at\": 6863,\n  \"image_url\": \"string\",\n  \"members_count\": 1167,\n  \"missing_member_with_elevated_permissions\": false,\n  \"pending_invitations_count\": 5670,\n  \"private_metadata\": {\n    \"key_0\": true\n  },\n  \"created_by\": \"string\"\n}"
								},
								{
									"id": "781399-09ec195f-860b-47b9-92a5-1e59ac579f35",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id?include_members_count=true&include_missing_member_with_elevated_permissions=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"query": [
												{
													"description": "Flag to denote whether or not the organization's members count should be included in the response.",
													"key": "include_members_count",
													"value": "true"
												},
												{
													"description": "Flag to denote whether or not to include a member with elevated permissions who is not currently a member of the organization.",
													"key": "include_missing_member_with_elevated_permissions",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "organization_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-c3490fd0-7f3e-4f5a-b295-e31e9f44a3a9",
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id?include_members_count=true&include_missing_member_with_elevated_permissions=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"query": [
												{
													"description": "Flag to denote whether or not the organization's members count should be included in the response.",
													"key": "include_members_count",
													"value": "true"
												},
												{
													"description": "Flag to denote whether or not to include a member with elevated permissions who is not currently a member of the organization.",
													"key": "include_missing_member_with_elevated_permissions",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "organization_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update an organization",
							"id": "781399-748a9e8e-3123-46c8-9217-eff1f93529a4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 1841,\n    \"key_1\": \"string\",\n    \"key_2\": \"string\",\n    \"key_3\": 5732,\n    \"key_4\": 1212\n  },\n  \"private_metadata\": {\n    \"key_0\": 8341,\n    \"key_1\": 9850.049763469939,\n    \"key_2\": \"string\"\n  },\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"max_allowed_memberships\": 3924,\n  \"admin_delete_enabled\": false,\n  \"created_at\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization_id"
									],
									"variable": [
										{
											"id": "b0571f1d-50a3-4729-9ded-dcfe50747123",
											"key": "organization_id",
											"value": "string",
											"description": "The ID of the organization to update"
										}
									]
								},
								"description": "Updates an existing organization"
							},
							"response": [
								{
									"id": "781399-c3e600f7-a946-4bd2-a64a-e5c916092886",
									"name": "An organization",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 1841,\n    \"key_1\": \"string\",\n    \"key_2\": \"string\",\n    \"key_3\": 5732,\n    \"key_4\": 1212\n  },\n  \"private_metadata\": {\n    \"key_0\": 8341,\n    \"key_1\": 9850.049763469939,\n    \"key_2\": \"string\"\n  },\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"max_allowed_memberships\": 3924,\n  \"admin_delete_enabled\": false,\n  \"created_at\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"organization\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"has_image\": true,\n  \"max_allowed_memberships\": 1790,\n  \"admin_delete_enabled\": false,\n  \"public_metadata\": {\n    \"key_0\": false\n  },\n  \"created_at\": 6202,\n  \"updated_at\": 6863,\n  \"image_url\": \"string\",\n  \"members_count\": 1167,\n  \"missing_member_with_elevated_permissions\": false,\n  \"pending_invitations_count\": 5670,\n  \"private_metadata\": {\n    \"key_0\": true\n  },\n  \"created_by\": \"string\"\n}"
								},
								{
									"id": "781399-38cd5a7c-0a59-4d3c-a82b-dddbeb704fbb",
									"name": "Resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 1841,\n    \"key_1\": \"string\",\n    \"key_2\": \"string\",\n    \"key_3\": 5732,\n    \"key_4\": 1212\n  },\n  \"private_metadata\": {\n    \"key_0\": 8341,\n    \"key_1\": 9850.049763469939,\n    \"key_2\": \"string\"\n  },\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"max_allowed_memberships\": 3924,\n  \"admin_delete_enabled\": false,\n  \"created_at\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-f5ea84fc-8af1-4bdd-b396-a32a66f7d30f",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 1841,\n    \"key_1\": \"string\",\n    \"key_2\": \"string\",\n    \"key_3\": 5732,\n    \"key_4\": 1212\n  },\n  \"private_metadata\": {\n    \"key_0\": 8341,\n    \"key_1\": 9850.049763469939,\n    \"key_2\": \"string\"\n  },\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"max_allowed_memberships\": 3924,\n  \"admin_delete_enabled\": false,\n  \"created_at\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-90bb3c6e-5777-4cba-aee0-c156698f7cb8",
									"name": "Resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 1841,\n    \"key_1\": \"string\",\n    \"key_2\": \"string\",\n    \"key_3\": 5732,\n    \"key_4\": 1212\n  },\n  \"private_metadata\": {\n    \"key_0\": 8341,\n    \"key_1\": 9850.049763469939,\n    \"key_2\": \"string\"\n  },\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"max_allowed_memberships\": 3924,\n  \"admin_delete_enabled\": false,\n  \"created_at\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-dc48b267-4f29-4ad9-b244-f5b75682554c",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"public_metadata\": {\n    \"key_0\": 1841,\n    \"key_1\": \"string\",\n    \"key_2\": \"string\",\n    \"key_3\": 5732,\n    \"key_4\": 1212\n  },\n  \"private_metadata\": {\n    \"key_0\": 8341,\n    \"key_1\": 9850.049763469939,\n    \"key_2\": \"string\"\n  },\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"max_allowed_memberships\": 3924,\n  \"admin_delete_enabled\": false,\n  \"created_at\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete an organization",
							"id": "781399-4d310ed3-cfad-4743-a6a5-9237e8bd0865",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:organization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":organization_id"
									],
									"variable": [
										{
											"id": "3d8e60be-e8dd-40b6-97e8-428ba4fc4c1b",
											"key": "organization_id",
											"value": "string",
											"description": "The ID of the organization to delete"
										}
									]
								},
								"description": "Deletes the given organization.\nPlease note that deleting an organization will also delete all memberships and invitations.\nThis is not reversible."
							},
							"response": [
								{
									"id": "781399-e16c06d1-bac0-456c-aa2f-b9744250dde2",
									"name": "Deleted Object",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
								},
								{
									"id": "781399-1066ce31-6f02-4b16-9f23-0b09da6e9176",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/:organization_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												":organization_id"
											],
											"variable": [
												{
													"key": "organization_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-3fd80867-7cc0-40d7-af00-b51055553258"
				},
				{
					"name": "Get a list of organizations for an instance",
					"id": "781399-f6ce3e6b-0324-446d-aced-8e9f63c850c3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organizations?include_members_count=true&include_missing_member_with_elevated_permissions=true&query=string&user_id=string&user_id=string&organization_id=string&organization_id=string&order_by=-created_at&limit=10&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							],
							"query": [
								{
									"key": "include_members_count",
									"value": "true",
									"description": "Flag to denote whether the member counts of each organization should be included in the response or not."
								},
								{
									"key": "include_missing_member_with_elevated_permissions",
									"value": "true",
									"description": "Flag to denote whether or not to include a member with elevated permissions who is not currently a member of the organization."
								},
								{
									"key": "query",
									"value": "string",
									"description": "Returns organizations with ID, name, or slug that match the given query.\nUses exact match for organization ID and partial match for name and slug."
								},
								{
									"key": "user_id",
									"value": "string",
									"description": "Returns organizations that include any of the specified user IDs as members. Any user IDs not found are ignored.\nFor each user ID, the `+` and `-` can be prepended to the ID, which denote whether the\nrespective organization should be included or excluded from the result set."
								},
								{
									"key": "user_id",
									"value": "string",
									"description": "Returns organizations that include any of the specified user IDs as members. Any user IDs not found are ignored.\nFor each user ID, the `+` and `-` can be prepended to the ID, which denote whether the\nrespective organization should be included or excluded from the result set."
								},
								{
									"key": "organization_id",
									"value": "string",
									"description": "Returns organizations with the organization IDs specified. Any organization IDs not found are ignored.\nFor each organization ID, the `+` and `-` can be prepended to the ID, which denote whether the\nrespective organization should be included or excluded from the result set. Accepts up to 100 organization IDs.\nExample: ?organization_id=+org_1&organization_id=-org_2"
								},
								{
									"key": "organization_id",
									"value": "string",
									"description": "Returns organizations with the organization IDs specified. Any organization IDs not found are ignored.\nFor each organization ID, the `+` and `-` can be prepended to the ID, which denote whether the\nrespective organization should be included or excluded from the result set. Accepts up to 100 organization IDs.\nExample: ?organization_id=+org_1&organization_id=-org_2"
								},
								{
									"key": "order_by",
									"value": "-created_at",
									"description": "Allows to return organizations in a particular order.\nAt the moment, you can order the returned organizations either by their `name`, `created_at` or `members_count`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organizations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								}
							]
						},
						"description": "This request returns the list of organizations for an instance.\nResults can be paginated using the optional `limit` and `offset` query parameters.\nThe organizations are ordered by descending creation date.\nMost recent organizations will be returned first."
					},
					"response": [
						{
							"id": "781399-a44be0c8-34c4-4665-999e-01e1937af722",
							"name": "A list of organizations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?include_members_count=true&include_missing_member_with_elevated_permissions=true&query=string&user_id=string&organization_id=string&order_by=-created_at&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"description": "Flag to denote whether the member counts of each organization should be included in the response or not.",
											"key": "include_members_count",
											"value": "true"
										},
										{
											"description": "Flag to denote whether or not to include a member with elevated permissions who is not currently a member of the organization.",
											"key": "include_missing_member_with_elevated_permissions",
											"value": "true"
										},
										{
											"description": "Returns organizations with ID, name, or slug that match the given query.\nUses exact match for organization ID and partial match for name and slug.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Returns organizations that include any of the specified user IDs as members. Any user IDs not found are ignored.\nFor each user ID, the `+` and `-` can be prepended to the ID, which denote whether the\nrespective organization should be included or excluded from the result set.",
											"key": "user_id",
											"value": "string"
										},
										{
											"description": "Returns organizations with the organization IDs specified. Any organization IDs not found are ignored.\nFor each organization ID, the `+` and `-` can be prepended to the ID, which denote whether the\nrespective organization should be included or excluded from the result set. Accepts up to 100 organization IDs.\nExample: ?organization_id=+org_1&organization_id=-org_2",
											"key": "organization_id",
											"value": "string"
										},
										{
											"description": "Allows to return organizations in a particular order.\nAt the moment, you can order the returned organizations either by their `name`, `created_at` or `members_count`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organizations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"object\": \"organization\",\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"slug\": \"string\",\n      \"has_image\": true,\n      \"max_allowed_memberships\": 563,\n      \"admin_delete_enabled\": true,\n      \"public_metadata\": {\n        \"key_0\": 6849.017768046043\n      },\n      \"created_at\": 8685,\n      \"updated_at\": 8016,\n      \"image_url\": \"string\",\n      \"members_count\": 8314,\n      \"missing_member_with_elevated_permissions\": true,\n      \"pending_invitations_count\": 4753,\n      \"private_metadata\": {\n        \"key_0\": 6502.052165568099\n      },\n      \"created_by\": \"string\"\n    },\n    {\n      \"object\": \"organization\",\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"slug\": \"string\",\n      \"has_image\": true,\n      \"max_allowed_memberships\": 9149,\n      \"admin_delete_enabled\": true,\n      \"public_metadata\": {\n        \"key_0\": 657,\n        \"key_1\": \"string\",\n        \"key_2\": true\n      },\n      \"created_at\": 6529,\n      \"updated_at\": 263,\n      \"image_url\": \"string\",\n      \"members_count\": 7245,\n      \"missing_member_with_elevated_permissions\": false,\n      \"pending_invitations_count\": 1425,\n      \"private_metadata\": {\n        \"key_0\": 5246\n      },\n      \"created_by\": \"string\"\n    }\n  ],\n  \"total_count\": 4855\n}"
						},
						{
							"id": "781399-c06ed1ea-f78c-41ba-9306-7834ae879cd9",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?include_members_count=true&include_missing_member_with_elevated_permissions=true&query=string&user_id=string&organization_id=string&order_by=-created_at&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"description": "Flag to denote whether the member counts of each organization should be included in the response or not.",
											"key": "include_members_count",
											"value": "true"
										},
										{
											"description": "Flag to denote whether or not to include a member with elevated permissions who is not currently a member of the organization.",
											"key": "include_missing_member_with_elevated_permissions",
											"value": "true"
										},
										{
											"description": "Returns organizations with ID, name, or slug that match the given query.\nUses exact match for organization ID and partial match for name and slug.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Returns organizations that include any of the specified user IDs as members. Any user IDs not found are ignored.\nFor each user ID, the `+` and `-` can be prepended to the ID, which denote whether the\nrespective organization should be included or excluded from the result set.",
											"key": "user_id",
											"value": "string"
										},
										{
											"description": "Returns organizations with the organization IDs specified. Any organization IDs not found are ignored.\nFor each organization ID, the `+` and `-` can be prepended to the ID, which denote whether the\nrespective organization should be included or excluded from the result set. Accepts up to 100 organization IDs.\nExample: ?organization_id=+org_1&organization_id=-org_2",
											"key": "organization_id",
											"value": "string"
										},
										{
											"description": "Allows to return organizations in a particular order.\nAt the moment, you can order the returned organizations either by their `name`, `created_at` or `members_count`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organizations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-91114c54-4be8-411e-90c5-9f1483341af7",
							"name": "Authorization invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?include_members_count=true&include_missing_member_with_elevated_permissions=true&query=string&user_id=string&organization_id=string&order_by=-created_at&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"description": "Flag to denote whether the member counts of each organization should be included in the response or not.",
											"key": "include_members_count",
											"value": "true"
										},
										{
											"description": "Flag to denote whether or not to include a member with elevated permissions who is not currently a member of the organization.",
											"key": "include_missing_member_with_elevated_permissions",
											"value": "true"
										},
										{
											"description": "Returns organizations with ID, name, or slug that match the given query.\nUses exact match for organization ID and partial match for name and slug.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Returns organizations that include any of the specified user IDs as members. Any user IDs not found are ignored.\nFor each user ID, the `+` and `-` can be prepended to the ID, which denote whether the\nrespective organization should be included or excluded from the result set.",
											"key": "user_id",
											"value": "string"
										},
										{
											"description": "Returns organizations with the organization IDs specified. Any organization IDs not found are ignored.\nFor each organization ID, the `+` and `-` can be prepended to the ID, which denote whether the\nrespective organization should be included or excluded from the result set. Accepts up to 100 organization IDs.\nExample: ?organization_id=+org_1&organization_id=-org_2",
											"key": "organization_id",
											"value": "string"
										},
										{
											"description": "Allows to return organizations in a particular order.\nAt the moment, you can order the returned organizations either by their `name`, `created_at` or `members_count`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organizations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-1c073680-bf0a-43be-a100-b5a55a6b9fac",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?include_members_count=true&include_missing_member_with_elevated_permissions=true&query=string&user_id=string&organization_id=string&order_by=-created_at&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"description": "Flag to denote whether the member counts of each organization should be included in the response or not.",
											"key": "include_members_count",
											"value": "true"
										},
										{
											"description": "Flag to denote whether or not to include a member with elevated permissions who is not currently a member of the organization.",
											"key": "include_missing_member_with_elevated_permissions",
											"value": "true"
										},
										{
											"description": "Returns organizations with ID, name, or slug that match the given query.\nUses exact match for organization ID and partial match for name and slug.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Returns organizations that include any of the specified user IDs as members. Any user IDs not found are ignored.\nFor each user ID, the `+` and `-` can be prepended to the ID, which denote whether the\nrespective organization should be included or excluded from the result set.",
											"key": "user_id",
											"value": "string"
										},
										{
											"description": "Returns organizations with the organization IDs specified. Any organization IDs not found are ignored.\nFor each organization ID, the `+` and `-` can be prepended to the ID, which denote whether the\nrespective organization should be included or excluded from the result set. Accepts up to 100 organization IDs.\nExample: ?organization_id=+org_1&organization_id=-org_2",
											"key": "organization_id",
											"value": "string"
										},
										{
											"description": "Allows to return organizations in a particular order.\nAt the moment, you can order the returned organizations either by their `name`, `created_at` or `members_count`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want organizations to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				},
				{
					"name": "Create an organization",
					"id": "781399-d43f5b74-ed6c-4ee7-a70f-6244d07f79aa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"created_by\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 6894,\n    \"key_1\": false,\n    \"key_2\": \"string\"\n  },\n  \"public_metadata\": {\n    \"key_0\": 3359\n  },\n  \"slug\": \"string\",\n  \"max_allowed_memberships\": 9265,\n  \"created_at\": \"string\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						},
						"description": "Creates a new organization with the given name for an instance.\nYou can specify an optional slug for the new organization.\nIf provided, the organization slug can contain only lowercase alphanumeric characters (letters and digits) and the dash \"-\".\nOrganization slugs must be unique for the instance.\nYou can provide additional metadata for the organization and set any custom attribute you want.\nOrganizations support private and public metadata.\nPrivate metadata can only be accessed from the Backend API.\nPublic metadata can be accessed from the Backend API, and are read-only from the Frontend API.\nThe `created_by` user will see this as their [active organization](https://clerk.com/docs/organizations/overview#active-organization)\nthe next time they create a session, presuming they don't explicitly set a different organization as active before then."
					},
					"response": [
						{
							"id": "781399-e531ea47-25ce-4291-866e-5ae702241c92",
							"name": "An organization",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"created_by\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 6894,\n    \"key_1\": false,\n    \"key_2\": \"string\"\n  },\n  \"public_metadata\": {\n    \"key_0\": 3359\n  },\n  \"slug\": \"string\",\n  \"max_allowed_memberships\": 9265,\n  \"created_at\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"organization\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"slug\": \"string\",\n  \"has_image\": true,\n  \"max_allowed_memberships\": 1790,\n  \"admin_delete_enabled\": false,\n  \"public_metadata\": {\n    \"key_0\": false\n  },\n  \"created_at\": 6202,\n  \"updated_at\": 6863,\n  \"image_url\": \"string\",\n  \"members_count\": 1167,\n  \"missing_member_with_elevated_permissions\": false,\n  \"pending_invitations_count\": 5670,\n  \"private_metadata\": {\n    \"key_0\": true\n  },\n  \"created_by\": \"string\"\n}"
						},
						{
							"id": "781399-b432a52d-b1dc-4b88-a0ea-09fbce500a6a",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"created_by\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 6894,\n    \"key_1\": false,\n    \"key_2\": \"string\"\n  },\n  \"public_metadata\": {\n    \"key_0\": 3359\n  },\n  \"slug\": \"string\",\n  \"max_allowed_memberships\": 9265,\n  \"created_at\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-39fa5dd9-f88f-4dbb-b921-6c15f56ae8d0",
							"name": "Authorization invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"created_by\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 6894,\n    \"key_1\": false,\n    \"key_2\": \"string\"\n  },\n  \"public_metadata\": {\n    \"key_0\": 3359\n  },\n  \"slug\": \"string\",\n  \"max_allowed_memberships\": 9265,\n  \"created_at\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-2e70ccc6-a2c1-49d1-bb36-721f2fe9f9ed",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"created_by\": \"string\",\n  \"private_metadata\": {\n    \"key_0\": 6894,\n    \"key_1\": false,\n    \"key_2\": \"string\"\n  },\n  \"public_metadata\": {\n    \"key_0\": 3359\n  },\n  \"slug\": \"string\",\n  \"max_allowed_memberships\": 9265,\n  \"created_at\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-bc039eb6-d618-4200-b649-791063254170"
		},
		{
			"name": "organization_domains",
			"item": [
				{
					"name": "List all organization domains",
					"id": "781399-e65f49b1-1d9b-4a1e-9138-869a4b30a474",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organization_domains?organization_id=string&verified=true&enrollment_mode=manual_invitation,automatic_invitation&query=string&order_by=-created_at&offset=0&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organization_domains"
							],
							"query": [
								{
									"key": "organization_id",
									"value": "string",
									"description": "The ID of the organization to filter domains by"
								},
								{
									"key": "verified",
									"value": "true",
									"description": "Filter by verification status"
								},
								{
									"key": "enrollment_mode",
									"value": "manual_invitation,automatic_invitation",
									"description": "Filter by enrollment mode"
								},
								{
									"key": "query",
									"value": "string",
									"description": "Search domains by name or organization ID.\nIf the query starts with \"org_\", it will search by exact organization ID match.\nOtherwise, it performs a case-insensitive partial match on the domain name.\n\nNote: An empty string or whitespace-only value is not allowed and will result in a validation error.\n"
								},
								{
									"key": "order_by",
									"value": "-created_at",
									"description": "Allows to return organization domains in a particular order.\nAt the moment, you can order the returned domains by their `name` or `created_at`.\nIn order to specify the direction, you can use the `+/-` symbols prepended to the property to order by.\nFor example, if you want domains to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.\n"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								}
							]
						},
						"description": "Retrieves a list of all organization domains within the current instance.\nThis endpoint can be used to list all domains across all organizations\nor filter domains by organization, verification status, enrollment mode, or search query.\n\nThe response includes pagination information and details about each domain\nincluding its verification status, enrollment mode, and associated counts.\n"
					},
					"response": [
						{
							"id": "781399-96f3db70-ee13-46b6-b8ca-e09fe7b026ac",
							"name": "A list of organization domains",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_domains?organization_id=string&verified=true&enrollment_mode=manual_invitation,automatic_invitation&query=string&order_by=-created_at&offset=0&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_domains"
									],
									"query": [
										{
											"description": "The ID of the organization to filter domains by",
											"key": "organization_id",
											"value": "string"
										},
										{
											"description": "Filter by verification status",
											"key": "verified",
											"value": "true"
										},
										{
											"description": "Filter by enrollment mode",
											"key": "enrollment_mode",
											"value": "manual_invitation,automatic_invitation"
										},
										{
											"description": "Search domains by name or organization ID.\nIf the query starts with \"org_\", it will search by exact organization ID match.\nOtherwise, it performs a case-insensitive partial match on the domain name.\n\nNote: An empty string or whitespace-only value is not allowed and will result in a validation error.\n",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Allows to return organization domains in a particular order.\nAt the moment, you can order the returned domains by their `name` or `created_at`.\nIn order to specify the direction, you can use the `+/-` symbols prepended to the property to order by.\nFor example, if you want domains to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.\n",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"object\": \"organization_domain\",\n      \"id\": \"string\",\n      \"organization_id\": \"string\",\n      \"name\": \"string\",\n      \"enrollment_mode\": \"automatic_invitation\",\n      \"affiliation_email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"verified\",\n        \"strategy\": \"string\",\n        \"attempts\": 2136,\n        \"expire_at\": 490\n      },\n      \"total_pending_invitations\": 4241,\n      \"total_pending_suggestions\": 9335,\n      \"created_at\": 8123,\n      \"updated_at\": 8708,\n      \"public_organization_data\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": false,\n        \"image_url\": \"string\"\n      }\n    },\n    {\n      \"object\": \"organization_domain\",\n      \"id\": \"string\",\n      \"organization_id\": \"string\",\n      \"name\": \"string\",\n      \"enrollment_mode\": \"manual_invitation\",\n      \"affiliation_email_address\": \"string\",\n      \"verification\": {\n        \"status\": \"unverified\",\n        \"strategy\": \"string\",\n        \"attempts\": 2681,\n        \"expire_at\": 8490\n      },\n      \"total_pending_invitations\": 6684,\n      \"total_pending_suggestions\": 692,\n      \"created_at\": 7332,\n      \"updated_at\": 2432,\n      \"public_organization_data\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": true,\n        \"image_url\": \"string\"\n      }\n    }\n  ],\n  \"total_count\": 1049\n}"
						},
						{
							"id": "781399-d2b2d600-21aa-4716-9c11-c2cb7c433b72",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_domains?organization_id=string&verified=true&enrollment_mode=manual_invitation,automatic_invitation&query=string&order_by=-created_at&offset=0&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_domains"
									],
									"query": [
										{
											"description": "The ID of the organization to filter domains by",
											"key": "organization_id",
											"value": "string"
										},
										{
											"description": "Filter by verification status",
											"key": "verified",
											"value": "true"
										},
										{
											"description": "Filter by enrollment mode",
											"key": "enrollment_mode",
											"value": "manual_invitation,automatic_invitation"
										},
										{
											"description": "Search domains by name or organization ID.\nIf the query starts with \"org_\", it will search by exact organization ID match.\nOtherwise, it performs a case-insensitive partial match on the domain name.\n\nNote: An empty string or whitespace-only value is not allowed and will result in a validation error.\n",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Allows to return organization domains in a particular order.\nAt the moment, you can order the returned domains by their `name` or `created_at`.\nIn order to specify the direction, you can use the `+/-` symbols prepended to the property to order by.\nFor example, if you want domains to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.\n",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-5f4d2044-7e41-488c-9bff-f7ffe4e21afd",
							"name": "Authorization invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_domains?organization_id=string&verified=true&enrollment_mode=manual_invitation,automatic_invitation&query=string&order_by=-created_at&offset=0&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_domains"
									],
									"query": [
										{
											"description": "The ID of the organization to filter domains by",
											"key": "organization_id",
											"value": "string"
										},
										{
											"description": "Filter by verification status",
											"key": "verified",
											"value": "true"
										},
										{
											"description": "Filter by enrollment mode",
											"key": "enrollment_mode",
											"value": "manual_invitation,automatic_invitation"
										},
										{
											"description": "Search domains by name or organization ID.\nIf the query starts with \"org_\", it will search by exact organization ID match.\nOtherwise, it performs a case-insensitive partial match on the domain name.\n\nNote: An empty string or whitespace-only value is not allowed and will result in a validation error.\n",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Allows to return organization domains in a particular order.\nAt the moment, you can order the returned domains by their `name` or `created_at`.\nIn order to specify the direction, you can use the `+/-` symbols prepended to the property to order by.\nFor example, if you want domains to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.\n",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-5f39f7e2-941e-4d27-b6ca-9f1edfb596b0",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_domains?organization_id=string&verified=true&enrollment_mode=manual_invitation,automatic_invitation&query=string&order_by=-created_at&offset=0&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_domains"
									],
									"query": [
										{
											"description": "The ID of the organization to filter domains by",
											"key": "organization_id",
											"value": "string"
										},
										{
											"description": "Filter by verification status",
											"key": "verified",
											"value": "true"
										},
										{
											"description": "Filter by enrollment mode",
											"key": "enrollment_mode",
											"value": "manual_invitation,automatic_invitation"
										},
										{
											"description": "Search domains by name or organization ID.\nIf the query starts with \"org_\", it will search by exact organization ID match.\nOtherwise, it performs a case-insensitive partial match on the domain name.\n\nNote: An empty string or whitespace-only value is not allowed and will result in a validation error.\n",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Allows to return organization domains in a particular order.\nAt the moment, you can order the returned domains by their `name` or `created_at`.\nIn order to specify the direction, you can use the `+/-` symbols prepended to the property to order by.\nFor example, if you want domains to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied.\nDefaults to `-created_at`.\n",
											"key": "order_by",
											"value": "-created_at"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-781c3b4f-12ad-43b9-a7db-8ebcd57103c5"
		},
		{
			"name": "proxy_checks",
			"item": [
				{
					"name": "Verify the proxy configuration for your domain",
					"id": "781399-f3148bca-2235-4679-a2ba-96d878d58d79",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"domain_id\": \"string\",\n  \"proxy_url\": \"string\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/proxy_checks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"proxy_checks"
							]
						},
						"description": "This endpoint can be used to validate that a proxy-enabled domain is operational.\nIt tries to verify that the proxy URL provided in the parameters maps to a functional proxy that can reach the Clerk Frontend API.\n\nYou can use this endpoint before you set a proxy URL for a domain. This way you can ensure that switching to proxy-based\nconfiguration will not lead to downtime for your instance.\n\nThe `proxy_url` parameter allows for testing proxy configurations for domains that don't have a proxy URL yet, or operate on\na different proxy URL than the one provided. It can also be used to re-validate a domain that is already configured to work with a proxy."
					},
					"response": [
						{
							"id": "781399-720ee3df-9b68-40d8-a4c9-e92599882a3e",
							"name": "Health check information about a domain's proxy configuration validation attempt.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain_id\": \"string\",\n  \"proxy_url\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/proxy_checks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy_checks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"proxy_check\",\n  \"id\": \"string\",\n  \"domain_id\": \"string\",\n  \"last_run_at\": 4433,\n  \"proxy_url\": \"string\",\n  \"successful\": true,\n  \"created_at\": 6670,\n  \"updated_at\": 6891\n}"
						},
						{
							"id": "781399-1f3fad5e-2cd4-4f07-82e2-e331625c4e35",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain_id\": \"string\",\n  \"proxy_url\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/proxy_checks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy_checks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-f2b78741-c8f3-4a32-b272-315ed82cc45d",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain_id\": \"string\",\n  \"proxy_url\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/proxy_checks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"proxy_checks"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-90bd1e3a-abd0-43ee-beef-5316a3affb88"
		},
		{
			"name": "redirect_urls",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a redirect URL",
							"id": "781399-d5cd5ba8-5a91-49d3-aa6b-26eb1edff2d4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/redirect_urls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"redirect_urls",
										":id"
									],
									"variable": [
										{
											"id": "d9359e67-3deb-44d8-91f8-5fac1e4e9071",
											"key": "id",
											"value": "string",
											"description": "The ID of the redirect URL"
										}
									]
								},
								"description": "Retrieve the details of the redirect URL with the given ID"
							},
							"response": [
								{
									"id": "781399-5949e670-660a-4eb1-bbea-85e0edb77f14",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/redirect_urls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"redirect_urls",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"redirect_url\",\n  \"id\": \"string\",\n  \"url\": \"string\",\n  \"created_at\": 6087,\n  \"updated_at\": 4113\n}"
								},
								{
									"id": "781399-0df0a15e-848b-4d84-afdb-be28515b02df",
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/redirect_urls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"redirect_urls",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete a redirect URL",
							"id": "781399-703b99c5-1dff-4997-8309-9d4d83f9704f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/redirect_urls/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"redirect_urls",
										":id"
									],
									"variable": [
										{
											"id": "6ab10445-3a32-428f-b44d-6e1ae009af2d",
											"key": "id",
											"value": "string",
											"description": "The ID of the redirect URL"
										}
									]
								},
								"description": "Remove the selected redirect URL from the whitelist of the instance"
							},
							"response": [
								{
									"id": "781399-2b3c6b23-c68e-420b-b106-4c0c730170b6",
									"name": "Deleted Object",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/redirect_urls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"redirect_urls",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
								},
								{
									"id": "781399-d94808d2-df75-4e60-a6f0-8643944ad761",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/redirect_urls/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"redirect_urls",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-caf7e859-ca42-4be8-9f99-9af3cf1c722b"
				},
				{
					"name": "List all redirect URLs",
					"id": "781399-431df6e5-1479-4740-809d-fd2798e54e7b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/redirect_urls?paginated=true&limit=10&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"redirect_urls"
							],
							"query": [
								{
									"key": "paginated",
									"value": "true",
									"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								}
							]
						},
						"description": "Lists all whitelisted redirect_urls for the instance"
					},
					"response": [
						{
							"id": "781399-de7f82f6-57f8-45f5-9c55-8053dd2a0bcf",
							"name": "List of Redirect URLs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/redirect_urls?paginated=true&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"redirect_urls"
									],
									"query": [
										{
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
											"key": "paginated",
											"value": "true"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n  {\n    \"object\": \"redirect_url\",\n    \"id\": \"string\",\n    \"url\": \"string\",\n    \"created_at\": 2443,\n    \"updated_at\": 814\n  },\n  {\n    \"object\": \"redirect_url\",\n    \"id\": \"string\",\n    \"url\": \"string\",\n    \"created_at\": 7131,\n    \"updated_at\": 5809\n  }\n]"
						}
					]
				},
				{
					"name": "Create a redirect URL",
					"id": "781399-2b776ff6-9eab-4d76-93e3-9490c303fa5d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"url\": \"string\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/redirect_urls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"redirect_urls"
							]
						},
						"description": "Create a redirect URL"
					},
					"response": [
						{
							"id": "781399-1e20b34b-c10d-40a3-b756-bd1a6b8d292c",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/redirect_urls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"redirect_urls"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"redirect_url\",\n  \"id\": \"string\",\n  \"url\": \"string\",\n  \"created_at\": 6087,\n  \"updated_at\": 4113\n}"
						},
						{
							"id": "781399-b486664f-f2c0-445a-92d3-60cf607222a5",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/redirect_urls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"redirect_urls"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-9ec4f6e8-9f0e-42cb-be0c-b957858c07fa",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/redirect_urls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"redirect_urls"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-7b0930ea-f7af-4e92-9125-88f60a5a24a7"
		},
		{
			"name": "sign_in_tokens",
			"item": [
				{
					"name": "{sign_in_token_id}",
					"item": [
						{
							"name": "revoke",
							"item": [
								{
									"name": "Revoke the given sign-in token",
									"id": "781399-752396e7-fdd2-48f5-9cab-e5a8e7cd2362",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sign_in_tokens/:sign_in_token_id/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sign_in_tokens",
												":sign_in_token_id",
												"revoke"
											],
											"variable": [
												{
													"id": "e59e5393-876c-4c89-9aa4-29b269c7aef0",
													"key": "sign_in_token_id",
													"value": "string",
													"description": "The ID of the sign-in token to be revoked"
												}
											]
										},
										"description": "Revokes a pending sign-in token"
									},
									"response": [
										{
											"id": "781399-964d0839-d2d3-470c-bfbd-c0771d937a02",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sign_in_tokens/:sign_in_token_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sign_in_tokens",
														":sign_in_token_id",
														"revoke"
													],
													"variable": [
														{
															"key": "sign_in_token_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"sign_in_token\",\n  \"id\": \"string\",\n  \"user_id\": \"string\",\n  \"status\": \"pending\",\n  \"created_at\": 6660,\n  \"updated_at\": 9273,\n  \"token\": \"string\",\n  \"url\": \"string\"\n}"
										},
										{
											"id": "781399-1d088698-af4c-4142-ad09-74e876fea0cb",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sign_in_tokens/:sign_in_token_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sign_in_tokens",
														":sign_in_token_id",
														"revoke"
													],
													"variable": [
														{
															"key": "sign_in_token_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-3dfbbfc0-9995-4577-8a80-f5004f8d90ae",
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/sign_in_tokens/:sign_in_token_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"sign_in_tokens",
														":sign_in_token_id",
														"revoke"
													],
													"variable": [
														{
															"key": "sign_in_token_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-d4eeb540-5cf9-4a06-9ac2-cb3b0f6a832e"
						}
					],
					"id": "781399-7427ed1b-e926-4424-8849-38755591e076"
				},
				{
					"name": "Create sign-in token",
					"id": "781399-d7d976e4-87dd-430c-b840-514794118826",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"string\",\n  \"expires_in_seconds\": 2592000\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/sign_in_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sign_in_tokens"
							]
						},
						"description": "Creates a new sign-in token and associates it with the given user.\nBy default, sign-in tokens expire in 30 days.\nYou can optionally supply a different duration in seconds using the `expires_in_seconds` property."
					},
					"response": [
						{
							"id": "781399-4f14766c-ba16-4d0d-ad0f-016a4e92150a",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"expires_in_seconds\": 2592000\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sign_in_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sign_in_tokens"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"sign_in_token\",\n  \"id\": \"string\",\n  \"user_id\": \"string\",\n  \"status\": \"pending\",\n  \"created_at\": 6660,\n  \"updated_at\": 9273,\n  \"token\": \"string\",\n  \"url\": \"string\"\n}"
						},
						{
							"id": "781399-2d0177ec-e2bf-4cd9-8407-7d9d5e262c3e",
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"expires_in_seconds\": 2592000\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sign_in_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sign_in_tokens"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-6fcd03f0-c1be-478e-a00d-b18b0731d61a",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user_id\": \"string\",\n  \"expires_in_seconds\": 2592000\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sign_in_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sign_in_tokens"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-8b3c8b45-b8c3-4821-9b3d-7599a5ce4570"
		},
		{
			"name": "sign_ups",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a sign-up by ID",
							"id": "781399-5ab8229e-4522-45e3-818b-662d953c3942",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sign_ups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sign_ups",
										":id"
									],
									"variable": [
										{
											"id": "d0535078-4a2f-4a8e-b4ab-db3fed7cd7e9",
											"key": "id",
											"value": "string",
											"description": "The ID of the sign-up to retrieve"
										}
									]
								},
								"description": "Retrieve the details of the sign-up with the given ID"
							},
							"response": [
								{
									"id": "781399-c2bf60b8-de1c-41fc-9c28-1c0639f411b4",
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sign_ups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sign_ups",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"sign_up_attempt\",\n  \"id\": \"string\",\n  \"status\": \"complete\",\n  \"required_fields\": [\n    \"string\",\n    \"string\"\n  ],\n  \"optional_fields\": [\n    \"string\",\n    \"string\"\n  ],\n  \"missing_fields\": [\n    \"string\",\n    \"string\"\n  ],\n  \"unverified_fields\": [\n    \"string\",\n    \"string\"\n  ],\n  \"verifications\": {\n    \"email_address\": {\n      \"next_action\": \"\",\n      \"supported_strategies\": [\n        \"string\",\n        \"string\"\n      ],\n      \"key_0\": false,\n      \"key_1\": true\n    },\n    \"phone_number\": {\n      \"next_action\": \"needs_prepare\",\n      \"supported_strategies\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    \"web3_wallet\": {\n      \"next_action\": \"needs_prepare\",\n      \"supported_strategies\": [\n        \"string\",\n        \"string\"\n      ],\n      \"key_0\": false\n    },\n    \"external_account\": {}\n  },\n  \"username\": \"string\",\n  \"email_address\": \"string\",\n  \"phone_number\": \"string\",\n  \"web3_wallet\": \"string\",\n  \"password_enabled\": false,\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"custom_action\": true,\n  \"external_id\": \"string\",\n  \"created_session_id\": \"string\",\n  \"created_user_id\": \"string\",\n  \"abandon_at\": 1700690400000,\n  \"legal_accepted_at\": 1700690400000,\n  \"unsafe_metadata\": {\n    \"key_0\": false,\n    \"key_1\": \"string\"\n  },\n  \"public_metadata\": {\n    \"key_0\": 300\n  },\n  \"locale\": \"en-US\",\n  \"external_account\": {}\n}"
								},
								{
									"id": "781399-83224a3a-3cd1-44be-a44c-d8ca3939e1cc",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sign_ups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sign_ups",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update a sign-up",
							"id": "781399-58179442-f746-4372-a962-d90ba88c2af6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"external_id\": \"string\",\n  \"custom_action\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/sign_ups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sign_ups",
										":id"
									],
									"variable": [
										{
											"id": "a2f03af3-204c-4d9d-99ff-3ee2db07fae3",
											"key": "id",
											"value": "string",
											"description": "The ID of the sign-up to update"
										}
									]
								},
								"description": "Update the sign-up with the given ID"
							},
							"response": [
								{
									"id": "781399-aa98709b-601d-44d9-bbfe-f452d632173c",
									"name": "Success",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"external_id\": \"string\",\n  \"custom_action\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sign_ups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sign_ups",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"sign_up_attempt\",\n  \"id\": \"string\",\n  \"status\": \"complete\",\n  \"required_fields\": [\n    \"string\",\n    \"string\"\n  ],\n  \"optional_fields\": [\n    \"string\",\n    \"string\"\n  ],\n  \"missing_fields\": [\n    \"string\",\n    \"string\"\n  ],\n  \"unverified_fields\": [\n    \"string\",\n    \"string\"\n  ],\n  \"verifications\": {\n    \"email_address\": {\n      \"next_action\": \"\",\n      \"supported_strategies\": [\n        \"string\",\n        \"string\"\n      ],\n      \"key_0\": false,\n      \"key_1\": true\n    },\n    \"phone_number\": {\n      \"next_action\": \"needs_prepare\",\n      \"supported_strategies\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    \"web3_wallet\": {\n      \"next_action\": \"needs_prepare\",\n      \"supported_strategies\": [\n        \"string\",\n        \"string\"\n      ],\n      \"key_0\": false\n    },\n    \"external_account\": {}\n  },\n  \"username\": \"string\",\n  \"email_address\": \"string\",\n  \"phone_number\": \"string\",\n  \"web3_wallet\": \"string\",\n  \"password_enabled\": false,\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"custom_action\": true,\n  \"external_id\": \"string\",\n  \"created_session_id\": \"string\",\n  \"created_user_id\": \"string\",\n  \"abandon_at\": 1700690400000,\n  \"legal_accepted_at\": 1700690400000,\n  \"unsafe_metadata\": {\n    \"key_0\": false,\n    \"key_1\": \"string\"\n  },\n  \"public_metadata\": {\n    \"key_0\": 300\n  },\n  \"locale\": \"en-US\",\n  \"external_account\": {}\n}"
								},
								{
									"id": "781399-1617b2d7-fcca-4967-9dfb-e0547d1b419b",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"external_id\": \"string\",\n  \"custom_action\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/sign_ups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sign_ups",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-1c00d363-00ab-4385-9fb1-24e82cf21326"
				}
			],
			"id": "781399-3cfb2d5f-aa9f-4b7c-b23b-b193520c1e72"
		},
		{
			"name": "oauth_applications",
			"item": [
				{
					"name": "{oauth_application_id}",
					"item": [
						{
							"name": "rotate_secret",
							"item": [
								{
									"name": "Rotate the client secret of the given OAuth application",
									"id": "781399-e58cc050-4a0b-4eb7-84bf-6698d17a18e1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id/rotate_secret",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												":oauth_application_id",
												"rotate_secret"
											],
											"variable": [
												{
													"id": "825fd8e6-127a-4fcb-b6d8-72b160a6151e",
													"key": "oauth_application_id",
													"value": "string",
													"description": "The ID of the OAuth application for which to rotate the client secret"
												}
											]
										},
										"description": "Rotates the OAuth application's client secret.\nWhen the client secret is rotated, make sure to update it in authorized OAuth clients."
									},
									"response": [
										{
											"id": "781399-1cb385c7-b3ab-4042-a833-724a4b2b60af",
											"name": "An OAuth application with client secret",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id/rotate_secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oauth_applications",
														":oauth_application_id",
														"rotate_secret"
													],
													"variable": [
														{
															"key": "oauth_application_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"oauth_application\",\n  \"id\": \"string\",\n  \"instance_id\": \"string\",\n  \"name\": \"string\",\n  \"dynamically_registered\": true,\n  \"consent_screen_enabled\": false,\n  \"pkce_required\": true,\n  \"public\": true,\n  \"client_id\": \"string\",\n  \"client_uri\": \"string\",\n  \"client_image_url\": \"string\",\n  \"scopes\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"authorize_url\": \"string\",\n  \"token_fetch_url\": \"string\",\n  \"user_info_url\": \"string\",\n  \"discovery_url\": \"string\",\n  \"token_introspection_url\": \"string\",\n  \"created_at\": 3369,\n  \"updated_at\": 9044,\n  \"client_secret\": \"string\"\n}"
										},
										{
											"id": "781399-8702bd1d-e7de-4e06-b4b6-1dc241cfcbb3",
											"name": "Authorization invalid",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id/rotate_secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oauth_applications",
														":oauth_application_id",
														"rotate_secret"
													],
													"variable": [
														{
															"key": "oauth_application_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-85267b6f-bf18-4567-98bd-920478334775",
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id/rotate_secret",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oauth_applications",
														":oauth_application_id",
														"rotate_secret"
													],
													"variable": [
														{
															"key": "oauth_application_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-75ade8b1-9f81-4103-96e5-469d4cce01ca"
						},
						{
							"name": "Retrieve an OAuth application by ID",
							"id": "781399-0259788b-8801-4b0e-a4f9-2ea5d9d5249a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth_applications",
										":oauth_application_id"
									],
									"variable": [
										{
											"id": "68365a32-cbad-4782-bad2-060f359f0cee",
											"key": "oauth_application_id",
											"value": "string",
											"description": "The ID of the OAuth application"
										}
									]
								},
								"description": "Fetches the OAuth application whose ID matches the provided `id` in the path."
							},
							"response": [
								{
									"id": "781399-7b27f7d1-3c5a-4bd2-a260-ca6af42f0f49",
									"name": "An OAuth application",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												":oauth_application_id"
											],
											"variable": [
												{
													"key": "oauth_application_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"oauth_application\",\n  \"id\": \"string\",\n  \"instance_id\": \"string\",\n  \"name\": \"string\",\n  \"dynamically_registered\": false,\n  \"consent_screen_enabled\": true,\n  \"pkce_required\": true,\n  \"public\": false,\n  \"client_id\": \"string\",\n  \"client_uri\": \"string\",\n  \"client_image_url\": \"string\",\n  \"scopes\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"authorize_url\": \"string\",\n  \"token_fetch_url\": \"string\",\n  \"user_info_url\": \"string\",\n  \"discovery_url\": \"string\",\n  \"token_introspection_url\": \"string\",\n  \"created_at\": 7930,\n  \"updated_at\": 6030\n}"
								},
								{
									"id": "781399-d88e8767-e744-402d-ad3e-35cdced3d9db",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												":oauth_application_id"
											],
											"variable": [
												{
													"key": "oauth_application_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-11fb5196-f073-480f-89ab-2b943186c4d4",
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												":oauth_application_id"
											],
											"variable": [
												{
													"key": "oauth_application_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update an OAuth application",
							"id": "781399-dc3e0eef-6132-411a-b9e5-26a72109327d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"scopes\": \"profile email public_metadata private_metadata\",\n  \"consent_screen_enabled\": false,\n  \"pkce_required\": false,\n  \"public\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth_applications",
										":oauth_application_id"
									],
									"variable": [
										{
											"id": "903bff89-08ca-4ea2-8d82-6b72e1209670",
											"key": "oauth_application_id",
											"value": "string",
											"description": "The ID of the OAuth application to update"
										}
									]
								},
								"description": "Updates an existing OAuth application"
							},
							"response": [
								{
									"id": "781399-17789149-b217-4dfb-a3a6-3d33b7b35f67",
									"name": "An OAuth application",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"scopes\": \"profile email public_metadata private_metadata\",\n  \"consent_screen_enabled\": false,\n  \"pkce_required\": false,\n  \"public\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												":oauth_application_id"
											],
											"variable": [
												{
													"key": "oauth_application_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"oauth_application\",\n  \"id\": \"string\",\n  \"instance_id\": \"string\",\n  \"name\": \"string\",\n  \"dynamically_registered\": false,\n  \"consent_screen_enabled\": true,\n  \"pkce_required\": true,\n  \"public\": false,\n  \"client_id\": \"string\",\n  \"client_uri\": \"string\",\n  \"client_image_url\": \"string\",\n  \"scopes\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"authorize_url\": \"string\",\n  \"token_fetch_url\": \"string\",\n  \"user_info_url\": \"string\",\n  \"discovery_url\": \"string\",\n  \"token_introspection_url\": \"string\",\n  \"created_at\": 7930,\n  \"updated_at\": 6030\n}"
								},
								{
									"id": "781399-335bcdd4-e8b6-4823-9fca-30f1132fbc49",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"scopes\": \"profile email public_metadata private_metadata\",\n  \"consent_screen_enabled\": false,\n  \"pkce_required\": false,\n  \"public\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												":oauth_application_id"
											],
											"variable": [
												{
													"key": "oauth_application_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-ee40e87d-a673-49c6-8f69-a446c15d290b",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"scopes\": \"profile email public_metadata private_metadata\",\n  \"consent_screen_enabled\": false,\n  \"pkce_required\": false,\n  \"public\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												":oauth_application_id"
											],
											"variable": [
												{
													"key": "oauth_application_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-46440935-1b64-4b0c-b21e-3d996b63cba8",
									"name": "Resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"scopes\": \"profile email public_metadata private_metadata\",\n  \"consent_screen_enabled\": false,\n  \"pkce_required\": false,\n  \"public\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												":oauth_application_id"
											],
											"variable": [
												{
													"key": "oauth_application_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-9ba73821-41f7-4e51-9ce2-23c608583d1a",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"scopes\": \"profile email public_metadata private_metadata\",\n  \"consent_screen_enabled\": false,\n  \"pkce_required\": false,\n  \"public\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												":oauth_application_id"
											],
											"variable": [
												{
													"key": "oauth_application_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete an OAuth application",
							"id": "781399-244857fd-e122-44d2-8cc3-23c885a57193",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth_applications",
										":oauth_application_id"
									],
									"variable": [
										{
											"id": "c75402a4-a646-407f-8d3f-1e6de551d22a",
											"key": "oauth_application_id",
											"value": "string",
											"description": "The ID of the OAuth application to delete"
										}
									]
								},
								"description": "Deletes the given OAuth application.\nThis is not reversible."
							},
							"response": [
								{
									"id": "781399-801f2150-0dbb-4b9f-9d6f-680867155c33",
									"name": "Deleted Object",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												":oauth_application_id"
											],
											"variable": [
												{
													"key": "oauth_application_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
								},
								{
									"id": "781399-d3939255-3e27-488f-b212-af90663437d6",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												":oauth_application_id"
											],
											"variable": [
												{
													"key": "oauth_application_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-aa4472a2-4a4c-4b14-9adb-f888b3060bcb",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/:oauth_application_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												":oauth_application_id"
											],
											"variable": [
												{
													"key": "oauth_application_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-a6c5f631-9c86-413d-80d5-2a2f401698c7"
				},
				{
					"name": "access_tokens",
					"item": [
						{
							"name": "verify",
							"item": [
								{
									"name": "Verify an OAuth Access Token",
									"id": "781399-5f95e572-2bbd-4d97-b517-5a21edb145f8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"access_token\": \"XXXXXXXXXXXXXX\",\n  \"secret\": \"XXXXXXXXXXXXXX\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/oauth_applications/access_tokens/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"oauth_applications",
												"access_tokens",
												"verify"
											]
										}
									},
									"response": [
										{
											"id": "781399-ed819775-9fc0-4bcf-b34e-f3c327c6ed1f",
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"access_token\": \"XXXXXXXXXXXXXX\",\n  \"secret\": \"XXXXXXXXXXXXXX\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/oauth_applications/access_tokens/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oauth_applications",
														"access_tokens",
														"verify"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"clerk_idp_oauth_access_token\",\n  \"id\": \"oat_0ef5a7a33d87ed87ee7954c845d80450\",\n  \"client_id\": \"client_2xhFjEI5X2qWRvtV13BzSj8H6Dk\",\n  \"subject\": \"user_2xhFjEI5X2qWRvtV13BzSj8H6Dk\",\n  \"scopes\": [\n    \"read\",\n    \"write\"\n  ],\n  \"revoked\": false,\n  \"revocation_reason\": \"Revoked by user\",\n  \"expired\": false,\n  \"expiration\": 1716883200,\n  \"created_at\": 1716883200,\n  \"updated_at\": 1716883200\n}"
										},
										{
											"id": "781399-b2ef658a-1e26-428f-9825-c972fb4a3ee5",
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"access_token\": \"XXXXXXXXXXXXXX\",\n  \"secret\": \"XXXXXXXXXXXXXX\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/oauth_applications/access_tokens/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oauth_applications",
														"access_tokens",
														"verify"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"Bad Request\",\n      \"long_message\": \"Invalid 'url_parameter.example': Failed regex check\",\n      \"code\": \"bad_request\"\n    },\n    {\n      \"message\": \"Bad Request\",\n      \"long_message\": \"Invalid 'url_parameter.example': Failed regex check\",\n      \"code\": \"bad_request\"\n    }\n  ]\n}"
										},
										{
											"id": "781399-e376c0fd-0295-4b83-b0d6-228234bc23d7",
											"name": "404 Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"access_token\": \"XXXXXXXXXXXXXX\",\n  \"secret\": \"XXXXXXXXXXXXXX\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/oauth_applications/access_tokens/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"oauth_applications",
														"access_tokens",
														"verify"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"some details about the error\",\n      \"long_message\": \"some details about the error\",\n      \"code\": \"some_error_code\"\n    },\n    {\n      \"message\": \"some details about the error\",\n      \"long_message\": \"some details about the error\",\n      \"code\": \"some_error_code\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "781399-e8f6d7ec-d967-4922-9b76-ed3108ba0d5f"
						}
					],
					"id": "781399-9ddd82d8-3eb2-4070-a288-dab18c669335"
				},
				{
					"name": "Get a list of OAuth applications for an instance",
					"id": "781399-33f1418d-5d19-496a-948c-589ec850e7d5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth_applications?limit=10&offset=0&order_by=+created_at&name_query=string",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth_applications"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								},
								{
									"key": "order_by",
									"value": "+created_at",
									"description": "Allows to return OAuth applications in a particular order.\nAt the moment, you can order the returned OAuth applications by their `created_at` and `name`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want OAuth applications to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,\nif you pass `order_by=name&order_by=created_at`, we will consider only the first `order_by` parameter, which is `name`. The `created_at` parameter will be ignored in this case."
								},
								{
									"key": "name_query",
									"value": "string",
									"description": "Returns OAuth applications with names that match the given query, via case-insensitive partial match."
								}
							]
						},
						"description": "This request returns the list of OAuth applications for an instance.\nResults can be paginated using the optional `limit` and `offset` query parameters.\nThe OAuth applications are ordered by descending creation date.\nMost recent OAuth applications will be returned first."
					},
					"response": [
						{
							"id": "781399-f2ac9bb5-929b-415a-b281-9d8ea4890a7c",
							"name": "A list of OAuth applications",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth_applications?limit=10&offset=0&order_by=+created_at&name_query=string",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth_applications"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Allows to return OAuth applications in a particular order.\nAt the moment, you can order the returned OAuth applications by their `created_at` and `name`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want OAuth applications to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,\nif you pass `order_by=name&order_by=created_at`, we will consider only the first `order_by` parameter, which is `name`. The `created_at` parameter will be ignored in this case.",
											"key": "order_by",
											"value": "+created_at"
										},
										{
											"description": "Returns OAuth applications with names that match the given query, via case-insensitive partial match.",
											"key": "name_query",
											"value": "string"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"object\": \"oauth_application\",\n      \"id\": \"string\",\n      \"instance_id\": \"string\",\n      \"name\": \"string\",\n      \"dynamically_registered\": true,\n      \"consent_screen_enabled\": false,\n      \"pkce_required\": true,\n      \"public\": false,\n      \"client_id\": \"string\",\n      \"client_uri\": \"string\",\n      \"client_image_url\": \"string\",\n      \"scopes\": \"string\",\n      \"redirect_uris\": [\n        \"string\",\n        \"string\"\n      ],\n      \"callback_url\": \"string\",\n      \"authorize_url\": \"string\",\n      \"token_fetch_url\": \"string\",\n      \"user_info_url\": \"string\",\n      \"discovery_url\": \"string\",\n      \"token_introspection_url\": \"string\",\n      \"created_at\": 1895,\n      \"updated_at\": 1277\n    },\n    {\n      \"object\": \"oauth_application\",\n      \"id\": \"string\",\n      \"instance_id\": \"string\",\n      \"name\": \"string\",\n      \"dynamically_registered\": true,\n      \"consent_screen_enabled\": true,\n      \"pkce_required\": false,\n      \"public\": false,\n      \"client_id\": \"string\",\n      \"client_uri\": \"string\",\n      \"client_image_url\": \"string\",\n      \"scopes\": \"string\",\n      \"redirect_uris\": [\n        \"string\",\n        \"string\"\n      ],\n      \"callback_url\": \"string\",\n      \"authorize_url\": \"string\",\n      \"token_fetch_url\": \"string\",\n      \"user_info_url\": \"string\",\n      \"discovery_url\": \"string\",\n      \"token_introspection_url\": \"string\",\n      \"created_at\": 4779,\n      \"updated_at\": 7000\n    }\n  ],\n  \"total_count\": 6010\n}"
						},
						{
							"id": "781399-5d39aed1-bb3d-4f5a-9a13-40ec260ed89b",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth_applications?limit=10&offset=0&order_by=+created_at&name_query=string",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth_applications"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Allows to return OAuth applications in a particular order.\nAt the moment, you can order the returned OAuth applications by their `created_at` and `name`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want OAuth applications to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,\nif you pass `order_by=name&order_by=created_at`, we will consider only the first `order_by` parameter, which is `name`. The `created_at` parameter will be ignored in this case.",
											"key": "order_by",
											"value": "+created_at"
										},
										{
											"description": "Returns OAuth applications with names that match the given query, via case-insensitive partial match.",
											"key": "name_query",
											"value": "string"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-2690d1aa-a8e0-4895-847d-bf943e63f3d3",
							"name": "Authorization invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth_applications?limit=10&offset=0&order_by=+created_at&name_query=string",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth_applications"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Allows to return OAuth applications in a particular order.\nAt the moment, you can order the returned OAuth applications by their `created_at` and `name`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want OAuth applications to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,\nif you pass `order_by=name&order_by=created_at`, we will consider only the first `order_by` parameter, which is `name`. The `created_at` parameter will be ignored in this case.",
											"key": "order_by",
											"value": "+created_at"
										},
										{
											"description": "Returns OAuth applications with names that match the given query, via case-insensitive partial match.",
											"key": "name_query",
											"value": "string"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-d4e99d75-9774-47af-ae44-ba2a06ba85ce",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/oauth_applications?limit=10&offset=0&order_by=+created_at&name_query=string",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth_applications"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Allows to return OAuth applications in a particular order.\nAt the moment, you can order the returned OAuth applications by their `created_at` and `name`.\nIn order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.\nFor example, if you want OAuth applications to be returned in descending order according to their `created_at` property, you can use `-created_at`.\nIf you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,\nif you pass `order_by=name&order_by=created_at`, we will consider only the first `order_by` parameter, which is `name`. The `created_at` parameter will be ignored in this case.",
											"key": "order_by",
											"value": "+created_at"
										},
										{
											"description": "Returns OAuth applications with names that match the given query, via case-insensitive partial match.",
											"key": "name_query",
											"value": "string"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				},
				{
					"name": "Create an OAuth application",
					"id": "781399-1e6b0d07-4080-41b8-91ce-90c9269a3517",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"scopes\": \"profile email public_metadata\",\n  \"consent_screen_enabled\": true,\n  \"pkce_required\": false,\n  \"public\": false\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/oauth_applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth_applications"
							]
						},
						"description": "Creates a new OAuth application with the given name and callback URL for an instance.\nThe callback URL must be a valid URL.\nAll URL schemes are allowed such as `http://`, `https://`, `myapp://`, etc..."
					},
					"response": [
						{
							"id": "781399-a214263f-78f2-4f71-8b79-7354e95dee69",
							"name": "An OAuth application with client secret",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"scopes\": \"profile email public_metadata\",\n  \"consent_screen_enabled\": true,\n  \"pkce_required\": false,\n  \"public\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth_applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth_applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"oauth_application\",\n  \"id\": \"string\",\n  \"instance_id\": \"string\",\n  \"name\": \"string\",\n  \"dynamically_registered\": true,\n  \"consent_screen_enabled\": false,\n  \"pkce_required\": true,\n  \"public\": true,\n  \"client_id\": \"string\",\n  \"client_uri\": \"string\",\n  \"client_image_url\": \"string\",\n  \"scopes\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"authorize_url\": \"string\",\n  \"token_fetch_url\": \"string\",\n  \"user_info_url\": \"string\",\n  \"discovery_url\": \"string\",\n  \"token_introspection_url\": \"string\",\n  \"created_at\": 3369,\n  \"updated_at\": 9044,\n  \"client_secret\": \"string\"\n}"
						},
						{
							"id": "781399-2f5593a6-a851-4fd2-9603-e6ab4f1f323c",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"scopes\": \"profile email public_metadata\",\n  \"consent_screen_enabled\": true,\n  \"pkce_required\": false,\n  \"public\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth_applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth_applications"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-c4d1a9e4-7cff-4a0d-995c-aa2f73b34fde",
							"name": "Authorization invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"scopes\": \"profile email public_metadata\",\n  \"consent_screen_enabled\": true,\n  \"pkce_required\": false,\n  \"public\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth_applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth_applications"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-f00943db-0024-4938-9379-4062347d7a4b",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"redirect_uris\": [\n    \"string\",\n    \"string\"\n  ],\n  \"callback_url\": \"string\",\n  \"scopes\": \"profile email public_metadata\",\n  \"consent_screen_enabled\": true,\n  \"pkce_required\": false,\n  \"public\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/oauth_applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"oauth_applications"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-e0c05e0d-3cc0-44ea-9a15-9facf24664f9"
		},
		{
			"name": "saml_connections",
			"item": [
				{
					"name": "{saml_connection_id}",
					"item": [
						{
							"name": "Retrieve a SAML Connection by ID",
							"id": "781399-191858e3-0ef6-4b6c-8076-f315b3c0f0ed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saml_connections",
										":saml_connection_id"
									],
									"variable": [
										{
											"id": "18fe5893-4b53-45e9-a76c-036ab49f7ad5",
											"key": "saml_connection_id",
											"value": "string",
											"description": "The ID of the SAML Connection"
										}
									]
								},
								"description": "Fetches the SAML Connection whose ID matches the provided `saml_connection_id` in the path."
							},
							"response": [
								{
									"id": "781399-aadca8cc-0472-4ed9-9379-66a732800983",
									"name": "A SAML Connection",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"domains\": \"string\"\n}"
								},
								{
									"id": "781399-ca438c1e-c15c-4939-9886-a59e7dd8b588",
									"name": "Payment required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-67af5ca0-feb2-4e46-985d-a73dee46df69",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-fe439b0f-9208-4688-a69c-047f72ad8112",
									"name": "Resource not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Update a SAML Connection",
							"id": "781399-24d363ba-bfe6-4c69-84dd-778f54dc414b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"string\",\n  \"domain\": \"string\",\n  \"domains\": [\n    \"string\",\n    \"string\"\n  ],\n  \"idp_entity_id\": \"string\",\n  \"idp_sso_url\": \"string\",\n  \"idp_certificate\": \"string\",\n  \"idp_metadata_url\": \"string\",\n  \"idp_metadata\": \"string\",\n  \"organization_id\": \"string\",\n  \"attribute_mapping\": {\n    \"user_id\": \"string\",\n    \"email_address\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"active\": true,\n  \"sync_user_attributes\": true,\n  \"allow_subdomains\": false,\n  \"allow_idp_initiated\": false,\n  \"disable_additional_identifications\": true,\n  \"force_authn\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saml_connections",
										":saml_connection_id"
									],
									"variable": [
										{
											"id": "74505ce7-0208-440f-8ffc-8f743266c7ea",
											"key": "saml_connection_id",
											"value": "string",
											"description": "The ID of the SAML Connection to update"
										}
									]
								},
								"description": "Updates the SAML Connection whose ID matches the provided `id` in the path."
							},
							"response": [
								{
									"id": "781399-4b22c4e4-343b-4ebb-9384-6658aacdcb4f",
									"name": "A SAML Connection",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"domain\": \"string\",\n  \"domains\": [\n    \"string\",\n    \"string\"\n  ],\n  \"idp_entity_id\": \"string\",\n  \"idp_sso_url\": \"string\",\n  \"idp_certificate\": \"string\",\n  \"idp_metadata_url\": \"string\",\n  \"idp_metadata\": \"string\",\n  \"organization_id\": \"string\",\n  \"attribute_mapping\": {\n    \"user_id\": \"string\",\n    \"email_address\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"active\": true,\n  \"sync_user_attributes\": true,\n  \"allow_subdomains\": false,\n  \"allow_idp_initiated\": false,\n  \"disable_additional_identifications\": true,\n  \"force_authn\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"domains\": \"string\"\n}"
								},
								{
									"id": "781399-775893bc-5034-42c8-afe2-47ca1f6fc4e2",
									"name": "Payment required",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"domain\": \"string\",\n  \"domains\": [\n    \"string\",\n    \"string\"\n  ],\n  \"idp_entity_id\": \"string\",\n  \"idp_sso_url\": \"string\",\n  \"idp_certificate\": \"string\",\n  \"idp_metadata_url\": \"string\",\n  \"idp_metadata\": \"string\",\n  \"organization_id\": \"string\",\n  \"attribute_mapping\": {\n    \"user_id\": \"string\",\n    \"email_address\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"active\": true,\n  \"sync_user_attributes\": true,\n  \"allow_subdomains\": false,\n  \"allow_idp_initiated\": false,\n  \"disable_additional_identifications\": true,\n  \"force_authn\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-cb9b780c-9da1-4367-be0e-368831aaf2ba",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"domain\": \"string\",\n  \"domains\": [\n    \"string\",\n    \"string\"\n  ],\n  \"idp_entity_id\": \"string\",\n  \"idp_sso_url\": \"string\",\n  \"idp_certificate\": \"string\",\n  \"idp_metadata_url\": \"string\",\n  \"idp_metadata\": \"string\",\n  \"organization_id\": \"string\",\n  \"attribute_mapping\": {\n    \"user_id\": \"string\",\n    \"email_address\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"active\": true,\n  \"sync_user_attributes\": true,\n  \"allow_subdomains\": false,\n  \"allow_idp_initiated\": false,\n  \"disable_additional_identifications\": true,\n  \"force_authn\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-eeae2ec1-0d64-470e-97fa-bd96ce74236f",
									"name": "Resource not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"domain\": \"string\",\n  \"domains\": [\n    \"string\",\n    \"string\"\n  ],\n  \"idp_entity_id\": \"string\",\n  \"idp_sso_url\": \"string\",\n  \"idp_certificate\": \"string\",\n  \"idp_metadata_url\": \"string\",\n  \"idp_metadata\": \"string\",\n  \"organization_id\": \"string\",\n  \"attribute_mapping\": {\n    \"user_id\": \"string\",\n    \"email_address\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"active\": true,\n  \"sync_user_attributes\": true,\n  \"allow_subdomains\": false,\n  \"allow_idp_initiated\": false,\n  \"disable_additional_identifications\": true,\n  \"force_authn\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-88ab2d47-1e92-4cb6-bf2a-f8be97695230",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"domain\": \"string\",\n  \"domains\": [\n    \"string\",\n    \"string\"\n  ],\n  \"idp_entity_id\": \"string\",\n  \"idp_sso_url\": \"string\",\n  \"idp_certificate\": \"string\",\n  \"idp_metadata_url\": \"string\",\n  \"idp_metadata\": \"string\",\n  \"organization_id\": \"string\",\n  \"attribute_mapping\": {\n    \"user_id\": \"string\",\n    \"email_address\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\"\n  },\n  \"active\": true,\n  \"sync_user_attributes\": true,\n  \"allow_subdomains\": false,\n  \"allow_idp_initiated\": false,\n  \"disable_additional_identifications\": true,\n  \"force_authn\": true\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						},
						{
							"name": "Delete a SAML Connection",
							"id": "781399-572aa967-bc67-4802-b601-01d6ca43bab6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saml_connections",
										":saml_connection_id"
									],
									"variable": [
										{
											"id": "40d735f1-f07c-4e04-a460-570615317e98",
											"key": "saml_connection_id",
											"value": "string",
											"description": "The ID of the SAML Connection to delete"
										}
									]
								},
								"description": "Deletes the SAML Connection whose ID matches the provided `id` in the path."
							},
							"response": [
								{
									"id": "781399-d23d9d62-cd93-4256-8f01-69887839251a",
									"name": "Deleted Object",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
								},
								{
									"id": "781399-cd608f93-742f-429a-a4f3-6a3ac910f8b1",
									"name": "Payment required",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-6092aeb8-21b1-4bd8-8a92-f29dcae6c8cd",
									"name": "Authorization invalid",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-bfad4335-bdfa-4f1b-ae54-0b861f7d649e",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/saml_connections/:saml_connection_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"saml_connections",
												":saml_connection_id"
											],
											"variable": [
												{
													"key": "saml_connection_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-b275d204-460c-48e3-bec5-68094877f910"
				},
				{
					"name": "Get a list of SAML Connections for an instance",
					"id": "781399-a876dd9e-c5e6-45e2-b786-38bdce3c59a2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/saml_connections?limit=10&offset=0&query=string&order_by=string&organization_id=string&organization_id=string",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"saml_connections"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								},
								{
									"key": "query",
									"value": "string",
									"description": "Returns SAML connections that have a name that matches the given query, via case-insensitive partial match."
								},
								{
									"key": "order_by",
									"value": "string",
									"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -,\nwe can choose to sort in ascending (ASC) or descending (DESC) order."
								},
								{
									"key": "organization_id",
									"value": "string",
									"description": "Returns SAML connections that have an associated organization ID to the\ngiven organizations.\nFor each organization ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective organization should be included or\nexcluded from the result set.\nAccepts up to 100 organization IDs."
								},
								{
									"key": "organization_id",
									"value": "string",
									"description": "Returns SAML connections that have an associated organization ID to the\ngiven organizations.\nFor each organization ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective organization should be included or\nexcluded from the result set.\nAccepts up to 100 organization IDs."
								}
							]
						},
						"description": "Returns the list of SAML Connections for an instance.\nResults can be paginated using the optional `limit` and `offset` query parameters.\nThe SAML Connections are ordered by descending creation date and the most recent will be returned first."
					},
					"response": [
						{
							"id": "781399-d327d66d-96fb-48b4-8f5a-d8465ece1b37",
							"name": "A list of SAML Connections",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saml_connections?limit=10&offset=0&query=string&order_by=string&organization_id=string",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saml_connections"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Returns SAML connections that have a name that matches the given query, via case-insensitive partial match.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -,\nwe can choose to sort in ascending (ASC) or descending (DESC) order.",
											"key": "order_by",
											"value": "string"
										},
										{
											"description": "Returns SAML connections that have an associated organization ID to the\ngiven organizations.\nFor each organization ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective organization should be included or\nexcluded from the result set.\nAccepts up to 100 organization IDs.",
											"key": "organization_id",
											"value": "string"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"domains\": true\n    },\n    {\n      \"domains\": true\n    }\n  ],\n  \"total_count\": 4915\n}"
						},
						{
							"id": "781399-443052b2-1708-4ad5-bb23-279d9be80af9",
							"name": "Payment required",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saml_connections?limit=10&offset=0&query=string&order_by=string&organization_id=string",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saml_connections"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Returns SAML connections that have a name that matches the given query, via case-insensitive partial match.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -,\nwe can choose to sort in ascending (ASC) or descending (DESC) order.",
											"key": "order_by",
											"value": "string"
										},
										{
											"description": "Returns SAML connections that have an associated organization ID to the\ngiven organizations.\nFor each organization ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective organization should be included or\nexcluded from the result set.\nAccepts up to 100 organization IDs.",
											"key": "organization_id",
											"value": "string"
										}
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-2fa96a6c-1cd3-43df-93a1-ad111aa8c127",
							"name": "Authorization invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saml_connections?limit=10&offset=0&query=string&order_by=string&organization_id=string",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saml_connections"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Returns SAML connections that have a name that matches the given query, via case-insensitive partial match.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -,\nwe can choose to sort in ascending (ASC) or descending (DESC) order.",
											"key": "order_by",
											"value": "string"
										},
										{
											"description": "Returns SAML connections that have an associated organization ID to the\ngiven organizations.\nFor each organization ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective organization should be included or\nexcluded from the result set.\nAccepts up to 100 organization IDs.",
											"key": "organization_id",
											"value": "string"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-bb1c7708-a472-40b7-ae34-a47f93f7de3d",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saml_connections?limit=10&offset=0&query=string&order_by=string&organization_id=string",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saml_connections"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Returns SAML connections that have a name that matches the given query, via case-insensitive partial match.",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -,\nwe can choose to sort in ascending (ASC) or descending (DESC) order.",
											"key": "order_by",
											"value": "string"
										},
										{
											"description": "Returns SAML connections that have an associated organization ID to the\ngiven organizations.\nFor each organization ID, the `+` and `-` can be\nprepended to the ID, which denote whether the\nrespective organization should be included or\nexcluded from the result set.\nAccepts up to 100 organization IDs.",
											"key": "organization_id",
											"value": "string"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				},
				{
					"name": "Create a SAML Connection",
					"id": "781399-041d95f4-49ee-45e3-92dc-2a0f07eac724",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"domain\": 9379.680514456213\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/saml_connections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"saml_connections"
							]
						},
						"description": "Create a new SAML Connection."
					},
					"response": [
						{
							"id": "781399-e5676071-4b3d-4d42-a145-280f34a39cb2",
							"name": "A SAML Connection",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": 9379.680514456213\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saml_connections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saml_connections"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"domains\": \"string\"\n}"
						},
						{
							"id": "781399-3d656348-47b1-425b-a9aa-f02273d2bbea",
							"name": "Payment required",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": 9379.680514456213\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saml_connections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saml_connections"
									]
								}
							},
							"status": "Payment Required",
							"code": 402,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-03708429-652c-4e77-9893-2fc37da21b63",
							"name": "Authorization invalid",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": 9379.680514456213\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saml_connections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saml_connections"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-cba732b9-f7c2-4798-99de-bed499ae2e78",
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": 9379.680514456213\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saml_connections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saml_connections"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-9c75f11e-6895-4de5-904d-009457606654",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": 9379.680514456213\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saml_connections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saml_connections"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-1d3cc955-fabc-4211-8aea-ded88a61ae87"
		},
		{
			"name": "testing_tokens",
			"item": [
				{
					"name": "Retrieve a new testing token",
					"id": "781399-2feece62-e87e-4551-a9ad-9cf68adfcf5d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/testing_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"testing_tokens"
							]
						},
						"description": "Retrieve a new testing token."
					},
					"response": [
						{
							"id": "781399-45a70824-4f5f-44f6-8a3e-6b6bfc016a12",
							"name": "A Testing Token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/testing_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"testing_tokens"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"testing_token\",\n  \"token\": \"1713877200-c_2J2MvPu9PnXcuhbPZNao0LOXqK9A7YrnBn0HmIWxy\",\n  \"expires_at\": 1713880800\n}"
						}
					]
				}
			],
			"id": "781399-16a2a90a-f8d3-4d65-ac92-79bbf88dc200"
		},
		{
			"name": "organization_memberships",
			"item": [
				{
					"name": "Get a list of all organization memberships within an instance.",
					"id": "781399-83729e1e-6b42-44f1-8a9d-3b437d993a4f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/organization_memberships?order_by=string&limit=10&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organization_memberships"
							],
							"query": [
								{
									"key": "order_by",
									"value": "string",
									"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -,\nwe can choose to sort in ascending (ASC) or descending (DESC) order."
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								}
							]
						},
						"description": "Retrieves all organization user memberships for the given instance."
					},
					"response": [
						{
							"id": "781399-4a0f4d91-baaa-4129-ac50-87478485b1ba",
							"name": "A list of organization memberships",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_memberships?order_by=string&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_memberships"
									],
									"query": [
										{
											"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -,\nwe can choose to sort in ascending (ASC) or descending (DESC) order.",
											"key": "order_by",
											"value": "string"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"object\": \"organization_membership\",\n      \"id\": \"string\",\n      \"role\": \"string\",\n      \"permissions\": [\n        \"string\",\n        \"string\"\n      ],\n      \"public_metadata\": {\n        \"key_0\": 9083,\n        \"key_1\": \"string\",\n        \"key_2\": true\n      },\n      \"created_at\": 8566,\n      \"updated_at\": 6296,\n      \"organization\": {\n        \"object\": \"organization\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": true,\n        \"max_allowed_memberships\": 6557,\n        \"admin_delete_enabled\": false,\n        \"public_metadata\": {\n          \"key_0\": \"string\",\n          \"key_1\": false\n        },\n        \"created_at\": 2494,\n        \"updated_at\": 3052,\n        \"image_url\": \"string\",\n        \"members_count\": 4272,\n        \"missing_member_with_elevated_permissions\": false,\n        \"pending_invitations_count\": 3425,\n        \"private_metadata\": {\n          \"key_0\": 2918.5963037429697,\n          \"key_1\": 9218.024089152552\n        },\n        \"created_by\": \"string\"\n      },\n      \"role_name\": \"string\",\n      \"private_metadata\": {\n        \"key_0\": false,\n        \"key_1\": 6857,\n        \"key_2\": \"string\",\n        \"key_3\": true\n      },\n      \"public_user_data\": {\n        \"user_id\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"profile_image_url\": \"string\",\n        \"image_url\": \"string\",\n        \"has_image\": true,\n        \"identifier\": \"string\",\n        \"username\": \"string\"\n      }\n    },\n    {\n      \"object\": \"organization_membership\",\n      \"id\": \"string\",\n      \"role\": \"string\",\n      \"permissions\": [\n        \"string\",\n        \"string\"\n      ],\n      \"public_metadata\": {\n        \"key_0\": false\n      },\n      \"created_at\": 7245,\n      \"updated_at\": 4600,\n      \"organization\": {\n        \"object\": \"organization\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"slug\": \"string\",\n        \"has_image\": false,\n        \"max_allowed_memberships\": 7782,\n        \"admin_delete_enabled\": true,\n        \"public_metadata\": {\n          \"key_0\": false\n        },\n        \"created_at\": 6903,\n        \"updated_at\": 3770,\n        \"image_url\": \"string\",\n        \"members_count\": 9552,\n        \"missing_member_with_elevated_permissions\": true,\n        \"pending_invitations_count\": 2102,\n        \"private_metadata\": {\n          \"key_0\": 9826.880821938897,\n          \"key_1\": 5161.292338267557\n        },\n        \"created_by\": \"string\"\n      },\n      \"role_name\": \"string\",\n      \"private_metadata\": {\n        \"key_0\": true\n      },\n      \"public_user_data\": {\n        \"user_id\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"profile_image_url\": \"string\",\n        \"image_url\": \"string\",\n        \"has_image\": true,\n        \"identifier\": \"string\",\n        \"username\": \"string\"\n      }\n    }\n  ],\n  \"total_count\": 8054\n}"
						},
						{
							"id": "781399-61ac1b69-47d6-4136-b131-1b6a901138cc",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_memberships?order_by=string&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_memberships"
									],
									"query": [
										{
											"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -,\nwe can choose to sort in ascending (ASC) or descending (DESC) order.",
											"key": "order_by",
											"value": "string"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-561b310e-fe87-4e8a-81c8-2d17b95611a6",
							"name": "Authentication invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_memberships?order_by=string&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_memberships"
									],
									"query": [
										{
											"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -,\nwe can choose to sort in ascending (ASC) or descending (DESC) order.",
											"key": "order_by",
											"value": "string"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-6fbf7365-bdd4-4ff6-9bbc-790812be830c",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_memberships?order_by=string&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_memberships"
									],
									"query": [
										{
											"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -,\nwe can choose to sort in ascending (ASC) or descending (DESC) order.",
											"key": "order_by",
											"value": "string"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-6df01850-8b07-419c-bb8f-f3bb3a25a834",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organization_memberships?order_by=string&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organization_memberships"
									],
									"query": [
										{
											"description": "Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username.\nBy prepending one of those values with + or -,\nwe can choose to sort in ascending (ASC) or descending (DESC) order.",
											"key": "order_by",
											"value": "string"
										},
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-507b8469-d907-4e48-8b33-531e68e50371"
		},
		{
			"name": "waitlist_entries",
			"item": [
				{
					"name": "{waitlist_entry_id}",
					"item": [
						{
							"name": "invite",
							"item": [
								{
									"name": "Invite a waitlist entry",
									"id": "781399-94a3dac2-ad84-4884-86b7-540f5217c2dd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ignore_existing\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id/invite",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"waitlist_entries",
												":waitlist_entry_id",
												"invite"
											],
											"variable": [
												{
													"id": "5b7b302b-077b-40cf-9b10-2f05628c02db",
													"key": "waitlist_entry_id",
													"value": "string",
													"description": "The ID of the waitlist entry to invite"
												}
											]
										},
										"description": "Send an invite to the email address in a waitlist entry."
									},
									"response": [
										{
											"id": "781399-75561ec9-88a8-49b0-82e4-69b77fe917cf",
											"name": "A Waitlist Entry",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ignore_existing\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id/invite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"waitlist_entries",
														":waitlist_entry_id",
														"invite"
													],
													"variable": [
														{
															"key": "waitlist_entry_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"waitlist_entry\",\n  \"id\": \"string\",\n  \"email_address\": \"Jk7EYPHeXya@BlKBwGkInPHGX.tm\",\n  \"status\": \"pending\",\n  \"created_at\": 3141,\n  \"updated_at\": 6429,\n  \"is_locked\": false,\n  \"invitation\": {\n    \"object\": \"invitation\",\n    \"id\": \"string\",\n    \"email_address\": \"uoQXXS@nucEE.lk\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": 6266.834818881994\n    },\n    \"status\": \"pending\",\n    \"created_at\": 6318,\n    \"updated_at\": 8064,\n    \"revoked\": false,\n    \"url\": \"string\",\n    \"expires_at\": 9010\n  }\n}"
										},
										{
											"id": "781399-691be16f-c2c1-4524-8805-ca9a0068ca67",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ignore_existing\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id/invite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"waitlist_entries",
														":waitlist_entry_id",
														"invite"
													],
													"variable": [
														{
															"key": "waitlist_entry_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-feb89b08-f476-400c-9341-a597d3793f3e",
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ignore_existing\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id/invite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"waitlist_entries",
														":waitlist_entry_id",
														"invite"
													],
													"variable": [
														{
															"key": "waitlist_entry_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-ba3b8cb0-ad7b-431e-b54f-0882f5a3282a",
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ignore_existing\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id/invite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"waitlist_entries",
														":waitlist_entry_id",
														"invite"
													],
													"variable": [
														{
															"key": "waitlist_entry_id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-df9d7e75-41eb-49d8-a537-e2102d26ca20",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ignore_existing\": false\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id/invite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"waitlist_entries",
														":waitlist_entry_id",
														"invite"
													],
													"variable": [
														{
															"key": "waitlist_entry_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-4b657bd2-4812-49d0-b673-033996913d65"
						},
						{
							"name": "reject",
							"item": [
								{
									"name": "Reject a waitlist entry",
									"id": "781399-1825896c-534b-4bc0-b750-6f38a88ddaa0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id/reject",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"waitlist_entries",
												":waitlist_entry_id",
												"reject"
											],
											"variable": [
												{
													"id": "afa638d4-5c24-427a-b02a-ad2e471b6943",
													"key": "waitlist_entry_id",
													"value": "string",
													"description": "The ID of the waitlist entry to reject"
												}
											]
										},
										"description": "Reject a waitlist entry."
									},
									"response": [
										{
											"id": "781399-a465de96-41f0-4538-891d-c7ded9eb4fe1",
											"name": "A Waitlist Entry",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id/reject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"waitlist_entries",
														":waitlist_entry_id",
														"reject"
													],
													"variable": [
														{
															"key": "waitlist_entry_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"waitlist_entry\",\n  \"id\": \"string\",\n  \"email_address\": \"Jk7EYPHeXya@BlKBwGkInPHGX.tm\",\n  \"status\": \"pending\",\n  \"created_at\": 3141,\n  \"updated_at\": 6429,\n  \"is_locked\": false,\n  \"invitation\": {\n    \"object\": \"invitation\",\n    \"id\": \"string\",\n    \"email_address\": \"uoQXXS@nucEE.lk\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": 6266.834818881994\n    },\n    \"status\": \"pending\",\n    \"created_at\": 6318,\n    \"updated_at\": 8064,\n    \"revoked\": false,\n    \"url\": \"string\",\n    \"expires_at\": 9010\n  }\n}"
										},
										{
											"id": "781399-d7b7ce3f-c12b-4087-9ffe-359ccb21fc63",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id/reject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"waitlist_entries",
														":waitlist_entry_id",
														"reject"
													],
													"variable": [
														{
															"key": "waitlist_entry_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-6124bb6f-ca35-484f-b7fb-763b92baa63d",
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id/reject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"waitlist_entries",
														":waitlist_entry_id",
														"reject"
													],
													"variable": [
														{
															"key": "waitlist_entry_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-83a61485-49a4-4682-a0bf-f9e9ead16473",
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id/reject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"waitlist_entries",
														":waitlist_entry_id",
														"reject"
													],
													"variable": [
														{
															"key": "waitlist_entry_id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-033f6eb8-d03b-4c18-b55b-c7ef1e511e13",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id/reject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"waitlist_entries",
														":waitlist_entry_id",
														"reject"
													],
													"variable": [
														{
															"key": "waitlist_entry_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-3eee8c0e-9111-43fd-a9b2-896a01bf14af"
						},
						{
							"name": "Delete a pending waitlist entry",
							"id": "781399-77f46849-9045-4cbb-8cb2-c6dca23c84c4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"waitlist_entries",
										":waitlist_entry_id"
									],
									"variable": [
										{
											"id": "64d4248a-bb2e-481d-94c9-31447ce8714f",
											"key": "waitlist_entry_id",
											"value": "string",
											"description": "The ID of the waitlist entry to delete"
										}
									]
								},
								"description": "Delete a pending waitlist entry."
							},
							"response": [
								{
									"id": "781399-3039cb46-f47e-4925-a98f-37dd020a32ee",
									"name": "Deleted Object",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"waitlist_entries",
												":waitlist_entry_id"
											],
											"variable": [
												{
													"key": "waitlist_entry_id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"string\",\n  \"deleted\": false,\n  \"id\": \"string\",\n  \"slug\": \"string\",\n  \"external_id\": \"string\"\n}"
								},
								{
									"id": "781399-466a9295-b0b2-4fc8-b32c-a28e9315b0bc",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"waitlist_entries",
												":waitlist_entry_id"
											],
											"variable": [
												{
													"key": "waitlist_entry_id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-9356e369-858f-418c-8a98-83060a0f5da6",
									"name": "Resource not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"waitlist_entries",
												":waitlist_entry_id"
											],
											"variable": [
												{
													"key": "waitlist_entry_id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-9f8150a6-f22f-4aad-a495-da3be06efe2b",
									"name": "Conflict",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"waitlist_entries",
												":waitlist_entry_id"
											],
											"variable": [
												{
													"key": "waitlist_entry_id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-eeda600b-7415-4f6a-9dbf-863e11276204",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/waitlist_entries/:waitlist_entry_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"waitlist_entries",
												":waitlist_entry_id"
											],
											"variable": [
												{
													"key": "waitlist_entry_id"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-a2a09a94-2269-478b-95fa-e75f62fda77c"
				},
				{
					"name": "List all waitlist entries",
					"id": "781399-e16ff323-70d7-4424-9a2c-dbdf82fecd28",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/waitlist_entries?limit=10&offset=0&query=string&status=pending&order_by=-created_at",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"waitlist_entries"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
								},
								{
									"key": "query",
									"value": "string",
									"description": "Filter waitlist entries by `email_address` or `id`"
								},
								{
									"key": "status",
									"value": "pending",
									"description": "Filter waitlist entries by their status"
								},
								{
									"key": "order_by",
									"value": "-created_at",
									"description": "Specify the order of results. Supported values are:\n- `created_at`\n- `email_address`\n- `invited_at`\n\nUse `+` for ascending or `-` for descending order. Defaults to `-created_at`."
								}
							]
						},
						"description": "Retrieve a list of waitlist entries for the instance.\nEntries are ordered by creation date in descending order by default.\nSupports filtering by email address or status and pagination with limit and offset parameters."
					},
					"response": [
						{
							"id": "781399-079d38a3-8753-4c34-b4e3-ecb0ff9e6c3c",
							"name": "List of waitlist entries",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/waitlist_entries?limit=10&offset=0&query=string&status=pending&order_by=-created_at",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"waitlist_entries"
									],
									"query": [
										{
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
											"key": "limit",
											"value": "10"
										},
										{
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
											"key": "offset",
											"value": "0"
										},
										{
											"description": "Filter waitlist entries by `email_address` or `id`",
											"key": "query",
											"value": "string"
										},
										{
											"description": "Filter waitlist entries by their status",
											"key": "status",
											"value": "pending"
										},
										{
											"description": "Specify the order of results. Supported values are:\n- `created_at`\n- `email_address`\n- `invited_at`\n\nUse `+` for ascending or `-` for descending order. Defaults to `-created_at`.",
											"key": "order_by",
											"value": "-created_at"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"data\": [\n    {\n      \"object\": \"waitlist_entry\",\n      \"id\": \"string\",\n      \"email_address\": \"w0WPikxUwXSO@tnbYzzM.tm\",\n      \"status\": \"pending\",\n      \"created_at\": 9412,\n      \"updated_at\": 5779,\n      \"is_locked\": false,\n      \"invitation\": {\n        \"object\": \"invitation\",\n        \"id\": \"string\",\n        \"email_address\": \"Lvrh4m@qTLzvAKrdYgYCdKEckzgfudwduXFIXA.ow\",\n        \"public_metadata\": {\n          \"key_0\": \"string\"\n        },\n        \"status\": \"pending\",\n        \"created_at\": 239,\n        \"updated_at\": 6461,\n        \"revoked\": false,\n        \"url\": \"string\",\n        \"expires_at\": 6135\n      }\n    },\n    {\n      \"object\": \"waitlist_entry\",\n      \"id\": \"string\",\n      \"email_address\": \"TjYbaW@dZEqxcNAKcHuLtW.riu\",\n      \"status\": \"pending\",\n      \"created_at\": 8975,\n      \"updated_at\": 3737,\n      \"is_locked\": false,\n      \"invitation\": {\n        \"object\": \"invitation\",\n        \"id\": \"string\",\n        \"email_address\": \"ik8K@aIvygZyGsSYwiFkpCSWdZcxRgtAFnExYi.qp\",\n        \"public_metadata\": {\n          \"key_0\": 9116.591906259988\n        },\n        \"status\": \"pending\",\n        \"created_at\": 6795,\n        \"updated_at\": 4843,\n        \"revoked\": false,\n        \"url\": \"string\",\n        \"expires_at\": 7730\n      }\n    }\n  ],\n  \"total_count\": 5108\n}"
						}
					]
				},
				{
					"name": "Create a waitlist entry",
					"id": "781399-d00c65b3-924f-471b-82fd-69684eb283aa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email_address\": \"string\",\n  \"notify\": true\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/waitlist_entries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"waitlist_entries"
							]
						},
						"description": "Creates a new waitlist entry for the given email address.\nIf the email address is already on the waitlist, no new entry will be created and the existing waitlist entry will be returned."
					},
					"response": [
						{
							"id": "781399-dbf7940e-3b24-4705-8786-c273140cea8e",
							"name": "A Waitlist Entry",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email_address\": \"string\",\n  \"notify\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/waitlist_entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"waitlist_entries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"waitlist_entry\",\n  \"id\": \"string\",\n  \"email_address\": \"Jk7EYPHeXya@BlKBwGkInPHGX.tm\",\n  \"status\": \"pending\",\n  \"created_at\": 3141,\n  \"updated_at\": 6429,\n  \"is_locked\": false,\n  \"invitation\": {\n    \"object\": \"invitation\",\n    \"id\": \"string\",\n    \"email_address\": \"uoQXXS@nucEE.lk\",\n    \"public_metadata\": {\n      \"key_0\": \"string\",\n      \"key_1\": 6266.834818881994\n    },\n    \"status\": \"pending\",\n    \"created_at\": 6318,\n    \"updated_at\": 8064,\n    \"revoked\": false,\n    \"url\": \"string\",\n    \"expires_at\": 9010\n  }\n}"
						},
						{
							"id": "781399-77ddc150-720a-445c-a2b4-3a79b91de9a0",
							"name": "Request was not successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email_address\": \"string\",\n  \"notify\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/waitlist_entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"waitlist_entries"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						},
						{
							"id": "781399-1e105456-dbec-4c02-a170-8bf04c6b57a4",
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email_address\": \"string\",\n  \"notify\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/waitlist_entries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"waitlist_entries"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
						}
					]
				}
			],
			"id": "781399-c67f2eaf-320a-4fcc-9a69-ab3e24f4ab4a"
		},
		{
			"name": "accountless_applications",
			"item": [],
			"id": "781399-7545b08b-a76d-4855-8224-5dec1f5235f4"
		},
		{
			"name": "management",
			"item": [
				{
					"name": "organizations",
					"item": [],
					"id": "781399-1b418b60-eb52-41aa-9040-ac0b2ee2e01b"
				},
				{
					"name": "applications",
					"item": [
						{
							"name": "{applicationID}",
							"item": [
								{
									"name": "domains",
									"item": [
										{
											"name": "{domainName}",
											"item": [],
											"id": "781399-cb07e2f1-6d21-4ae8-8d60-cbbd6d6af587"
										}
									],
									"id": "781399-c6514996-c5ca-4e86-a3d1-ec678f5e2b9a"
								}
							],
							"id": "781399-bdc2bed8-3e70-4f75-8fb4-47f8979f8d3d"
						}
					],
					"id": "781399-62fa36a2-7f93-4617-b2fd-f5d79b2db1d1"
				}
			],
			"id": "781399-697e000d-2fde-4769-b6f6-bb5dfd55f7a9"
		},
		{
			"name": "commerce",
			"item": [
				{
					"name": "plans",
					"item": [
						{
							"name": "List all commerce plans",
							"id": "781399-08ca3d9e-3096-4c92-89e6-2df6385fc720",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/commerce/plans?paginated=true&limit=10&offset=0&payer_type=org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"commerce",
										"plans"
									],
									"query": [
										{
											"key": "paginated",
											"value": "true",
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated."
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
										},
										{
											"key": "payer_type",
											"value": "org",
											"description": "Filter plans by payer type"
										}
									]
								},
								"description": "Returns a list of all commerce plans for the instance. The plans are returned sorted by creation date,\nwith the newest plans appearing first. This includes both free and paid plans. Pagination is supported."
							},
							"response": [
								{
									"id": "781399-63bcc733-050a-4e01-a94a-e8cabbaf8de0",
									"name": "A list of commerce plans.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/commerce/plans?paginated=true&limit=10&offset=0&payer_type=org",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"commerce",
												"plans"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												},
												{
													"description": "Filter plans by payer type",
													"key": "payer_type",
													"value": "org"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"data\": [\n    {\n      \"object\": \"commerce_plan\",\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"fee\": {\n        \"amount\": 4207,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"annual_monthly_fee\": {\n        \"amount\": 510,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"annual_fee\": {\n        \"amount\": 9191,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"amount\": 1692,\n      \"amount_formatted\": \"string\",\n      \"annual_monthly_amount\": 6403,\n      \"annual_monthly_amount_formatted\": \"string\",\n      \"annual_amount\": 76,\n      \"annual_amount_formatted\": \"string\",\n      \"currency_symbol\": \"string\",\n      \"currency\": \"string\",\n      \"description\": \"string\",\n      \"product_id\": \"string\",\n      \"is_default\": true,\n      \"is_recurring\": false,\n      \"publicly_visible\": false,\n      \"has_base_fee\": true,\n      \"payer_type\": [\n        \"string\",\n        \"string\"\n      ],\n      \"for_payer_type\": \"string\",\n      \"slug\": \"string\",\n      \"avatar_url\": \"string\",\n      \"features\": [\n        {\n          \"object\": \"feature\",\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"description\": \"string\",\n          \"slug\": \"string\",\n          \"avatar_url\": \"string\"\n        },\n        {\n          \"object\": \"feature\",\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"description\": \"string\",\n          \"slug\": \"string\",\n          \"avatar_url\": \"string\"\n        }\n      ],\n      \"period\": \"string\",\n      \"interval\": 6682,\n      \"free_trial_enabled\": false,\n      \"free_trial_days\": 9359\n    },\n    {\n      \"object\": \"commerce_plan\",\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"fee\": {\n        \"amount\": 1299,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"annual_monthly_fee\": {\n        \"amount\": 4148,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"annual_fee\": {\n        \"amount\": 3051,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"amount\": 1127,\n      \"amount_formatted\": \"string\",\n      \"annual_monthly_amount\": 4531,\n      \"annual_monthly_amount_formatted\": \"string\",\n      \"annual_amount\": 4064,\n      \"annual_amount_formatted\": \"string\",\n      \"currency_symbol\": \"string\",\n      \"currency\": \"string\",\n      \"description\": \"string\",\n      \"product_id\": \"string\",\n      \"is_default\": false,\n      \"is_recurring\": true,\n      \"publicly_visible\": true,\n      \"has_base_fee\": false,\n      \"payer_type\": [\n        \"string\",\n        \"string\"\n      ],\n      \"for_payer_type\": \"string\",\n      \"slug\": \"string\",\n      \"avatar_url\": \"string\",\n      \"features\": [\n        {\n          \"object\": \"feature\",\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"description\": \"string\",\n          \"slug\": \"string\",\n          \"avatar_url\": \"string\"\n        },\n        {\n          \"object\": \"feature\",\n          \"id\": \"string\",\n          \"name\": \"string\",\n          \"description\": \"string\",\n          \"slug\": \"string\",\n          \"avatar_url\": \"string\"\n        }\n      ],\n      \"period\": \"string\",\n      \"interval\": 725,\n      \"free_trial_enabled\": true,\n      \"free_trial_days\": 5366\n    }\n  ],\n  \"total_count\": 2894\n}"
								},
								{
									"id": "781399-0f4e9de9-94ab-42a3-af05-0597d155c2b5",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/commerce/plans?paginated=true&limit=10&offset=0&payer_type=org",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"commerce",
												"plans"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												},
												{
													"description": "Filter plans by payer type",
													"key": "payer_type",
													"value": "org"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-0d0370df-7c4a-4197-8688-c485bdc0b9cc",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/commerce/plans?paginated=true&limit=10&offset=0&payer_type=org",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"commerce",
												"plans"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												},
												{
													"description": "Filter plans by payer type",
													"key": "payer_type",
													"value": "org"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-e874cf18-989f-468f-9523-a2f423ec2458",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/commerce/plans?paginated=true&limit=10&offset=0&payer_type=org",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"commerce",
												"plans"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												},
												{
													"description": "Filter plans by payer type",
													"key": "payer_type",
													"value": "org"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-f8dd3480-c7ae-492e-b133-f373bf6bb86e",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/commerce/plans?paginated=true&limit=10&offset=0&payer_type=org",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"commerce",
												"plans"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												},
												{
													"description": "Filter plans by payer type",
													"key": "payer_type",
													"value": "org"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-180ae7e0-6300-4195-a0f7-857413d32cce"
				},
				{
					"name": "subscription_items",
					"item": [
						{
							"name": "{subscription_item_id}",
							"item": [
								{
									"name": "Cancel a subscription item",
									"id": "781399-bbabf3cd-8461-4c77-b935-b35ef5f02943",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/commerce/subscription_items/:subscription_item_id?end_now=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"commerce",
												"subscription_items",
												":subscription_item_id"
											],
											"query": [
												{
													"key": "end_now",
													"value": "false",
													"description": "Whether to cancel the subscription immediately (true) or at the end of the current billing period (false, default)"
												}
											],
											"variable": [
												{
													"id": "2ba39363-deb3-4cfd-86fe-e63f46b1c1c0",
													"key": "subscription_item_id",
													"value": "string",
													"description": "The ID of the subscription item to cancel"
												}
											]
										},
										"description": "Cancel a specific subscription item. The subscription item can be canceled immediately or at the end of the current billing period."
									},
									"response": [
										{
											"id": "781399-2b559f4b-8428-45b3-b6a5-7653add6d5ac",
											"name": "A commerce subscription item.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/commerce/subscription_items/:subscription_item_id?end_now=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"commerce",
														"subscription_items",
														":subscription_item_id"
													],
													"query": [
														{
															"description": "Whether to cancel the subscription immediately (true) or at the end of the current billing period (false, default)",
															"key": "end_now",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "subscription_item_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"commerce_subscription_item\",\n  \"id\": \"string\",\n  \"instance_id\": \"string\",\n  \"status\": \"upcoming\",\n  \"plan_id\": \"string\",\n  \"plan\": {\n    \"object\": \"commerce_plan\",\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"fee\": {\n      \"amount\": 4872,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    },\n    \"annual_monthly_fee\": {\n      \"amount\": 4080,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    },\n    \"annual_fee\": {\n      \"amount\": 2784,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    },\n    \"amount\": 475,\n    \"amount_formatted\": \"string\",\n    \"annual_monthly_amount\": 194,\n    \"annual_monthly_amount_formatted\": \"string\",\n    \"annual_amount\": 8252,\n    \"annual_amount_formatted\": \"string\",\n    \"currency_symbol\": \"string\",\n    \"currency\": \"string\",\n    \"description\": \"string\",\n    \"product_id\": \"string\",\n    \"is_default\": true,\n    \"is_recurring\": true,\n    \"publicly_visible\": false,\n    \"has_base_fee\": false,\n    \"payer_type\": [\n      \"string\",\n      \"string\"\n    ],\n    \"for_payer_type\": \"string\",\n    \"slug\": \"string\",\n    \"avatar_url\": \"string\",\n    \"features\": [\n      {\n        \"object\": \"feature\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"description\": \"string\",\n        \"slug\": \"string\",\n        \"avatar_url\": \"string\"\n      },\n      {\n        \"object\": \"feature\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"description\": \"string\",\n        \"slug\": \"string\",\n        \"avatar_url\": \"string\"\n      }\n    ],\n    \"period\": \"string\",\n    \"interval\": 3861,\n    \"free_trial_enabled\": true,\n    \"free_trial_days\": 9283\n  },\n  \"plan_period\": \"month\",\n  \"payment_source_id\": \"string\",\n  \"payer_id\": \"string\",\n  \"is_free_trial\": false,\n  \"proration_date\": \"string\",\n  \"created_at\": 1019,\n  \"updated_at\": 905,\n  \"credit\": {\n    \"amount\": {\n      \"amount\": 5504,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    },\n    \"cycle_remaining_percent\": 1634.3095199873303\n  },\n  \"payment_source\": {\n    \"object\": \"commerce_source\",\n    \"id\": \"string\",\n    \"payer_id\": \"string\",\n    \"payment_method\": \"card\",\n    \"gateway\": \"string\",\n    \"gateway_external_id\": \"string\",\n    \"last4\": \"string\",\n    \"status\": \"active\",\n    \"wallet_type\": \"string\",\n    \"card_type\": \"string\",\n    \"created_at\": 5596,\n    \"updated_at\": 7070,\n    \"is_default\": true,\n    \"gateway_external_account_id\": \"string\",\n    \"expiry_year\": 7403,\n    \"expiry_month\": 1643,\n    \"is_removable\": true\n  },\n  \"lifetime_paid\": {\n    \"amount\": 8866,\n    \"amount_formatted\": \"string\",\n    \"currency\": \"string\",\n    \"currency_symbol\": \"string\"\n  },\n  \"amount\": {\n    \"amount\": 9487,\n    \"amount_formatted\": \"string\",\n    \"currency\": \"string\",\n    \"currency_symbol\": \"string\"\n  },\n  \"next_invoice\": {\n    \"amount\": {\n      \"amount\": 3439,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    },\n    \"date\": 3630\n  },\n  \"next_payment\": {\n    \"amount\": {\n      \"amount\": 9809,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    },\n    \"date\": 584\n  },\n  \"payer\": {\n    \"object\": \"commerce_payer\",\n    \"id\": \"string\",\n    \"instance_id\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"email\": \"string\",\n    \"image_url\": \"string\",\n    \"created_at\": 1882,\n    \"updated_at\": 6791,\n    \"user_id\": \"string\",\n    \"organization_id\": \"string\",\n    \"organization_name\": \"string\"\n  },\n  \"period_start\": 6192,\n  \"period_end\": 466,\n  \"canceled_at\": 8156,\n  \"past_due_at\": 3650,\n  \"ended_at\": 3677\n}"
										},
										{
											"id": "781399-e0628bde-11a1-45f5-a8bc-cb2e8f17db2c",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/commerce/subscription_items/:subscription_item_id?end_now=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"commerce",
														"subscription_items",
														":subscription_item_id"
													],
													"query": [
														{
															"description": "Whether to cancel the subscription immediately (true) or at the end of the current billing period (false, default)",
															"key": "end_now",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "subscription_item_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-29c92b7d-a074-4a1f-993f-7c071e48070e",
											"name": "Authentication invalid",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/commerce/subscription_items/:subscription_item_id?end_now=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"commerce",
														"subscription_items",
														":subscription_item_id"
													],
													"query": [
														{
															"description": "Whether to cancel the subscription immediately (true) or at the end of the current billing period (false, default)",
															"key": "end_now",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "subscription_item_id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-2411c808-737b-4100-b8d7-5ffc3f4d10e6",
											"name": "Authorization invalid",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/commerce/subscription_items/:subscription_item_id?end_now=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"commerce",
														"subscription_items",
														":subscription_item_id"
													],
													"query": [
														{
															"description": "Whether to cancel the subscription immediately (true) or at the end of the current billing period (false, default)",
															"key": "end_now",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "subscription_item_id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-e5cd6397-6b4e-4b7d-abf3-4c93d90934a9",
											"name": "Resource not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/commerce/subscription_items/:subscription_item_id?end_now=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"commerce",
														"subscription_items",
														":subscription_item_id"
													],
													"query": [
														{
															"description": "Whether to cancel the subscription immediately (true) or at the end of the current billing period (false, default)",
															"key": "end_now",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "subscription_item_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-1483a180-6a63-4946-bbc6-dd13972be2af",
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/commerce/subscription_items/:subscription_item_id?end_now=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"commerce",
														"subscription_items",
														":subscription_item_id"
													],
													"query": [
														{
															"description": "Whether to cancel the subscription immediately (true) or at the end of the current billing period (false, default)",
															"key": "end_now",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "subscription_item_id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										},
										{
											"id": "781399-970906a1-862c-4049-813e-2c2b82e64fb1",
											"name": "Request was not successful",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/commerce/subscription_items/:subscription_item_id?end_now=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"commerce",
														"subscription_items",
														":subscription_item_id"
													],
													"query": [
														{
															"description": "Whether to cancel the subscription immediately (true) or at the end of the current billing period (false, default)",
															"key": "end_now",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "subscription_item_id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
										}
									]
								}
							],
							"id": "781399-d894fabf-29c9-4975-941d-b4d1eecfd51e"
						},
						{
							"name": "List all subscription items",
							"id": "781399-5494e1b4-7b4a-4e3e-9dcf-c29fba70fa72",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/commerce/subscription_items?paginated=true&limit=10&offset=0&status=active&payer_type=org&plan_id=string&include_free=false&query=string&user_id=string&organization_id=string",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"commerce",
										"subscription_items"
									],
									"query": [
										{
											"key": "paginated",
											"value": "true",
											"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated."
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`."
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`."
										},
										{
											"key": "status",
											"value": "active",
											"description": "Filter subscription items by status"
										},
										{
											"key": "payer_type",
											"value": "org",
											"description": "Filter subscription items by payer type"
										},
										{
											"key": "plan_id",
											"value": "string",
											"description": "Filter subscription items by plan ID"
										},
										{
											"key": "include_free",
											"value": "false",
											"description": "Whether to include free plan subscription items"
										},
										{
											"key": "query",
											"value": "string",
											"description": "Search query to filter subscription items by email, user first name, user last name, or organization name.\nSupports partial matching."
										},
										{
											"key": "user_id",
											"value": "string",
											"description": "Filter subscription items by user ID"
										},
										{
											"key": "organization_id",
											"value": "string",
											"description": "Filter subscription items by organization ID"
										}
									]
								},
								"description": "Returns a list of all subscription items for the instance. The subscription items are returned sorted by creation date,\nwith the newest appearing first. This includes subscriptions for both users and organizations. Pagination is supported."
							},
							"response": [
								{
									"id": "781399-3d9dd4a9-4306-49af-8598-8acddec06a03",
									"name": "A list of commerce subscription items.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/commerce/subscription_items?paginated=true&limit=10&offset=0&status=active&payer_type=org&plan_id=string&include_free=false&query=string&user_id=string&organization_id=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"commerce",
												"subscription_items"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												},
												{
													"description": "Filter subscription items by status",
													"key": "status",
													"value": "active"
												},
												{
													"description": "Filter subscription items by payer type",
													"key": "payer_type",
													"value": "org"
												},
												{
													"description": "Filter subscription items by plan ID",
													"key": "plan_id",
													"value": "string"
												},
												{
													"description": "Whether to include free plan subscription items",
													"key": "include_free",
													"value": "false"
												},
												{
													"description": "Search query to filter subscription items by email, user first name, user last name, or organization name.\nSupports partial matching.",
													"key": "query",
													"value": "string"
												},
												{
													"description": "Filter subscription items by user ID",
													"key": "user_id",
													"value": "string"
												},
												{
													"description": "Filter subscription items by organization ID",
													"key": "organization_id",
													"value": "string"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"data\": [\n    {\n      \"object\": \"commerce_subscription_item\",\n      \"id\": \"string\",\n      \"instance_id\": \"string\",\n      \"status\": \"abandoned\",\n      \"plan_id\": \"string\",\n      \"plan\": {\n        \"object\": \"commerce_plan\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"fee\": {\n          \"amount\": 7978,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"annual_monthly_fee\": {\n          \"amount\": 3307,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"annual_fee\": {\n          \"amount\": 2463,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"amount\": 4579,\n        \"amount_formatted\": \"string\",\n        \"annual_monthly_amount\": 3909,\n        \"annual_monthly_amount_formatted\": \"string\",\n        \"annual_amount\": 8095,\n        \"annual_amount_formatted\": \"string\",\n        \"currency_symbol\": \"string\",\n        \"currency\": \"string\",\n        \"description\": \"string\",\n        \"product_id\": \"string\",\n        \"is_default\": true,\n        \"is_recurring\": true,\n        \"publicly_visible\": true,\n        \"has_base_fee\": false,\n        \"payer_type\": [\n          \"string\",\n          \"string\"\n        ],\n        \"for_payer_type\": \"string\",\n        \"slug\": \"string\",\n        \"avatar_url\": \"string\",\n        \"features\": [\n          {\n            \"object\": \"feature\",\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"slug\": \"string\",\n            \"avatar_url\": \"string\"\n          },\n          {\n            \"object\": \"feature\",\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"slug\": \"string\",\n            \"avatar_url\": \"string\"\n          }\n        ],\n        \"period\": \"string\",\n        \"interval\": 7428,\n        \"free_trial_enabled\": true,\n        \"free_trial_days\": 740\n      },\n      \"plan_period\": \"annual\",\n      \"payment_source_id\": \"string\",\n      \"payer_id\": \"string\",\n      \"is_free_trial\": false,\n      \"proration_date\": \"string\",\n      \"created_at\": 5144,\n      \"updated_at\": 5812,\n      \"credit\": {\n        \"amount\": {\n          \"amount\": 5418,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"cycle_remaining_percent\": 2036.777281482004\n      },\n      \"payment_source\": {\n        \"object\": \"commerce_source\",\n        \"id\": \"string\",\n        \"payer_id\": \"string\",\n        \"payment_method\": \"card\",\n        \"gateway\": \"string\",\n        \"gateway_external_id\": \"string\",\n        \"last4\": \"string\",\n        \"status\": \"disconnected\",\n        \"wallet_type\": \"string\",\n        \"card_type\": \"string\",\n        \"created_at\": 7554,\n        \"updated_at\": 6146,\n        \"is_default\": true,\n        \"gateway_external_account_id\": \"string\",\n        \"expiry_year\": 4110,\n        \"expiry_month\": 93,\n        \"is_removable\": true\n      },\n      \"lifetime_paid\": {\n        \"amount\": 789,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"amount\": {\n        \"amount\": 6463,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"next_invoice\": {\n        \"amount\": {\n          \"amount\": 4840,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"date\": 7643\n      },\n      \"next_payment\": {\n        \"amount\": {\n          \"amount\": 9082,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"date\": 6580\n      },\n      \"payer\": {\n        \"object\": \"commerce_payer\",\n        \"id\": \"string\",\n        \"instance_id\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"email\": \"string\",\n        \"image_url\": \"string\",\n        \"created_at\": 6494,\n        \"updated_at\": 6732,\n        \"user_id\": \"string\",\n        \"organization_id\": \"string\",\n        \"organization_name\": \"string\"\n      },\n      \"period_start\": 9816,\n      \"period_end\": 9635,\n      \"canceled_at\": 9392,\n      \"past_due_at\": 8710,\n      \"ended_at\": 6979\n    },\n    {\n      \"object\": \"commerce_subscription_item\",\n      \"id\": \"string\",\n      \"instance_id\": \"string\",\n      \"status\": \"ended\",\n      \"plan_id\": \"string\",\n      \"plan\": {\n        \"object\": \"commerce_plan\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"fee\": {\n          \"amount\": 5058,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"annual_monthly_fee\": {\n          \"amount\": 397,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"annual_fee\": {\n          \"amount\": 6675,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"amount\": 2015,\n        \"amount_formatted\": \"string\",\n        \"annual_monthly_amount\": 5777,\n        \"annual_monthly_amount_formatted\": \"string\",\n        \"annual_amount\": 621,\n        \"annual_amount_formatted\": \"string\",\n        \"currency_symbol\": \"string\",\n        \"currency\": \"string\",\n        \"description\": \"string\",\n        \"product_id\": \"string\",\n        \"is_default\": true,\n        \"is_recurring\": false,\n        \"publicly_visible\": true,\n        \"has_base_fee\": true,\n        \"payer_type\": [\n          \"string\",\n          \"string\"\n        ],\n        \"for_payer_type\": \"string\",\n        \"slug\": \"string\",\n        \"avatar_url\": \"string\",\n        \"features\": [\n          {\n            \"object\": \"feature\",\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"slug\": \"string\",\n            \"avatar_url\": \"string\"\n          },\n          {\n            \"object\": \"feature\",\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"description\": \"string\",\n            \"slug\": \"string\",\n            \"avatar_url\": \"string\"\n          }\n        ],\n        \"period\": \"string\",\n        \"interval\": 5726,\n        \"free_trial_enabled\": false,\n        \"free_trial_days\": 5230\n      },\n      \"plan_period\": \"month\",\n      \"payment_source_id\": \"string\",\n      \"payer_id\": \"string\",\n      \"is_free_trial\": false,\n      \"proration_date\": \"string\",\n      \"created_at\": 9284,\n      \"updated_at\": 8128,\n      \"credit\": {\n        \"amount\": {\n          \"amount\": 4124,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"cycle_remaining_percent\": 9598.869458044279\n      },\n      \"payment_source\": {\n        \"object\": \"commerce_source\",\n        \"id\": \"string\",\n        \"payer_id\": \"string\",\n        \"payment_method\": \"card\",\n        \"gateway\": \"string\",\n        \"gateway_external_id\": \"string\",\n        \"last4\": \"string\",\n        \"status\": \"active\",\n        \"wallet_type\": \"string\",\n        \"card_type\": \"string\",\n        \"created_at\": 3971,\n        \"updated_at\": 8045,\n        \"is_default\": true,\n        \"gateway_external_account_id\": \"string\",\n        \"expiry_year\": 2937,\n        \"expiry_month\": 6529,\n        \"is_removable\": true\n      },\n      \"lifetime_paid\": {\n        \"amount\": 5490,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"amount\": {\n        \"amount\": 6320,\n        \"amount_formatted\": \"string\",\n        \"currency\": \"string\",\n        \"currency_symbol\": \"string\"\n      },\n      \"next_invoice\": {\n        \"amount\": {\n          \"amount\": 6702,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"date\": 2752\n      },\n      \"next_payment\": {\n        \"amount\": {\n          \"amount\": 7765,\n          \"amount_formatted\": \"string\",\n          \"currency\": \"string\",\n          \"currency_symbol\": \"string\"\n        },\n        \"date\": 5989\n      },\n      \"payer\": {\n        \"object\": \"commerce_payer\",\n        \"id\": \"string\",\n        \"instance_id\": \"string\",\n        \"first_name\": \"string\",\n        \"last_name\": \"string\",\n        \"email\": \"string\",\n        \"image_url\": \"string\",\n        \"created_at\": 3478,\n        \"updated_at\": 8125,\n        \"user_id\": \"string\",\n        \"organization_id\": \"string\",\n        \"organization_name\": \"string\"\n      },\n      \"period_start\": 9852,\n      \"period_end\": 6659,\n      \"canceled_at\": 3067,\n      \"past_due_at\": 1641,\n      \"ended_at\": 8611\n    }\n  ],\n  \"total_count\": 7186\n}"
								},
								{
									"id": "781399-c9afa545-c321-4953-b1e4-aeb8ecf586c4",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/commerce/subscription_items?paginated=true&limit=10&offset=0&status=active&payer_type=org&plan_id=string&include_free=false&query=string&user_id=string&organization_id=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"commerce",
												"subscription_items"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												},
												{
													"description": "Filter subscription items by status",
													"key": "status",
													"value": "active"
												},
												{
													"description": "Filter subscription items by payer type",
													"key": "payer_type",
													"value": "org"
												},
												{
													"description": "Filter subscription items by plan ID",
													"key": "plan_id",
													"value": "string"
												},
												{
													"description": "Whether to include free plan subscription items",
													"key": "include_free",
													"value": "false"
												},
												{
													"description": "Search query to filter subscription items by email, user first name, user last name, or organization name.\nSupports partial matching.",
													"key": "query",
													"value": "string"
												},
												{
													"description": "Filter subscription items by user ID",
													"key": "user_id",
													"value": "string"
												},
												{
													"description": "Filter subscription items by organization ID",
													"key": "organization_id",
													"value": "string"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-1aa7ab4b-d9c1-4ce7-9fb9-6fddcb4b5365",
									"name": "Authentication invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/commerce/subscription_items?paginated=true&limit=10&offset=0&status=active&payer_type=org&plan_id=string&include_free=false&query=string&user_id=string&organization_id=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"commerce",
												"subscription_items"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												},
												{
													"description": "Filter subscription items by status",
													"key": "status",
													"value": "active"
												},
												{
													"description": "Filter subscription items by payer type",
													"key": "payer_type",
													"value": "org"
												},
												{
													"description": "Filter subscription items by plan ID",
													"key": "plan_id",
													"value": "string"
												},
												{
													"description": "Whether to include free plan subscription items",
													"key": "include_free",
													"value": "false"
												},
												{
													"description": "Search query to filter subscription items by email, user first name, user last name, or organization name.\nSupports partial matching.",
													"key": "query",
													"value": "string"
												},
												{
													"description": "Filter subscription items by user ID",
													"key": "user_id",
													"value": "string"
												},
												{
													"description": "Filter subscription items by organization ID",
													"key": "organization_id",
													"value": "string"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-ce087ec3-cb63-4442-a0d0-4cd261ced315",
									"name": "Invalid request parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/commerce/subscription_items?paginated=true&limit=10&offset=0&status=active&payer_type=org&plan_id=string&include_free=false&query=string&user_id=string&organization_id=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"commerce",
												"subscription_items"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												},
												{
													"description": "Filter subscription items by status",
													"key": "status",
													"value": "active"
												},
												{
													"description": "Filter subscription items by payer type",
													"key": "payer_type",
													"value": "org"
												},
												{
													"description": "Filter subscription items by plan ID",
													"key": "plan_id",
													"value": "string"
												},
												{
													"description": "Whether to include free plan subscription items",
													"key": "include_free",
													"value": "false"
												},
												{
													"description": "Search query to filter subscription items by email, user first name, user last name, or organization name.\nSupports partial matching.",
													"key": "query",
													"value": "string"
												},
												{
													"description": "Filter subscription items by user ID",
													"key": "user_id",
													"value": "string"
												},
												{
													"description": "Filter subscription items by organization ID",
													"key": "organization_id",
													"value": "string"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								},
								{
									"id": "781399-da722de6-41c5-43e2-85cf-d53ba46d77ff",
									"name": "Request was not successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/commerce/subscription_items?paginated=true&limit=10&offset=0&status=active&payer_type=org&plan_id=string&include_free=false&query=string&user_id=string&organization_id=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"commerce",
												"subscription_items"
											],
											"query": [
												{
													"description": "Whether to paginate the results.\nIf true, the results will be paginated.\nIf false, the results will not be paginated.",
													"key": "paginated",
													"value": "true"
												},
												{
													"description": "Applies a limit to the number of results returned.\nCan be used for paginating the results together with `offset`.",
													"key": "limit",
													"value": "10"
												},
												{
													"description": "Skip the first `offset` results when paginating.\nNeeds to be an integer greater or equal to zero.\nTo be used in conjunction with `limit`.",
													"key": "offset",
													"value": "0"
												},
												{
													"description": "Filter subscription items by status",
													"key": "status",
													"value": "active"
												},
												{
													"description": "Filter subscription items by payer type",
													"key": "payer_type",
													"value": "org"
												},
												{
													"description": "Filter subscription items by plan ID",
													"key": "plan_id",
													"value": "string"
												},
												{
													"description": "Whether to include free plan subscription items",
													"key": "include_free",
													"value": "false"
												},
												{
													"description": "Search query to filter subscription items by email, user first name, user last name, or organization name.\nSupports partial matching.",
													"key": "query",
													"value": "string"
												},
												{
													"description": "Filter subscription items by user ID",
													"key": "user_id",
													"value": "string"
												},
												{
													"description": "Filter subscription items by organization ID",
													"key": "organization_id",
													"value": "string"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
								}
							]
						}
					],
					"id": "781399-d370d717-fe1a-4447-bbd5-251a2dabd116"
				}
			],
			"id": "781399-5dbfd8b7-c1ef-4360-bee6-a18444a7955a"
		},
		{
			"name": "billing",
			"item": [
				{
					"name": "subscription_items",
					"item": [
						{
							"name": "{subscription_item_id}",
							"item": [
								{
									"name": "extend_free_trial",
									"item": [
										{
											"name": "Extend free trial for a subscription item",
											"id": "781399-6b3814d7-6ece-4c21-903e-6a361193723f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"extend_to\": \"2026-01-08T00:00:00Z\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/billing/subscription_items/:subscription_item_id/extend_free_trial",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"billing",
														"subscription_items",
														":subscription_item_id",
														"extend_free_trial"
													],
													"variable": [
														{
															"id": "f172e1a1-3e2b-4f08-bd9c-680f7085fb13",
															"key": "subscription_item_id",
															"value": "string",
															"description": "The ID of the subscription item to extend the free trial for"
														}
													]
												},
												"description": "Extends the free trial period for a specific subscription item to the specified timestamp.\nThe subscription item must be currently in a free trial period, and the plan must support free trials.\nThe timestamp must be in the future and not more than 365 days from the end of the current trial period\nThis operation is idempotent - repeated requests with the same timestamp will not change the trial period."
											},
											"response": [
												{
													"id": "781399-f1f135c0-96fc-4918-b8e5-f7533b3ca764",
													"name": "A commerce subscription item.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"extend_to\": \"2026-01-08T00:00:00Z\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/billing/subscription_items/:subscription_item_id/extend_free_trial",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"billing",
																"subscription_items",
																":subscription_item_id",
																"extend_free_trial"
															],
															"variable": [
																{
																	"key": "subscription_item_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"object\": \"commerce_subscription_item\",\n  \"id\": \"string\",\n  \"instance_id\": \"string\",\n  \"status\": \"upcoming\",\n  \"plan_id\": \"string\",\n  \"plan\": {\n    \"object\": \"commerce_plan\",\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"fee\": {\n      \"amount\": 4872,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    },\n    \"annual_monthly_fee\": {\n      \"amount\": 4080,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    },\n    \"annual_fee\": {\n      \"amount\": 2784,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    },\n    \"amount\": 475,\n    \"amount_formatted\": \"string\",\n    \"annual_monthly_amount\": 194,\n    \"annual_monthly_amount_formatted\": \"string\",\n    \"annual_amount\": 8252,\n    \"annual_amount_formatted\": \"string\",\n    \"currency_symbol\": \"string\",\n    \"currency\": \"string\",\n    \"description\": \"string\",\n    \"product_id\": \"string\",\n    \"is_default\": true,\n    \"is_recurring\": true,\n    \"publicly_visible\": false,\n    \"has_base_fee\": false,\n    \"payer_type\": [\n      \"string\",\n      \"string\"\n    ],\n    \"for_payer_type\": \"string\",\n    \"slug\": \"string\",\n    \"avatar_url\": \"string\",\n    \"features\": [\n      {\n        \"object\": \"feature\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"description\": \"string\",\n        \"slug\": \"string\",\n        \"avatar_url\": \"string\"\n      },\n      {\n        \"object\": \"feature\",\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"description\": \"string\",\n        \"slug\": \"string\",\n        \"avatar_url\": \"string\"\n      }\n    ],\n    \"period\": \"string\",\n    \"interval\": 3861,\n    \"free_trial_enabled\": true,\n    \"free_trial_days\": 9283\n  },\n  \"plan_period\": \"month\",\n  \"payment_source_id\": \"string\",\n  \"payer_id\": \"string\",\n  \"is_free_trial\": false,\n  \"proration_date\": \"string\",\n  \"created_at\": 1019,\n  \"updated_at\": 905,\n  \"credit\": {\n    \"amount\": {\n      \"amount\": 5504,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    },\n    \"cycle_remaining_percent\": 1634.3095199873303\n  },\n  \"payment_source\": {\n    \"object\": \"commerce_source\",\n    \"id\": \"string\",\n    \"payer_id\": \"string\",\n    \"payment_method\": \"card\",\n    \"gateway\": \"string\",\n    \"gateway_external_id\": \"string\",\n    \"last4\": \"string\",\n    \"status\": \"active\",\n    \"wallet_type\": \"string\",\n    \"card_type\": \"string\",\n    \"created_at\": 5596,\n    \"updated_at\": 7070,\n    \"is_default\": true,\n    \"gateway_external_account_id\": \"string\",\n    \"expiry_year\": 7403,\n    \"expiry_month\": 1643,\n    \"is_removable\": true\n  },\n  \"lifetime_paid\": {\n    \"amount\": 8866,\n    \"amount_formatted\": \"string\",\n    \"currency\": \"string\",\n    \"currency_symbol\": \"string\"\n  },\n  \"amount\": {\n    \"amount\": 9487,\n    \"amount_formatted\": \"string\",\n    \"currency\": \"string\",\n    \"currency_symbol\": \"string\"\n  },\n  \"next_invoice\": {\n    \"amount\": {\n      \"amount\": 3439,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    },\n    \"date\": 3630\n  },\n  \"next_payment\": {\n    \"amount\": {\n      \"amount\": 9809,\n      \"amount_formatted\": \"string\",\n      \"currency\": \"string\",\n      \"currency_symbol\": \"string\"\n    },\n    \"date\": 584\n  },\n  \"payer\": {\n    \"object\": \"commerce_payer\",\n    \"id\": \"string\",\n    \"instance_id\": \"string\",\n    \"first_name\": \"string\",\n    \"last_name\": \"string\",\n    \"email\": \"string\",\n    \"image_url\": \"string\",\n    \"created_at\": 1882,\n    \"updated_at\": 6791,\n    \"user_id\": \"string\",\n    \"organization_id\": \"string\",\n    \"organization_name\": \"string\"\n  },\n  \"period_start\": 6192,\n  \"period_end\": 466,\n  \"canceled_at\": 8156,\n  \"past_due_at\": 3650,\n  \"ended_at\": 3677\n}"
												},
												{
													"id": "781399-795409dd-b145-46fe-932d-6ea2d2cf0dbb",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"extend_to\": \"2026-01-08T00:00:00Z\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/billing/subscription_items/:subscription_item_id/extend_free_trial",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"billing",
																"subscription_items",
																":subscription_item_id",
																"extend_free_trial"
															],
															"variable": [
																{
																	"key": "subscription_item_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-87151aa4-845a-4a8a-b3fa-ed1c8a3ba672",
													"name": "Authentication invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"extend_to\": \"2026-01-08T00:00:00Z\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/billing/subscription_items/:subscription_item_id/extend_free_trial",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"billing",
																"subscription_items",
																":subscription_item_id",
																"extend_free_trial"
															],
															"variable": [
																{
																	"key": "subscription_item_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-9bace5a2-47b6-437f-b422-1afe9315ec58",
													"name": "Authorization invalid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"extend_to\": \"2026-01-08T00:00:00Z\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/billing/subscription_items/:subscription_item_id/extend_free_trial",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"billing",
																"subscription_items",
																":subscription_item_id",
																"extend_free_trial"
															],
															"variable": [
																{
																	"key": "subscription_item_id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-f55ab2a0-e099-4d0a-954e-1c3024be7e4c",
													"name": "Resource not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"extend_to\": \"2026-01-08T00:00:00Z\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/billing/subscription_items/:subscription_item_id/extend_free_trial",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"billing",
																"subscription_items",
																":subscription_item_id",
																"extend_free_trial"
															],
															"variable": [
																{
																	"key": "subscription_item_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-97a3190b-6e59-4df9-b865-03d26d10be3c",
													"name": "Invalid request parameters",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"extend_to\": \"2026-01-08T00:00:00Z\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/billing/subscription_items/:subscription_item_id/extend_free_trial",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"billing",
																"subscription_items",
																":subscription_item_id",
																"extend_free_trial"
															],
															"variable": [
																{
																	"key": "subscription_item_id"
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												},
												{
													"id": "781399-80192563-9ba3-4059-9552-09e8b2b83b51",
													"name": "Request was not successful",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"extend_to\": \"2026-01-08T00:00:00Z\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/billing/subscription_items/:subscription_item_id/extend_free_trial",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"billing",
																"subscription_items",
																":subscription_item_id",
																"extend_free_trial"
															],
															"variable": [
																{
																	"key": "subscription_item_id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"errors\": [\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    },\n    {\n      \"message\": \"string\",\n      \"long_message\": \"string\",\n      \"code\": \"string\",\n      \"meta\": {}\n    }\n  ],\n  \"meta\": {},\n  \"clerk_trace_id\": \"string\"\n}"
												}
											]
										}
									],
									"id": "781399-01d06791-5e9d-4c56-ad49-82385197a792"
								}
							],
							"id": "781399-c5dffa36-e763-4478-8fc9-e3e9772486d9"
						}
					],
					"id": "781399-e08bd1ba-dd0b-4551-ac48-db3c96a5e4e4"
				}
			],
			"id": "781399-f91a1ea7-d365-4f9f-a212-c170173b7fb7"
		},
		{
			"name": "m2m_tokens",
			"item": [
				{
					"name": "{m2m_token_id}",
					"item": [
						{
							"name": "revoke",
							"item": [
								{
									"name": "Revoke a M2M Token",
									"id": "781399-6f838f46-8f2a-4122-9747-e06aa93cf38f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"revocation_reason\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/m2m_tokens/:m2m_token_id/revoke",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"m2m_tokens",
												":m2m_token_id",
												"revoke"
											],
											"variable": [
												{
													"id": "dccc64bb-a1de-4708-b463-37816d765ada",
													"key": "m2m_token_id",
													"value": "mt_B79C803f256a62DFDe0671aF9aA97874"
												}
											]
										},
										"description": "Revokes a M2M Token.\n\nThis endpoint can be authenticated by either a Machine Secret Key or by a Clerk Secret Key.\n\n- When revoking a M2M Token with a Machine Secret Key, the token must managed by the Machine associated with the Machine Secret Key.\n- When revoking a M2M Token with a Clerk Secret Key, any token on the Instance can be revoked."
									},
									"response": [
										{
											"id": "781399-5df8518c-c071-4cc1-8346-ab9edc75e932",
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"revocation_reason\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/m2m_tokens/:m2m_token_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"m2m_tokens",
														":m2m_token_id",
														"revoke"
													],
													"variable": [
														{
															"key": "m2m_token_id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"object\": \"machine_to_machine_token\",\n  \"id\": \"mt_f7f0ba8c3b4843ce7d85fcdd5e71853e\",\n  \"subject\": \"mch_2xhFjEI5X2qWRvtV13BzSj8H6Dk\",\n  \"revoked\": false,\n  \"revocation_reason\": \"Revoked by user\",\n  \"expired\": false,\n  \"expiration\": 1716883200,\n  \"last_used_at\": 1716883200,\n  \"created_at\": 1716883200,\n  \"updated_at\": 1716883200,\n  \"claims\": {\n    \"important_metadata\": \"Some useful data\"\n  },\n  \"scopes\": [\n    \"mch_2xhFjEI5X2qWRvtV13BzSj8H6Dk\",\n    \"mch_2yGkLpQ7Y3rXSwtU24CzTk9I7Em\"\n  ]\n}"
										},
										{
											"id": "781399-95f9454f-d56f-4bf5-a26e-42d835441b12",
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"revocation_reason\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/m2m_tokens/:m2m_token_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"m2m_tokens",
														":m2m_token_id",
														"revoke"
													],
													"variable": [
														{
															"key": "m2m_token_id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"Bad Request\",\n      \"long_message\": \"Invalid 'url_parameter.example': Failed regex check\",\n      \"code\": \"bad_request\"\n    },\n    {\n      \"message\": \"Bad Request\",\n      \"long_message\": \"Invalid 'url_parameter.example': Failed regex check\",\n      \"code\": \"bad_request\"\n    }\n  ]\n}"
										},
										{
											"id": "781399-57d0f2df-6ceb-40ed-9073-6e9931425cef",
											"name": "404 Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"revocation_reason\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/m2m_tokens/:m2m_token_id/revoke",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"m2m_tokens",
														":m2m_token_id",
														"revoke"
													],
													"variable": [
														{
															"key": "m2m_token_id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"errors\": [\n    {\n      \"message\": \"some details about the error\",\n      \"long_message\": \"some details about the error\",\n      \"code\": \"some_error_code\"\n    },\n    {\n      \"message\": \"some details about the error\",\n      \"long_message\": \"some details about the error\",\n      \"code\": \"some_error_code\"\n    }\n  ]\n}"
										}
									]
								}
							],
							"id": "781399-c87d75af-ceb0-42a1-9c80-44be7f74a7c5"
						}
					],
					"id": "781399-dc63b316-c07b-49e8-a72a-e794fd4563e9"
				},
				{
					"name": "verify",
					"item": [
						{
							"name": "Verify a M2M Token",
							"id": "781399-424346c5-740f-479b-9b9a-0bc4f924e473",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"string\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/m2m_tokens/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"m2m_tokens",
										"verify"
									]
								},
								"description": "Verifies a M2M Token.\n\nThis endpoint can be authenticated by either a Machine Secret Key or by a Clerk Secret Key.\n\n- When verifying a M2M Token with a Machine Secret Key, the token must be granted access to the Machine associated with the Machine Secret Key.\n- When verifying a M2M Token with a Clerk Secret Key, any token on the Instance can be verified."
							},
							"response": [
								{
									"id": "781399-9a855d0c-df0c-4afa-b4e5-2fb9f5535b4e",
									"name": "200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/m2m_tokens/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"m2m_tokens",
												"verify"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"object\": \"machine_to_machine_token\",\n  \"id\": \"mt_f7f0ba8c3b4843ce7d85fcdd5e71853e\",\n  \"subject\": \"mch_2xhFjEI5X2qWRvtV13BzSj8H6Dk\",\n  \"revoked\": false,\n  \"revocation_reason\": \"Revoked by user\",\n  \"expired\": false,\n  \"expiration\": 1716883200,\n  \"last_used_at\": 1716883200,\n  \"created_at\": 1716883200,\n  \"updated_at\": 1716883200,\n  \"claims\": {\n    \"important_metadata\": \"Some useful data\"\n  },\n  \"scopes\": [\n    \"mch_2xhFjEI5X2qWRvtV13BzSj8H6Dk\",\n    \"mch_2yGkLpQ7Y3rXSwtU24CzTk9I7Em\"\n  ]\n}"
								},
								{
									"id": "781399-9501a60d-3a25-4ba8-bdc4-c94b82b20717",
									"name": "400 Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/m2m_tokens/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"m2m_tokens",
												"verify"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"Bad Request\",\n      \"long_message\": \"Invalid 'url_parameter.example': Failed regex check\",\n      \"code\": \"bad_request\"\n    },\n    {\n      \"message\": \"Bad Request\",\n      \"long_message\": \"Invalid 'url_parameter.example': Failed regex check\",\n      \"code\": \"bad_request\"\n    }\n  ]\n}"
								},
								{
									"id": "781399-4af83b40-3de7-477b-b865-331509fd37a1",
									"name": "404 Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/m2m_tokens/verify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"m2m_tokens",
												"verify"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"errors\": [\n    {\n      \"message\": \"some details about the error\",\n      \"long_message\": \"some details about the error\",\n      \"code\": \"some_error_code\"\n    },\n    {\n      \"message\": \"some details about the error\",\n      \"long_message\": \"some details about the error\",\n      \"code\": \"some_error_code\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"id": "781399-9ea96710-d863-401f-86fa-141ed156a0a6"
				},
				{
					"name": "Create a M2M Token",
					"id": "781399-d94b4314-c4f6-4450-9e56-317ea0826c3c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"seconds_until_expiration\": 2880.6578374493533,\n  \"claims\": {\n    \"nullable\": true\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/m2m_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"m2m_tokens"
							]
						},
						"description": "Creates a new M2M Token. Must be authenticated via a Machine Secret Key."
					},
					"response": [
						{
							"id": "781399-f6f604fd-343b-4f23-abb5-37b534017f32",
							"name": "201 Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"seconds_until_expiration\": 2880.6578374493533,\n  \"claims\": {\n    \"nullable\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/m2m_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"m2m_tokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"object\": \"machine_to_machine_token\",\n  \"id\": \"mt_f7f0ba8c3b4843ce7d85fcdd5e71853e\",\n  \"subject\": \"mch_2xhFjEI5X2qWRvtV13BzSj8H6Dk\",\n  \"token\": \"mt_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n  \"revoked\": false,\n  \"revocation_reason\": \"Revoked by user\",\n  \"expired\": false,\n  \"expiration\": 1716883200,\n  \"last_used_at\": 1716883200,\n  \"created_at\": 1716883200,\n  \"updated_at\": 1716883200,\n  \"claims\": {\n    \"important_metadata\": \"Some useful data\"\n  },\n  \"scopes\": [\n    \"mch_2xhFjEI5X2qWRvtV13BzSj8H6Dk\",\n    \"mch_2yGkLpQ7Y3rXSwtU24CzTk9I7Em\"\n  ]\n}"
						},
						{
							"id": "781399-c3318a6d-8c4a-407b-b561-134444525915",
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"seconds_until_expiration\": 2880.6578374493533,\n  \"claims\": {\n    \"nullable\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/m2m_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"m2m_tokens"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"Bad Request\",\n      \"long_message\": \"Invalid 'url_parameter.example': Failed regex check\",\n      \"code\": \"bad_request\"\n    },\n    {\n      \"message\": \"Bad Request\",\n      \"long_message\": \"Invalid 'url_parameter.example': Failed regex check\",\n      \"code\": \"bad_request\"\n    }\n  ]\n}"
						},
						{
							"id": "781399-f57854c4-9894-428b-b16d-5cff939c6d00",
							"name": "409 Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"seconds_until_expiration\": 2880.6578374493533,\n  \"claims\": {\n    \"nullable\": true\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/m2m_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"m2m_tokens"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"some details about the error\",\n      \"long_message\": \"some details about the error\",\n      \"code\": \"some_error_code\"\n    },\n    {\n      \"message\": \"some details about the error\",\n      \"long_message\": \"some details about the error\",\n      \"code\": \"some_error_code\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get M2M Tokens",
					"id": "781399-26309bc7-ab7b-4c56-a54d-fb4c9d893264",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/m2m_tokens?subject=mch_PWHgPhOnLY7eHF73JHZ9XPmXhMv&revoked=false&expired=false&limit=10&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"m2m_tokens"
							],
							"query": [
								{
									"key": "subject",
									"value": "mch_PWHgPhOnLY7eHF73JHZ9XPmXhMv"
								},
								{
									"key": "revoked",
									"value": "false"
								},
								{
									"key": "expired",
									"value": "false"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						},
						"description": "Fetches M2M tokens for a specific machine.\n\nThis endpoint can be authenticated by either a Machine Secret Key or by a Clerk Secret Key.\n\n- When fetching M2M tokens with a Machine Secret Key, only tokens associated with the authenticated machine can be retrieved.\n- When fetching M2M tokens with a Clerk Secret Key, tokens for any machine in the instance can be retrieved."
					},
					"response": [
						{
							"id": "781399-1e0fa09e-3453-4d5b-a4aa-8d91bbfbee30",
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/m2m_tokens?subject=mch_PWHgPhOnLY7eHF73JHZ9XPmXhMv&revoked=false&expired=false&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"m2m_tokens"
									],
									"query": [
										{
											"key": "subject",
											"value": "mch_PWHgPhOnLY7eHF73JHZ9XPmXhMv"
										},
										{
											"key": "revoked",
											"value": "false"
										},
										{
											"key": "expired",
											"value": "false"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"m2m_tokens\": [\n    {\n      \"object\": \"machine_to_machine_token\",\n      \"id\": \"mt_f7f0ba8c3b4843ce7d85fcdd5e71853e\",\n      \"subject\": \"mch_2xhFjEI5X2qWRvtV13BzSj8H6Dk\",\n      \"revoked\": false,\n      \"revocation_reason\": \"Revoked by user\",\n      \"expired\": false,\n      \"expiration\": 1716883200,\n      \"last_used_at\": 1716883200,\n      \"created_at\": 1716883200,\n      \"updated_at\": 1716883200,\n      \"claims\": {\n        \"important_metadata\": \"Some useful data\"\n      },\n      \"scopes\": [\n        \"mch_2xhFjEI5X2qWRvtV13BzSj8H6Dk\",\n        \"mch_2yGkLpQ7Y3rXSwtU24CzTk9I7Em\"\n      ]\n    },\n    {\n      \"object\": \"machine_to_machine_token\",\n      \"id\": \"mt_f7f0ba8c3b4843ce7d85fcdd5e71853e\",\n      \"subject\": \"mch_2xhFjEI5X2qWRvtV13BzSj8H6Dk\",\n      \"revoked\": false,\n      \"revocation_reason\": \"Revoked by user\",\n      \"expired\": false,\n      \"expiration\": 1716883200,\n      \"last_used_at\": 1716883200,\n      \"created_at\": 1716883200,\n      \"updated_at\": 1716883200,\n      \"claims\": {\n        \"important_metadata\": \"Some useful data\"\n      },\n      \"scopes\": [\n        \"mch_2xhFjEI5X2qWRvtV13BzSj8H6Dk\",\n        \"mch_2yGkLpQ7Y3rXSwtU24CzTk9I7Em\"\n      ]\n    }\n  ],\n  \"total_count\": 1688.37312819478\n}"
						},
						{
							"id": "781399-f8731b83-0cc1-4860-84b2-25c9c6528a88",
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/m2m_tokens?subject=mch_PWHgPhOnLY7eHF73JHZ9XPmXhMv&revoked=false&expired=false&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"m2m_tokens"
									],
									"query": [
										{
											"key": "subject",
											"value": "mch_PWHgPhOnLY7eHF73JHZ9XPmXhMv"
										},
										{
											"key": "revoked",
											"value": "false"
										},
										{
											"key": "expired",
											"value": "false"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"Bad Request\",\n      \"long_message\": \"Invalid 'url_parameter.example': Failed regex check\",\n      \"code\": \"bad_request\"\n    },\n    {\n      \"message\": \"Bad Request\",\n      \"long_message\": \"Invalid 'url_parameter.example': Failed regex check\",\n      \"code\": \"bad_request\"\n    }\n  ]\n}"
						},
						{
							"id": "781399-39c23ad6-9bcd-47e1-9284-2480c7b50f4e",
							"name": "403 Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/m2m_tokens?subject=mch_PWHgPhOnLY7eHF73JHZ9XPmXhMv&revoked=false&expired=false&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"m2m_tokens"
									],
									"query": [
										{
											"key": "subject",
											"value": "mch_PWHgPhOnLY7eHF73JHZ9XPmXhMv"
										},
										{
											"key": "revoked",
											"value": "false"
										},
										{
											"key": "expired",
											"value": "false"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"some details about the error\",\n      \"long_message\": \"some details about the error\",\n      \"code\": \"some_error_code\"\n    },\n    {\n      \"message\": \"some details about the error\",\n      \"long_message\": \"some details about the error\",\n      \"code\": \"some_error_code\"\n    }\n  ]\n}"
						},
						{
							"id": "781399-c52d8f48-8680-4935-8ed1-2667a84371ed",
							"name": "404 Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/m2m_tokens?subject=mch_PWHgPhOnLY7eHF73JHZ9XPmXhMv&revoked=false&expired=false&limit=10&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"m2m_tokens"
									],
									"query": [
										{
											"key": "subject",
											"value": "mch_PWHgPhOnLY7eHF73JHZ9XPmXhMv"
										},
										{
											"key": "revoked",
											"value": "false"
										},
										{
											"key": "expired",
											"value": "false"
										},
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"errors\": [\n    {\n      \"message\": \"some details about the error\",\n      \"long_message\": \"some details about the error\",\n      \"code\": \"some_error_code\"\n    },\n    {\n      \"message\": \"some details about the error\",\n      \"long_message\": \"some details about the error\",\n      \"code\": \"some_error_code\"\n    }\n  ]\n}"
						}
					]
				}
			],
			"id": "781399-52dd8bb7-6bf3-43be-9866-ea60d401c378"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.clerk.com/v1"
		}
	]
}